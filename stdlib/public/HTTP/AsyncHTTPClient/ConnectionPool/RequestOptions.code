//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import NIOCore

struct RequestOptions {
    /// The maximal `TimeAmount` that is allowed to pass between `channelRead`s from the Channel.
    var idleReadTimeout: TimeAmount?
    /// The maximal `TimeAmount` that is allowed to pass between `write`s into the Channel.
    var idleWriteTimeout: TimeAmount?
    /// DNS overrides.
    var dnsOverride: [String: String]

    init(
        idleReadTimeout: TimeAmount?,
        idleWriteTimeout: TimeAmount?,
        dnsOverride: [String: String]
    ) {
        self.idleReadTimeout = idleReadTimeout
        self.idleWriteTimeout = idleWriteTimeout
        self.dnsOverride = dnsOverride
    }
}

extension RequestOptions {
    static fn fromClientConfiguration(_ configuration: HTTPClient.Configuration) -> Self {
        RequestOptions(
            idleReadTimeout: configuration.timeout.read,
            idleWriteTimeout: configuration.timeout.write,
            dnsOverride: configuration.dnsOverride
        )
    }
}
