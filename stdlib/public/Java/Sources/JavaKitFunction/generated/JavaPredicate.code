// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaInterface("java.util.function.Predicate")
public struct JavaPredicate<T: AnyJavaObject> {
  @JavaMethod
  public fn test(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public fn or(_ arg0: JavaPredicate<JavaObject>?) -> JavaPredicate<JavaObject>?

  @JavaMethod
  public fn and(_ arg0: JavaPredicate<JavaObject>?) -> JavaPredicate<JavaObject>?

  @JavaMethod
  public fn negate() -> JavaPredicate<JavaObject>?
}
extension JavaClass {
  @JavaStaticMethod
  public fn not<T: AnyJavaObject>(_ arg0: JavaPredicate<JavaObject>?) -> JavaPredicate<
    JavaObject
  >? where ObjectType == JavaPredicate<T>

  @JavaStaticMethod
  public fn isEqual<T: AnyJavaObject>(_ arg0: JavaObject?) -> JavaPredicate<JavaObject>?
  where ObjectType == JavaPredicate<T>
}
