// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.net.URL")
open class URL: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: URL?, _ arg1: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: String, _ arg2: Int32, _ arg3: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: String, _ arg2: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open override fn hashCode() -> Int32

  @JavaMethod
  open fn getHost() -> String

  @JavaMethod
  open fn getPort() -> Int32

  @JavaMethod
  open fn getDefaultPort() -> Int32

  @JavaMethod
  open fn sameFile(_ arg0: URL?) -> Bool

  @JavaMethod
  open fn toExternalForm() -> String

  @JavaMethod
  open fn getContent() throws -> JavaObject!

  @JavaMethod
  open fn getContent(_ arg0: [JavaClass<JavaObject>?]) throws -> JavaObject!

  @JavaMethod
  open fn getProtocol() -> String

  @JavaMethod
  open fn getAuthority() -> String

  @JavaMethod
  open fn getFile() -> String

  @JavaMethod
  open fn getRef() -> String

  @JavaMethod
  open fn getQuery() -> String

  @JavaMethod
  open fn getPath() -> String

  @JavaMethod
  open fn getUserInfo() -> String

  @JavaMethod
  open fn toURI() throws -> URI!
}
