// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaInterface("java.util.List")
public struct List<E: AnyJavaObject> {
  @JavaMethod
  public fn remove(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  public fn remove(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public fn size() -> Int32

  @JavaMethod
  public fn get(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  public fn equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public fn hashCode() -> Int32

  @JavaMethod
  public fn indexOf(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  public fn clear()

  @JavaMethod
  public fn lastIndexOf(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  public fn isEmpty() -> Bool

  @JavaMethod
  public fn add(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public fn add(_ arg0: Int32, _ arg1: JavaObject?)

  @JavaMethod
  public fn subList(_ arg0: Int32, _ arg1: Int32) -> List<JavaObject>!

  @JavaMethod
  public fn toArray() -> [JavaObject?]

  @JavaMethod
  public fn toArray(_ arg0: [JavaObject?]) -> [JavaObject?]

  @JavaMethod
  public fn iterator() -> JavaIterator<JavaObject>!

  @JavaMethod
  public fn contains(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public fn addAll(_ arg0: Int32, _ arg1: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  public fn addAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  public fn set(_ arg0: Int32, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  public fn getFirst() -> JavaObject!

  @JavaMethod
  public fn getLast() -> JavaObject!

  @JavaMethod
  public fn addFirst(_ arg0: JavaObject?)

  @JavaMethod
  public fn addLast(_ arg0: JavaObject?)

  @JavaMethod
  public fn removeFirst() -> JavaObject!

  @JavaMethod
  public fn removeLast() -> JavaObject!

  @JavaMethod
  public fn removeAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  public fn retainAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  public fn listIterator() -> ListIterator<JavaObject>!

  @JavaMethod
  public fn listIterator(_ arg0: Int32) -> ListIterator<JavaObject>!

  @JavaMethod
  public fn reversed() -> List<JavaObject>!

  @JavaMethod
  public fn containsAll(_ arg0: JavaCollection<JavaObject>?) -> Bool
}
extension JavaClass {
  @JavaStaticMethod
  public fn copyOf<E: AnyJavaObject>(_ arg0: JavaCollection<JavaObject>?) -> List<JavaObject>! where ObjectType == List<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?, _ arg3: JavaObject?, _ arg4: JavaObject?, _ arg5: JavaObject?, _ arg6: JavaObject?) -> List<JavaObject>! where ObjectType == List<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?, _ arg1: JavaObject?) -> List<JavaObject>! where ObjectType == List<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?) -> List<JavaObject>! where ObjectType == List<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>() -> List<JavaObject>! where ObjectType == List<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?, _ arg3: JavaObject?, _ arg4: JavaObject?, _ arg5: JavaObject?, _ arg6: JavaObject?, _ arg7: JavaObject?, _ arg8: JavaObject?) -> List<JavaObject>! where ObjectType == List<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?, _ arg3: JavaObject?) -> List<JavaObject>! where ObjectType == List<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?, _ arg3: JavaObject?, _ arg4: JavaObject?) -> List<JavaObject>! where ObjectType == List<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?) -> List<JavaObject>! where ObjectType == List<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?, _ arg3: JavaObject?, _ arg4: JavaObject?, _ arg5: JavaObject?) -> List<JavaObject>! where ObjectType == List<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?, _ arg3: JavaObject?, _ arg4: JavaObject?, _ arg5: JavaObject?, _ arg6: JavaObject?, _ arg7: JavaObject?) -> List<JavaObject>! where ObjectType == List<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: [JavaObject?]) -> List<JavaObject>! where ObjectType == List<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?, _ arg3: JavaObject?, _ arg4: JavaObject?, _ arg5: JavaObject?, _ arg6: JavaObject?, _ arg7: JavaObject?, _ arg8: JavaObject?, _ arg9: JavaObject?) -> List<JavaObject>! where ObjectType == List<E>
}
