// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.util.TreeMap")
open class TreeMap<K: AnyJavaObject, V: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open fn remove(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open fn size() -> Int32

  @JavaMethod
  open fn get(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open fn put(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open fn values() -> JavaCollection<JavaObject>!

  @JavaMethod
  open override fn clone() -> JavaObject!

  @JavaMethod
  open fn clear()

  @JavaMethod
  open fn replace(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?) -> Bool

  @JavaMethod
  open fn replace(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open fn putIfAbsent(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open fn containsKey(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open fn keySet() -> JavaSet<JavaObject>!

  @JavaMethod
  open fn containsValue(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open fn firstKey() -> JavaObject!

  @JavaMethod
  open fn putFirst(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open fn putLast(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open fn lowerKey(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open fn floorKey(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open fn ceilingKey(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open fn higherKey(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open fn lastKey() -> JavaObject!
}
extension TreeMap {
  @JavaClass("java.util.AbstractMap$SimpleEntry")
  open class SimpleEntry<K: AnyJavaObject, V: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaObject?, _ arg1: JavaObject?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open override fn hashCode() -> Int32

  @JavaMethod
  open fn getValue() -> JavaObject!

  @JavaMethod
  open fn getKey() -> JavaObject!

  @JavaMethod
  open fn setValue(_ arg0: JavaObject?) -> JavaObject!
  }
}
extension TreeMap {
  @JavaClass("java.util.AbstractMap$SimpleImmutableEntry")
  open class SimpleImmutableEntry<K: AnyJavaObject, V: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaObject?, _ arg1: JavaObject?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open override fn hashCode() -> Int32

  @JavaMethod
  open fn getValue() -> JavaObject!

  @JavaMethod
  open fn getKey() -> JavaObject!

  @JavaMethod
  open fn setValue(_ arg0: JavaObject?) -> JavaObject!
  }
}
