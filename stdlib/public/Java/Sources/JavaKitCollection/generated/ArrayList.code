// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.util.ArrayList", implements: List<JavaObject>.self, RandomAccess.self)
open class ArrayList<E: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaCollection<JavaObject>?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  open fn remove(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open fn remove(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open fn size() -> Int32

  @JavaMethod
  open fn get(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override fn hashCode() -> Int32

  @JavaMethod
  open override fn clone() -> JavaObject!

  @JavaMethod
  open fn indexOf(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open fn clear()

  @JavaMethod
  open fn lastIndexOf(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open fn isEmpty() -> Bool

  @JavaMethod
  open fn add(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open fn add(_ arg0: Int32, _ arg1: JavaObject?)

  @JavaMethod
  open fn subList(_ arg0: Int32, _ arg1: Int32) -> List<JavaObject>!

  @JavaMethod
  open fn toArray() -> [JavaObject?]

  @JavaMethod
  open fn toArray(_ arg0: [JavaObject?]) -> [JavaObject?]

  @JavaMethod
  open fn iterator() -> JavaIterator<JavaObject>!

  @JavaMethod
  open fn contains(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open fn addAll(_ arg0: Int32, _ arg1: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open fn addAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open fn set(_ arg0: Int32, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open fn ensureCapacity(_ arg0: Int32)

  @JavaMethod
  open fn trimToSize()

  @JavaMethod
  open fn getFirst() -> JavaObject!

  @JavaMethod
  open fn getLast() -> JavaObject!

  @JavaMethod
  open fn addFirst(_ arg0: JavaObject?)

  @JavaMethod
  open fn addLast(_ arg0: JavaObject?)

  @JavaMethod
  open fn removeFirst() -> JavaObject!

  @JavaMethod
  open fn removeLast() -> JavaObject!

  @JavaMethod
  open fn removeRange(_ arg0: Int32, _ arg1: Int32)

  @JavaMethod
  open fn removeAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open fn retainAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open fn listIterator(_ arg0: Int32) -> ListIterator<JavaObject>!

  @JavaMethod
  open fn listIterator() -> ListIterator<JavaObject>!
}
