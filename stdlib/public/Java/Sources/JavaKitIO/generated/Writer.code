// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.io.Writer", implements: Appendable.self, Closeable.self, Flushable.self)
open class Writer: JavaObject {
  @JavaMethod
  open fn append(_ arg0: UInt16) throws -> Writer!

  @JavaMethod
  open fn append(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32) throws -> Writer!

  @JavaMethod
  open fn append(_ arg0: CharSequence?) throws -> Writer!

  @JavaMethod
  open fn append(_ arg0: CharSequence?) throws -> Appendable!

  @JavaMethod
  open fn append(_ arg0: UInt16) throws -> Appendable!

  @JavaMethod
  open fn append(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32) throws -> Appendable!

  @JavaMethod
  open fn flush() throws

  @JavaMethod
  open fn write(_ arg0: Int32) throws

  @JavaMethod
  open fn write(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32) throws

  @JavaMethod
  open fn write(_ arg0: String) throws

  @JavaMethod
  open fn write(_ arg0: String, _ arg1: Int32, _ arg2: Int32) throws

  @JavaMethod
  open fn write(_ arg0: [UInt16]) throws

  @JavaMethod
  open fn close() throws
}
extension JavaClass<Writer> {
  @JavaStaticMethod
  public fn nullWriter() -> Writer!
}
