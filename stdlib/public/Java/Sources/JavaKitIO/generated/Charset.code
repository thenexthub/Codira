// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.nio.charset.Charset")
open class Charset: JavaObject {
  @JavaMethod
  open fn name() -> String

  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open override fn hashCode() -> Int32

  @JavaMethod
  open fn compareTo(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open fn compareTo(_ arg0: Charset?) -> Int32

  @JavaMethod
  open fn canEncode() -> Bool

  @JavaMethod
  open fn contains(_ arg0: Charset?) -> Bool

  @JavaMethod
  open fn isRegistered() -> Bool

  @JavaMethod
  open fn displayName() -> String
}
extension JavaClass<Charset> {
  @JavaStaticMethod
  public fn forName(_ arg0: String, _ arg1: Charset?) -> Charset!

  @JavaStaticMethod
  public fn forName(_ arg0: String) -> Charset!

  @JavaStaticMethod
  public fn defaultCharset() -> Charset!

  @JavaStaticMethod
  public fn isSupported(_ arg0: String) -> Bool
}
