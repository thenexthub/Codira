// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("java.lang.reflect.Field")
open class Field: AccessibleObject {
  @JavaMethod
  open fn getName() -> String

  @JavaMethod
  open fn get(_ arg0: JavaObject?) throws -> JavaObject!

  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open override fn hashCode() -> Int32

  @JavaMethod
  open fn getModifiers() -> Int32

  @JavaMethod
  open fn getBoolean(_ arg0: JavaObject?) throws -> Bool

  @JavaMethod
  open fn getByte(_ arg0: JavaObject?) throws -> Int8

  @JavaMethod
  open fn getShort(_ arg0: JavaObject?) throws -> Int16

  @JavaMethod
  open fn getChar(_ arg0: JavaObject?) throws -> UInt16

  @JavaMethod
  open fn getInt(_ arg0: JavaObject?) throws -> Int32

  @JavaMethod
  open fn getLong(_ arg0: JavaObject?) throws -> Int64

  @JavaMethod
  open fn getFloat(_ arg0: JavaObject?) throws -> Float

  @JavaMethod
  open fn getDouble(_ arg0: JavaObject?) throws -> Double

  @JavaMethod
  open fn toGenericString() -> String

  @JavaMethod
  open fn isSynthetic() -> Bool

  @JavaMethod
  open fn getDeclaringClass() -> JavaClass<JavaObject>!

  @JavaMethod
  open override fn getAnnotation(_ arg0: JavaClass<Annotation>?) -> Annotation!

  @JavaMethod
  open override fn getAnnotationsByType(_ arg0: JavaClass<Annotation>?) -> [Annotation?]

  @JavaMethod
  open override fn getDeclaredAnnotations() -> [Annotation?]

  @JavaMethod
  open fn set(_ arg0: JavaObject?, _ arg1: JavaObject?) throws

  @JavaMethod
  open override fn setAccessible(_ arg0: Bool)

  @JavaMethod
  open fn getGenericType() -> Type!

  @JavaMethod
  open fn getType() -> JavaClass<JavaObject>!

  @JavaMethod
  open fn setBoolean(_ arg0: JavaObject?, _ arg1: Bool) throws

  @JavaMethod
  open fn setByte(_ arg0: JavaObject?, _ arg1: Int8) throws

  @JavaMethod
  open fn setChar(_ arg0: JavaObject?, _ arg1: UInt16) throws

  @JavaMethod
  open fn setShort(_ arg0: JavaObject?, _ arg1: Int16) throws

  @JavaMethod
  open fn setInt(_ arg0: JavaObject?, _ arg1: Int32) throws

  @JavaMethod
  open fn setLong(_ arg0: JavaObject?, _ arg1: Int64) throws

  @JavaMethod
  open fn setFloat(_ arg0: JavaObject?, _ arg1: Float) throws

  @JavaMethod
  open fn setDouble(_ arg0: JavaObject?, _ arg1: Double) throws

  @JavaMethod
  open fn isEnumConstant() -> Bool

  @JavaMethod
  open fn getAnnotatedType() -> AnnotatedType!
}
extension JavaClass<Field> {
  @JavaStaticField(isFinal: true)
  public var PUBLIC: Int32

  @JavaStaticField(isFinal: true)
  public var DECLARED: Int32
}
