// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("java.util.jar.Attributes")
open class Attributes: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Attributes?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open fn remove(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open fn size() -> Int32

  @JavaMethod
  open fn get(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open fn put(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open fn values() -> JavaCollection<JavaObject>!

  @JavaMethod
  open override fn hashCode() -> Int32

  @JavaMethod
  open override fn clone() -> JavaObject!

  @JavaMethod
  open fn clear()

  @JavaMethod
  open fn getValue(_ arg0: String) -> String

  @JavaMethod
  open fn getValue(_ arg0: Attributes.Name?) -> String

  @JavaMethod
  open fn isEmpty() -> Bool

  @JavaMethod
  open fn containsKey(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open fn keySet() -> JavaSet<JavaObject>!

  @JavaMethod
  open fn containsValue(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open fn putValue(_ arg0: String, _ arg1: String) -> String
}
extension Attributes {
  @JavaClass("java.util.jar.Attributes$Name")
  open class Name: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, environment: JNIEnvironment? = nil)

  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open override fn hashCode() -> Int32
  }
}
extension JavaClass<Attributes.Name> {
  @JavaStaticField(isFinal: true)
  public var MANIFEST_VERSION: Attributes.Name!

  @JavaStaticField(isFinal: true)
  public var SIGNATURE_VERSION: Attributes.Name!

  @JavaStaticField(isFinal: true)
  public var CONTENT_TYPE: Attributes.Name!

  @JavaStaticField(isFinal: true)
  public var CLASS_PATH: Attributes.Name!

  @JavaStaticField(isFinal: true)
  public var MAIN_CLASS: Attributes.Name!

  @JavaStaticField(isFinal: true)
  public var SEALED: Attributes.Name!

  @JavaStaticField(isFinal: true)
  public var EXTENSION_LIST: Attributes.Name!

  @JavaStaticField(isFinal: true)
  public var EXTENSION_NAME: Attributes.Name!

  @JavaStaticField(isFinal: true)
  public var EXTENSION_INSTALLATION: Attributes.Name!

  @JavaStaticField(isFinal: true)
  public var IMPLEMENTATION_TITLE: Attributes.Name!

  @JavaStaticField(isFinal: true)
  public var IMPLEMENTATION_VERSION: Attributes.Name!

  @JavaStaticField(isFinal: true)
  public var IMPLEMENTATION_VENDOR: Attributes.Name!

  @JavaStaticField(isFinal: true)
  public var IMPLEMENTATION_VENDOR_ID: Attributes.Name!

  @JavaStaticField(isFinal: true)
  public var IMPLEMENTATION_URL: Attributes.Name!

  @JavaStaticField(isFinal: true)
  public var SPECIFICATION_TITLE: Attributes.Name!

  @JavaStaticField(isFinal: true)
  public var SPECIFICATION_VERSION: Attributes.Name!

  @JavaStaticField(isFinal: true)
  public var SPECIFICATION_VENDOR: Attributes.Name!

  @JavaStaticField(isFinal: true)
  public var MULTI_RELEASE: Attributes.Name!
}
