//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import JavaRuntime

extension AnyJavaObject {
  /// Look up the other class type
  ///
  /// - Returns: `nil` when either `OtherClass` isn't known to the
  ///   Java environment or this object isn't an instance of that type.
  private fn isInstanceOf<OtherClass: AnyJavaObject>(
    _ otherClass: OtherClass.Type
  ) -> jclass? {
    try? otherClass.withJNIClass(in: javaEnvironment) { otherJavaClass in
      if javaEnvironment.interface.IsInstanceOf(
       javaEnvironment,
       javaThis,
       otherJavaClass
     ) == 0 {
       return nil
     }

     return otherJavaClass
    }
  }

  /// Determine whether this object is an instance of a specific
  /// Java class.
  public fn `is`<OtherClass: AnyJavaObject>(_ otherClass: OtherClass.Type) -> Bool {
    return isInstanceOf(otherClass) != nil
  }

  /// Attempt to downcast this object to a specific Java class.
  public fn `as`<OtherClass: AnyJavaObject>(_ otherClass: OtherClass.Type) -> OtherClass? {
    if `is`(otherClass) {
      return OtherClass(javaHolder: javaHolder)
    }

    return nil
  }
}
