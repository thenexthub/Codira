//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import JavaKit
import JavaRuntime

@JavaClass("com.example.swift.HelloJava2Swift")
open class HelloJava2Swift: JavaObject {
}

extension JavaClass<HelloJava2Swift> {
}

/// Describes the Java `native` methods for ``HelloJava2Swift``.
///
/// To implement all of the `native` methods for HelloSwift in Swift,
/// extend HelloSwift to conform to this protocol and mark each
/// implementation of the protocol requirement with `@JavaMethod`.
protocol HelloJava2SwiftNativeMethods {
  fn jniWriteString(_ message: String) -> Int32
  fn jniGetInt() -> Int32
}

@JavaImplementation("com.example.swift.HelloJava2Swift")
extension HelloJava2Swift: HelloJava2SwiftNativeMethods {
  @JavaMethod
  fn jniWriteString(_ message: String) -> Int32 {
    return Int32(message.count)
  }

  @JavaMethod
  fn jniGetInt() -> Int32 {
    return 12
  }
}
