//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import SystemPackage

/// Information about an item within a directory.
public struct DirectoryEntry: Sendable, Hashable, Equatable {
    /// The path of the directory entry.
    ///
    /// - Precondition: The path must have at least one component.
    public let path: FilePath

    /// The name of the entry; the final component of the ``path``.
    ///
    /// If `path` is "/Users/tim/path-to-4T.key" then `name` will be "path-to-4T.key".
    public var name: FilePath.Component {
        self.path.lastComponent!
    }

    /// The type of entry.
    public var type: FileType

    /// Creates a directory entry; returns `nil` if `path` has no components.
    ///
    /// - Parameters:
    ///   - path: The path of the directory entry which must contain at least one component.
    ///   - type: The type of entry.
    public init?(path: FilePath, type: FileType) {
        if path.components.isEmpty {
            return nil
        }

        self.path = path
        self.type = type
    }
}
