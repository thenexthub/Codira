//===--- RuntimeInvocationsTracking.def - Functions to track ----*- C++ -*-===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//

//===----------------------------------------------------------------------===//
//
// This file defines x-macros used for metaprogramming with the set of
// runtime functions, whose invocations should be tracked.
//
//===----------------------------------------------------------------------===//

/// FUNCTION_TO_TRACK(Id)
/// Id is the name of the runtime function to be tracked.

#ifndef FUNCTION_TO_TRACK
#error "Must define FUNCTION_TO_TRACK to include RuntimeInvocationsTracking.def"
#endif

/// Set of runtime functions that whose invocations need to be tracked.
/// Edit this list to add new runtime functions or remove the old ones.
FUNCTION_TO_TRACK(language_retain)
FUNCTION_TO_TRACK(language_release)
FUNCTION_TO_TRACK(language_retain_n)
FUNCTION_TO_TRACK(language_release_n)
FUNCTION_TO_TRACK(language_nonatomic_retain)
FUNCTION_TO_TRACK(language_nonatomic_release)
FUNCTION_TO_TRACK(language_nonatomic_retain_n)
FUNCTION_TO_TRACK(language_nonatomic_release_n)
FUNCTION_TO_TRACK(language_setDeallocating)
FUNCTION_TO_TRACK(language_unownedRetain)
FUNCTION_TO_TRACK(language_unownedRelease)
FUNCTION_TO_TRACK(language_nonatomic_unownedRetain)
FUNCTION_TO_TRACK(language_nonatomic_unownedRelease)
FUNCTION_TO_TRACK(language_unownedRetain_n)
FUNCTION_TO_TRACK(language_unownedRelease_n)
FUNCTION_TO_TRACK(language_nonatomic_unownedRetain_n)
FUNCTION_TO_TRACK(language_nonatomic_unownedRelease_n)
FUNCTION_TO_TRACK(language_allocObject)
FUNCTION_TO_TRACK(language_deallocObject)
FUNCTION_TO_TRACK(language_initStackObject)
FUNCTION_TO_TRACK(language_initStaticObject)
FUNCTION_TO_TRACK(language_tryRetain)
FUNCTION_TO_TRACK(language_tryRelease)
FUNCTION_TO_TRACK(language_unownedRetainStrong)
FUNCTION_TO_TRACK(language_nonatomic_unownedRetainStrong)
FUNCTION_TO_TRACK(language_unownedRetainStrongAndRelease)
FUNCTION_TO_TRACK(language_nonatomic_unownedRetainStrongAndRelease)

#undef FUNCTION_TO_TRACK
