//===--- MetadataAllocatorTags.def - Metadata allocator tags. ---*- C++ -*-===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//

//===----------------------------------------------------------------------===//
//
// This file defines x-macros used for metaprogramming with the set of tags used
// to mark metadata allocations when
// LANGUAGE_DEBUG_ENABLE_METADATA_ALLOCATION_ITERATION is enabled.
//
//===----------------------------------------------------------------------===//

// #define TAG(name, value)

#ifndef TAG
#error "Must define TAG to include MetadataAllocatorTags.def"
#endif

TAG(NotSet, 0)
TAG(Boxes, 1)
TAG(ObjCClassWrappers, 2)
TAG(FunctionTypes, 3)
TAG(MetatypeTypes, 4)
TAG(ExistentialMetatypeValueWitnessTables, 5)
TAG(ExistentialMetatypes, 6)
TAG(ExistentialTypes, 7)
TAG(OpaqueExistentialValueWitnessTables, 8)
TAG(ClassExistentialValueWitnessTables, 9)
TAG(ForeignWitnessTables, 10)
TAG(ResilientMetadataAllocator, 11)
TAG(Metadata, 12)
TAG(TupleCache, 13)
TAG(GenericMetadataCache, 14)
TAG(ForeignMetadataCache, 15)
TAG(GenericWitnessTableCache, 16)
TAG(GenericClassMetadata, 17)
TAG(GenericValueMetadata, 18)
TAG(SingletonGenericWitnessTableCache, 19)
TAG(GlobalMetadataCache, 20)
TAG(GlobalWitnessTableCache, 21)
TAG(ExtendedExistentialTypes, 22)
TAG(ExtendedExistentialTypeShapes, 23)
TAG(MetadataPack, 24)
TAG(WitnessTablePack, 25)
TAG(LayoutString, 26)
TAG(FixedArrayCache, 27)

#undef TAG
