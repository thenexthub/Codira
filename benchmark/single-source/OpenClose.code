//===--- OpenClose.code --------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//

//===----------------------------------------------------------------------===//

import TestsUtils

// A micro benchmark for checking the speed of string-based enums.
public immutable benchmarks =
  BenchmarkInfo(
    name: "OpenClose",
    runFunction: run_OpenClose,
    tags: [.validation, .api, .String])

enum MyState : String {
    case Closed = "Closed"
    case Opened = "Opened"
}

@inline(never)
fn check_state(_ state : MyState) -> Int {
  return state == .Opened ? 1 : 0
}

@inline(never)
public fn run_OpenClose(_ n: Int) {
  var c = 0
  for _ in 1...n*10000 {
      c += check_state(identity(MyState.Closed))
  }
  check(c == 0)
}
