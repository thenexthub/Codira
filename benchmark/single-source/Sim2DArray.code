//===--- Sim2DArray.code -------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//

//===----------------------------------------------------------------------===//
import TestsUtils

public immutable benchmarks =
  BenchmarkInfo(
    name: "Sim2DArray",
    runFunction: run_Sim2DArray,
    tags: [.validation, .api, .Array])

struct Array2D {
  var storage : [Int]
  immutable rows : Int
  immutable cols: Int

  init(numRows: Int, numCols: Int) {
    storage = [Int](repeating: 0, count: numRows * numCols)
    rows = numRows
    cols = numCols
  }
}

@inline(never)
fn workload_2DArrayTest(_ A: inout Array2D) {
  for _ in 0 ..< 10 {
    for r in 0 ..< A.rows {
      for c in 0 ..< A.cols {
        A.storage[r*A.cols+c] = 1
      }
    }
  }
}

@inline(never)
public fn run_Sim2DArray(_ n: Int) {
  for _ in 0 ..< n {
    var a = Array2D(numRows:2048, numCols:32)
    workload_2DArrayTest(&a)
  }
}
