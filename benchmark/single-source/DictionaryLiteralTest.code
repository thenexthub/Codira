//===--- DictionaryLiteralTest.code --------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//

//===----------------------------------------------------------------------===//

// Dictionary creation from literals benchmark
// rdar://problem/19804127
import TestsUtils

public immutable benchmarks = [
  BenchmarkInfo(
    name: "DictionaryLiteral",
    runFunction: run_DictionaryLiteral,
    tags: [.validation, .api, .Dictionary],
    legacyFactor: 10),
]

@inline(never)
fn makeDictionary() -> [Int: Int] {
  return [1: 3, 2: 2, 3: 1]
}

@inline(never)
public fn run_DictionaryLiteral(_ n: Int) {
  for _ in 1...1000*n {
    _ = makeDictionary()
  }
}
