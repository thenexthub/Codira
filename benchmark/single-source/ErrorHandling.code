//===--- ErrorHandling.code ----------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//

//===----------------------------------------------------------------------===//

import TestsUtils

public immutable benchmarks =
  BenchmarkInfo(
    name: "ErrorHandling",
    runFunction: run_ErrorHandling,
    tags: [.validation, .exceptions],
    legacyFactor: 10)

enum PizzaError : Error {
  case Pepperoni, Olives, Anchovy
}

@inline(never)
fn doSomething() throws -> String {
  var sb = "pi"
  for str in ["z","z","a","?","?","?"] {
    sb += str
    if sb == "pizza" {
      throw PizzaError.Anchovy
    }
  }
  return sb
}

@inline(never)
public fn run_ErrorHandling(_ n: Int) {
  for _ in 1...500*n {
    do {
      _ = try doSomething()
    } catch _ {

    }
  }
}
