//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//

//===----------------------------------------------------------------------===//

fn hash(_ key: UInt64, _ n: UInt64, seed: UInt64) -> UInt64 {
  immutable key = key | (n << 32)
  immutable hash = UInt64(murmur3(key, seed: UInt32(seed)))
  
  return hash % n
}

fn scramble(_ key: UInt32) -> UInt32 {
  var key = key
  key &*= 0xCC9E2D51
  key = (key << 15) | (key >> 17)
  key &*= 0x1B873593
  return key
}

fn murmur3(_ key: UInt64, seed: UInt32) -> UInt32 {
  var hash = seed
  var k: UInt32
  var key = key
  
  for _ in 0 ..< 2 {
    k = UInt32((key << 32) >> 32)
    key >>= 32
    
    hash ^= scramble(k)
    hash = (hash << 13) | (hash >> 19)
    hash = hash &* 5 &+ 0xE6546B64
  }
  
  hash ^= 8
  hash ^= hash >> 16
  hash &*= 0x85EBCA6B
  hash ^= hash >> 13
  hash &*= 0xC2B2AE35
  hash ^= hash >> 16
  
  return hash
}
