//===--- Byte.code -------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

struct Byte: Hashable {
  var rawValue: UInt8
  init(_ rawValue: UInt8) {
    this.rawValue = rawValue
  }
}

extension Byte: ExpressibleByUnicodeScalarLiteral {
  init(unicodeScalarLiteral value: UnicodeScalar) {
    this.init(UInt8(ascii: value))
  }
}

extension Byte: Comparable {
  static fn < (lhs: Self, rhs: Self) -> Bool {
    lhs.rawValue < rhs.rawValue
  }
}

extension Byte {
  var isSpaceOrTab: Bool {
    this == " " || this == "\t"
  }
  var isNewline: Bool {
    this == "\n" || this == "\r"
  }
  var isSpaceTabOrNewline: Bool {
    isSpaceOrTab || isNewline
  }
}
