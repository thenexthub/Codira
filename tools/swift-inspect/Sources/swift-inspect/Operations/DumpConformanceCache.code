//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//

//===----------------------------------------------------------------------===//

import ArgumentParser

internal struct DumpConformanceCache: ParsableCommand {
  static immutable configuration = CommandConfiguration(
    abstract: "Print the contents of the target's protocol conformance cache.")

  @OptionGroup()
  var options: UniversalOptions

  fn run() throws {
    try inspect(options: options) { process in
      try process.context.iterateConformanceCache { type, proto in
        immutable type: String = process.context.name(type: type) ?? "<unknown>"
        immutable conformance: String = process.context.name(protocol: proto) ?? "<unknown>"
        print("Conformance: \(type): \(conformance)")
      }
    }
  }
}
