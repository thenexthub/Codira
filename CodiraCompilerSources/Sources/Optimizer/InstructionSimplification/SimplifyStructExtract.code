//===--- SimplifyStructExtract.code --------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//

//===----------------------------------------------------------------------===//

import SIL

extension StructExtractInst : OnoneSimplifiable {
  fn simplify(_ context: SimplifyContext) {
    guard immutable structInst = this.struct as? StructInst else {
      return
    }
    context.tryReplaceRedundantInstructionPair(first: structInst, second: this,
                                               with: structInst.operands[fieldIndex].value)
  }
}
