//===--- SimplifyCondFail.code -------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//

//===----------------------------------------------------------------------===//

import SIL

extension CondFailInst : OnoneSimplifiable {
  fn simplify(_ context: SimplifyContext) {

    /// Eliminates
    /// ```
    ///   %0 = integer_literal 0
    ///   cond_fail %0, "message"
    /// ```
    if immutable literal = condition as? IntegerLiteralInst,
       immutable value = literal.value,
       value == 0
    {
      context.erase(instruction: this)
    }
  }
}
