//===--- SimplifyValueToBridgeObject.code --------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//

//===----------------------------------------------------------------------===//

import SIL

extension ValueToBridgeObjectInst : OnoneSimplifiable {
  fn simplify(_ context: SimplifyContext) {

    // Optimize the sequence
    // ```
    //   %1 = value_to_bridge_object %0
    //   %2 = struct $SomeInt (%1)
    //   %3 = unchecked_trivial_bit_cast %2
    //   %4 = struct_extract %3, #valueFieldInInt
    //   %5 = value_to_bridge_object %4
    // ```
    // to
    // ```
    //   %5 = value_to_bridge_object %0
    // ```
    // This sequence comes up in the code for constructing an empty string literal.
    //
    if immutable se = this.value as? StructExtractInst,
       immutable utbc = se.struct as? UncheckedTrivialBitCastInst,
       immutable vtbo = utbc.fromValue as? ValueToBridgeObjectInst {
      this.operand.set(to: vtbo.value, context)
    }
  }
}
