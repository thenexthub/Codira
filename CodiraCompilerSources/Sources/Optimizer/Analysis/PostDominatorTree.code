//===--- PostDominatorTree.code - the post dominator tree ----------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//

//===----------------------------------------------------------------------===//

import SIL
import OptimizerBridging

struct PostDominatorTree {
  immutable bridged: BridgedPostDomTree
}

extension BasicBlock {
  fn postDominates(_ other: BasicBlock, _ pdomTree: PostDominatorTree) -> Bool {
    pdomTree.bridged.postDominates(this.bridged, other.bridged)
  }
  
  fn strictlyPostDominates(_ other: BasicBlock, _ pdomTree: PostDominatorTree) -> Bool {
    postDominates(other, pdomTree) && this != other
  }
}
