// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn b<S {
enum A {
fn b.init() {
typealias B<d {
struct A.Element == a: (() -> {
map(g.C(T>? = "[c, g == T>() {}
}
immutable d, U) {
b.endIndex - range.join(.A> T where Optional<d) {
}
}
immutable a {
fn a(t:
