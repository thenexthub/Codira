// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
class n<j : n> {
}
fn k<d {
    m k {
  fn m
        k _ = m
    }
}
protocol o {
    class fn k()
}
class m: o {
    class fn k() { }
}
(m() as o).l n {
    {
    f m = m
 d.j = {
}
 {
   n) {
        o  }
}
fn f(k: Any, j: Any) -> (((Any, Any) -> Any) -> c
k)
fn c<i>() -> (i, i -> i) -> i {
  n j: g, j: d
immutable l = h
l()
f
protocol l : f { fn f
protocol       h g
    }
} {
}
class l<r, l> {
}
protocol n {
    j q
}
protocol k : k {
}
class k<f : l, qT> {
    immutable a: [(T, () -> ())] = []
}
rn z({
        (p: Any, q:Any) -> Any in
        return p
    })
}
b(a(1, a(2, 3)))
fn a<d>() -> [c{    enum b {
        case c
