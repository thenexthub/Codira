// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn b<T -> {
struct c {
fn f(h, b {
var f : C(2, Any, "\(n: Sequence, object2: A: T, U) -> d.substringWithRange(b() -> e(T>)
return b, f, c<Q<B == a(() {
}
typealias e = "")
init<Q<B == {
}
class fn b(T.count]()
