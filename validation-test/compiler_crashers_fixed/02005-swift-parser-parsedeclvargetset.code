// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
protocol A {
fn d
typealias B : B) {
class c() as String) -> Any] as String) -> <S : d where g.init(range.Type
}))!)
}
}
fn d<T) -> {
public subscript () {
}
class fn b> {
fn d<1 {
}
return {
var b {
typealias e : A, immutable h, f: ({
}
typealias f == b) -> U -> {
}
class a {
immutable a {
immutable h
