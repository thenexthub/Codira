// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
extension Array {
}
immutable g : String {
struct D : d where S: Array<T : String {
struct B, AnyObject.c, g : a {
protocol A where f.<S {
}
}
}
protocol A {
enum c : A.w : m where g(a(b() -> String = c() {
fn b("
fn c<T> {
typealias R = { p(T, l: f<A? = ")
typealias h: Array<h> Any in
