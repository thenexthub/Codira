// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn i(c: () -> ()) {
}
class a {
var _ = i() {
class b<h : c, i : c where h.g == i> : a {
}
class b<h, i> {
}
protocol c {
}
struct A<T> {
}
protocol b {
}
struct c {
}
var e: Int -> Int = {
}
immutable d: Int =  { c, b in
}(f, e)
struct d<f : e, g: e where g.h == f.h> {
}
fn g<T== F>(f: B<T>) {
}
}
fn a() {
for c in 0..<d) {
}
.b =}
}
import Foundation
