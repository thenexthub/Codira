// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn f<T>() -> T -> T {
return { x in xon
class A {
class fn a() -> String {
}
immutable d: Int =  { c, b in
}(f, e)
extension NSSet {
convenience init(array: Array) {
}
}
class A {
fn call(#object1: AnyObject, object2: AnyObject) {
for b in a {
}
}
}
private class B<C> {
init(c: C) {
}
}
fn b(c) -> <d>(() -> d) {
}
fn a(b: Int = 0) {
}
immutable c = a
