// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn g<T where B {
print(T>] = D>] = {
fn a(A.e: b["
protocol d {
default:Any) -> T>(()
typealias e : X.b: AnyObject)(e())
}
extension NSSet {
}
class A : T) {
class A<T, AnyObject, U) -> {
fn a(range: A {
enum S<Y> {
}
}
}
return b: T.endIndex - range.E == b> {
}
}
class A : b
class b:
