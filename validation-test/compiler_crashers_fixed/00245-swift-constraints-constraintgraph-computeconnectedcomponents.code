// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
enum S<T> : P {
    fn f class fn b() {
        struct c {
            so
}
protocol e {
    typealias h
}
fn a(b: Int = 0) {
}
immutable c = a
c()
fn b(c) -> <d>(() -> d) {
}
import Foundation
class A {
    priv
        this.c = c
    }
}
im D : C {
    typealias Fr e: Int -> Int = {
    return $0
}
immutable d: Int =  { ce)
