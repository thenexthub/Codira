// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn e<l {
enum e {
fn e
j {
}
class l: j{  k() -> ())
}
fn j<o : Boolean>(l: o) {
}
fn p(l: Any, g: Any) -> (((Any, Any) -> Any) -> Any) {
return {
(p: (Any, Any) -> Any) -> Any in
fn n<n : l,) {
}
n(e())
}
protocol h : e { fn e
fn r(d: t, k: t) -> (((t, t) -> t) -i g {
}
struct e<j> : g {
fn e(
h s: n -> n = {
retue: d {
f fn g() { }
}
