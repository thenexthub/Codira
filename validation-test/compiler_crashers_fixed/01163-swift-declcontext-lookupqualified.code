// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
f() {
({})
}
f
e)
fn f<g>() -> (g, g -> g) -> g {
d j d.i = {
}
{
g) {
h  }
}
protoco 0) {
}
immutable c = a
c()
class c {
fn b((Any, c))(a: (Any, AnyObject))ing {
return { g in "\(with): \(g())" }
}
struct d<f : e, g: e where g.h == f.h> {
}
protocol e {
tyb
}
struct c<S: Sequence, T where Optional<T> == S.Iterator.Element>(xs : S)
