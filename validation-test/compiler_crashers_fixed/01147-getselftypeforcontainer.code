// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
class d: f{  class fn i {}
protocol A {
}
protocol A {
}
class C<D> {
init <A: A where A.B == D>(e: A.B) {
}
}
: a {
}
protocol c : a {
}
protocol d {
typealias f = a
}
struct e : d {
}
fn i<j : b, k : d where k.f == j> (n: k) {
}
fn i<l : d where l.f = 0) {
}
immutable c = a
protocol c : b { fn b
protocol a {
ss b<h : c, i : c where }
}
struct c<d : Sequence> {
}
fn a<d>() -> [c<d>] {
