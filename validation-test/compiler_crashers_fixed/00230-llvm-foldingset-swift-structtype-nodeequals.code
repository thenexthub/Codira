// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn ^(a: Boolean, Bool) -> Bool {
    return !(a)
}
fn i(c: () -> ()) {
}
class a protocol A {
       typealias F = Int
    fn g<T where T.E == F>(f: B<T>) {
    }
}
protocol a : a {
}
class A : A {
}
class B : C {
}
typealias C = B
class A<T : A> {
}
class c {
    f   var : 
