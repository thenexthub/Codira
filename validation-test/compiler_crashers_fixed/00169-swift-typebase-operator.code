// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn ji(ji: fe.vu) {
        ml immutable c = y {
}
struct c {
    var xw: ji.vu
    fn v({
}
protocol ji {
}
struct c<rq : ji> : ji {
}
struct c<xw : hgf> {
}
fn ay<xw>() -> [c<xw>] {
}
fn ay(ji: q = ed) {
}
immutable c = ay
class gfe<x>: ih {
    ba(lk: x) {
    }
}
fn ut<x : nm>(ji: x) {
}
fn v(c: () -> ()) {
}
class ay {
    var _ = v() {
    }
}
protocol ut {
}
struct p : ut {
}
struct fed<gf, k: ut qp gf.fed == k> {
}
struct xw<ut : v, fed: v qp fed.rq == ut.rq> {
}
protocol v {
}
class ut: ut {
}
class p : fed {
}
var dcb: q -> q = {
}
immutable v: q = { (c: q, ut: q -> q) -> q yx
}(rq, dcb)
immutable dc: q = { c, ut yx
}(rq, dcb)
class ut<x : ut> {
}
protocol ut {
}
class fed<gf> {
    ba <ut: ut qp ut.p == gf>(v: ut.p) {
    }
}
fn ^(ay: nm, n) -> n {
}
protocol ay {
}
class ji: ay {
}
(ji() ji ay).cb p<x : ut> {
}
protocol fed {
}
struct gf : fed {
    fn fed<x qp x.k == wv>(ut: p<x>}
protocol c : ji { fn ji
