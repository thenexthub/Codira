// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
extension Array {
struct S<T where I.advance(Any, (A<A> (()
b> : A> Any) -> T) -> {
}
enum S) -> String {
public subscript () -> Self {
return b(x) {
}
}
struct e : a {
deinit {
struct A {
}
}
fn c, immutable c<T {
fn b(c : AnyObject, Any] as [".advance() -> V>([]
protocol a {
protocol a
