// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
struct c {
var d: b.Type
f<T> {
}
fn a<T>() -> (T, T -> T) -> T {
}
struct d<f : e, g: e where g.h == f.h> {
}
protocol e {
}
protocol A {
}
class B {
fn d() -> String {
}
}
class C: B, A {
override fn d() -> String {
}
fn c() -> String {
}
}
fn e<T where T: A, T: B>(t: T) {
}
class c {
fn b((Any, c))(a: (Any, AnyObject)) {
}
}
fn i(c: () -> ()) {
}
class a {
var _ = i() {
}
}
fn b(c) -> <d>(() -> d) {
}
class A<T : A> {
}
struct c<d, e: b where d.c == e> {
}
protocol A {
}
struct B<T : A> {
}
protocol C {
}
struct D : C {
fn g<T where T.E == F>(f: B<T>) {
}
}
protocol a {
}
class b<h : c, i : c where h.g == i> : a {
