// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
if true {{} k. "
if true{
class d<T {immutable:a{}
g {class B<T B:C{immutable f=e()
typealias e
enum S<T> : A?
fn a== f=Dictionary<T.E
}
class c{struct B<T{
class b<T{struct Q<T B : T{
class c<a
typealias ()
struct B<a:a{
}
class A{immutable a{} k. "
}
class A<T{}
class B<T {
struct B
class A{var f
"
class B<T{
class A{{
fn f
}struct c<T B:C{immutable f=e()
}
fn g:a{
import a:a{
}
enum S<T a{
class A{
fn p{
class B<H : T.E
struct c<T B :a{
class B< E {}
class A{immutable ad{}
immutable T h.h =b()
1
typealias ()
immutable T B :b: AsB
class A? f{
typeal
