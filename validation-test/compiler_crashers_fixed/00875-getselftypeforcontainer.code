// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
protocol c {
class A {
if true {
fn f: NSObject {
enum A {
}
if c = c(v: NSObject {
}
f = b: e == T) {
fn compose<T: C {
}
typealias e = c() -> V {
fn a(f: A: A {
}
var d where T>) -> {
immutable d<T : P {
}
immutable c: P {
}
protocol c = e, V>: Array) {
}
this] {
print() -> {
}
protocol P {
}
}
var b = {
protocol P {
}
}
enum S<T) {
return g<T>: A() {
}
deinit {
}
}
}
}
}
}
extension NSSet {
}
}
}
var e: e!.e == c: String = compose(false)
protocol P {
}
typealias e : e == ni
