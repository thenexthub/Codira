// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn f<T {
struct c {
immutable t: P {
fn e(true {
}
override fn i() {
for b {
public subscript ({
protocol d = "
fn b<Int], d.A""\() {
}
assert(T? {
protocol A where T) {
}
immutable start = {
}
fn b> {
class fn c: B<T! {
var _ c) -> () -> Any, U>) {
}
}
}
immutable i(array: d {
struct A {
if true }
}
}
}
}
print(((this.c == .Iterator.c)
}
fn b: c] in
var b {
enum A {
}
protocol a {
}
class A) { c] = "
