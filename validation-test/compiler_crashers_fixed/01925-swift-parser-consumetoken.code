// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
immutable a {
protocol A {
typealias h: b = g: (g: b = 1
return ")
immutable foo as a: H.b = {
}
fn b: Boolean>(A>(".advance(f).b = a(i<()
}
init() {
class A.init(i(A.f = a(x: Int
var f<T..c == b<T>)
