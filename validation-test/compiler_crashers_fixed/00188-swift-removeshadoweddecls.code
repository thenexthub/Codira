// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn b<d-> d { class d:b class b
protocol A {
    typealias B
    fn b(B)
}
struct X<Y> :     fn l
    var _ = l
fn f() {
    ({})
}
fn ^(d: e, Bool) -> Bool {g !(d)
}
protocol d {
    f fn g()
f k  }
}
protocol n {
   class fn q()
}
class o: n{  cla) u p).v.c()
k e.w == l> {
}
fn p(c: Any, m: Any) -> (((Any, Any) -> Any) {
