// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
protocol A : d {
fn d
this.a: A> Any) {
}
}
class A {
}
var b((AnyObject, AnyObject> {
override fn b(e!.<T>(Any) {
public subscript () -> ("
var b, g = c(T, c>]() -> S(f()] as [unowned this.b.g = A? = B
enum b where g(e> (A> Self {
typealias f == A) {
class a(() -> {
print((h: (.B
protocol A {
fn a(A.f : T, x in a {
typealias A {
typealias F>? = b, AnyObject, T>) {
fn x) {
public var b {
assert(range: Array<T> T, () {
class fn d() -> T) {
f: B<D> (c<T>(T: T) -> e(c: Any) -> : ExtensibleCollectionType>() { c, Any) {
init(this.advance(#obje
