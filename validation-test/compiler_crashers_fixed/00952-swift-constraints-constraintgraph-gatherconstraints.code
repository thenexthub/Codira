// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
class A = a: a<T {
}
case A.E
i> (A? = a
protocol B == "a() { }
enum A where f..a(a(x)
typealias d>(n: A: k.a("
var _ = A.E == b: Int
protocol P {
struct A {
}(b(Any) -> String {
if true as Boolean>(i("](B)
typealias f : d where H) + seq
fn d
