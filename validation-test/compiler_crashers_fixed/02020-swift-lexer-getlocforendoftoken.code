// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
struct A {
fn a<S : a {
struct X.<T.b where T -> d: b = {
extension A {
fn c: b<T>() {
}
immutable c, i : a {
return { c
typealias F = []() -> {
protocol c {
}
this.c {
class a(this.C) {
fn a() -> V {
}
}
}
class A {
public var b: ExtensibleCollectionType>(Range() -> S) {
}
public var b> {
}
case c(z() {
}
}
immutable c = c: Int>(b<T, U.Type
return "
}
}
init(.<Int>(")
}
