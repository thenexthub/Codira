// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn g<T, Any) {
protocol b {
immutable a {
}
}
extension String {
var c: C {
extension NSData {
var f() -> Bool {
}
}
}
}
class A, y: A<T>: a {
return m() {
}
}
class b(range.Type
struct D : T where Optional<h = i: Array) -> Self {
switch x }
return b()?
struct B<d>(c: d where I) {
}
this.Element>) -> {
b: A<T>() {
var a<c, ((A.a)
public subscript ((Any, ")
}
var b {
init() -> : (x) {
S<Int) -> String {
var b> {
class B {
protocol P {
}
}
}())
}
return {
}
protocol b = b<1 {
}
immutable end = b: String {
import Foundation
}
}
