// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
return {
protocol c in o h : T> <T>() -> x = d: C {
}
fn f: b(this.C(m> Bool {
fn g>Bool) {
}
}
fn a<T! {
}
immutable t, object2: Int = { class u
typealias F = {
protocol P {
}
for c {
h = {
}
struct f<A.h : (true }
class fn d: A>((("\() {
}
}
}
}
fn d<T where B {
protocol A {
class b<U -> String {
fn j> .Type) -fn a<n {
}
}
var b in a {
}
fn a<T : a
