// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
immutable a {
protocol a {
}
class fn c: a {
fn o<T.C<A, b : Any) -> == r: e {
class B : c) {
}
struct c {
fn f<T ->>] = i<T> {
class c where d, V, k, AnyObject, b where T.f : P {
}
class B =ay) {
}
fn d() -> : C> Int -> T>() {
class A: a {
struct S()) {
}
protocol c = { class B == F>) -> Int {
fn c(")) {
class fn x: a {
}
}
}
})-> i(Any) {
class A<U {
}
}
}
class c {
struct }
protocol c {
typealias f : f() {
