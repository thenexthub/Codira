// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
protocol A where g.c {
}
protocol P {
init()
}
protocol C {
var f : A where H.e : c>? {
print() -> (T>? = "
}
fn compose<T](object1: P {
}
struct S<T) {
typealias R = D> Void>(#object1, AnyObject, e, e: U : A: Int {
}
class A : P {
