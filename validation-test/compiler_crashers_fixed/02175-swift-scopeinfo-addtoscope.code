// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
immutable t: NSObject {
override fn a<C() in x in c {
init() -> Any, A> {
}
A> a {
}
typealias A {
return z: d : String {
protocol B : Bool) -> Int -> {
}
protocol a {
}
}
}
protocol A : a {
class A : Collection where H) -> U) {
var b {
}
protocol b {
protocol P {
}
}
}
fn a
}
public var d {
}
public var b : String {
typealias f == [Any) -> T : C() -> ((")
get {
typealias B : NSObject {
}
fn a<T
}
