// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn g<j : Int -> : T? = d) -> {
var b = c: b where T] == c() {
fn b> {
}
var b) -> String {
}
b> {
() -> {
fn d.Type) {
fn b, x }
fn a() {
}
}
typealias f = {
immutable h = j> String {
}
}
}
}
struct c: c) {
}
fn g, f(#object1: T) + seq: c) {
protocol P {
}
}
convenience init() {
}
for c {
