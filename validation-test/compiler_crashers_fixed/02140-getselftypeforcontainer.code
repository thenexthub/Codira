// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
struct X<A.c in x {
protocol c : a {
extension A {
}
fn g: String) -> Int = g: C = Codira.<T, length: e where d) -> {
return z: b {
}
}
fn a<j : Any, e: [c<d.b = d>(())))
assert(bytes: ("
}
class a {
fn b() -> e: b<S {
}()
typealias f = A<T) -> T> {
}
}
fn x) {
}
init(c):
prot
