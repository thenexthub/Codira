// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
// This test was tweaked slightly from the original
// 1480-language-typebase-getcanonicaltype.code, because an unrelated change
// happened to avoid the crash.
fn a(a: a {
return x in c {
}
struct c {
class A, e: a {
}
}
protocol a {
}
}
protocol a {
protocol c in c {
case c: a {
}
}
protocol c : b where d: b: a {
return ")
case ..c<c>(n: String {
}
typealias b : d
init(i(this] {
f: A) {
this.join(x) {
return !(true {
}
var b = a() -> Any))
}
}
}
class A : String {
}
protocol a {
}
protocol a {
}
typealias d>()
