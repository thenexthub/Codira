// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
return m() {
get {
}
fn a: Any) {
class A {
typealias b = {
}
}
}
class a {
}
var _ c(a<1 {
typealias B<1 {
typealias B : b: (false)() {
}
immutable b = Int) -> {
case c>(Any, g : Collection where T> (g, end: 1, AnyObject.C: Any] {
struct c {
a")
}
}
}
}
class fn a(T, () -> U {
}
fn g<T where T) {
class B<3] {
class fn a<T : a {
