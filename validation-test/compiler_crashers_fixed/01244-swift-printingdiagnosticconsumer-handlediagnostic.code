// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
protocol c {
typealias b
:c.b
protocol d : b { fn b
fn d(e:  = { (g: h, f: h -> h) -> h in
}
fn b<e>(e : e) -> c { e
{ g in "\(withing
}
class k {
fn l((Any, k))(m }
}
fn j<f: l: e -> e = {
{
l) {
m  }
}
protocol k {
}
class e: k{  class fn j
class A {
class fn a() -> String {
}
class fn b() {
struct c {
static immutable d: String = {
}()
}
}
}
immutable d{
protocol c
