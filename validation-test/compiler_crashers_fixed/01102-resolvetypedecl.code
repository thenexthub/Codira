// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn c<e>() -> (e -> e) -> e {
e, e -> e) ->)fn d(f: b) -> <e>(() -> e) -> b {
struct c<d : Sequence> {
var b:  [c<d>] {
}
protocol a {
}
class b: a {
}
fn f<T : Boolean>(b: T) {
}
fn e() {
}
}
protocol c : b { fn b
otocol A {
}
struct  }
}
class a<b : b, d : b where b.d == d> {
}
protocol b {
typealias d
typealias e = a<c<h>, d>
}
struct c<d, e: b where d.c == e
