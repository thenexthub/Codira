// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
init() {
() -> String {
this.c> Self {
}
fn g<d where T! {
immutable t: [c) {
}
fn b(array: Collection where T> U -> {
fn d<T where B {
b) {
var d where B : C<Int) { x = a<d where A> ((false)) {
fn g<d where T> () {
print() {
typealias d.c(this.d = c<T>((1]
c>(e: S) {
return [T {
fn f(x, A, y: Any) {
protocol B {
}
}
b("cd"")
}
}
}
protocol A {
typealias B : b {
fn a(Any) -> T where S("
typealias b = a"""
