// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn compose<T, AnyObject.B == A: a {
struct d: NSManagedObject {
immutable f = a(t: String {
d: NSManagedObject {
}
deinit {
}
typealias e = c, b in a {
struct Q<T>(f: Array<T) {
}
}
}
b.c: A.h = nil
fn b> Int {
