// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
struct c {
protocol A {
immutable x {
}
}
fn g.i {
}
protocol a {
}
protocol a {
protocol b : Array) -> {
fn a("foobar""")""foobar"
typealias e : h === 1]
immutable h : e()
class A<j : ji.b {
var d = e() {
immutable t: d = { class fn f<T: NSManagedObject {
}
fn a<T where H) -> {
protocol b in c {
}
fn b.e() {
fn ^(
typealias e : Int = {
h = [")
}
}
init() -> S {
protocol c v: l -> {
case C([]).<f : d {
enum e(j,
