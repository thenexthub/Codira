// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
import CoreData
fn e<l {
enum e {
j {
}
class l: j{  k() -> ())
}
fn j<o : Boolean>(l: o) {
}
fn p(l: Any, g: Any) -> (((Any, Any) -> Any) -> Any) {
return {
}
protocol f {
protocol c : b { fn b
class x<u>:  where T.E == F>}
class A {
class fn a() -> String {
}
class fn b() {
struct c {
static immutable d: String = {
}()
}
}
}
class l {
}
}
class i: d, g {
l fn d() -> f {
}
}
}
immutable l = h
protocol l : f { fn f
