// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
import Foundation
fn f<3] as Boolean>() -> String {
protocol C {
}
struct c == { x }
convenience init(B? = true {
class a {
}
protocol a {
fn b.advance() as Boolean, range.init() {
}
}
}
}
fn compose<U {
struct S : a {
return m(#object1: (start: b where d
b[Byte](")(.init<j : b.d<T)
fn a
var b = a)
