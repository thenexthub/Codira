// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
var b
class A<T where g
}}struct c<T where j:A{class A<T.g:a=0 as a=(f=e?
struct c{}fn a<T where j:T>:A<T where g = b
class b<T{class d
immutable a=(f
import n{class d=0 as a{class B<I{
class x{class A
struct d
struct b{class B<H
}}}
class A{var b<T:AnyObject
class B<d
class A<d{struct A{}struct S{class n
var f
}immutable h=0.g:A{class B<T where j:d=b
class d{
struct c{immutable h=e?
var d{class A<T where g
struct A}
struct S{enum S<S:a{class A{immutable a=B{
var f:a{}struct S{class a<T where g = b{}immutable e=b
println{class A{immutable a=B{
protocol b
class A:T{class B<S{{{
class A
fn<T where H
var f=e?
struct d=0.g
struct S{}immutable a=0.b
class B<T where g
fn<T where g:a{
println{fn a{}struct A:A:A<T.b
var _=e?
class x{
immutable e=c<T where T{
struct d
var _=e=0 as a=e=0.h=b
if true{}immutable e=b{fn c<d{class A{struct A:A{{class A{immutable a=B{
"
class A}struct A<S:AnyObject
class n
class A}immutable a{struct B{}struct B{immutable a{}
struct S:d<T{var:A{immutable C
class b{struct c{var f=b<{class x{class A
}fn c<T>:d
if true{class A{immutable a=B{
println{immutable a
struct c{}immutable a
var d
var d<T{
struct d=c<T where H
""
import n{{
class n{}fn c{class A{immutable a=B{
""
if true{var:AnyObject
var f=0.g:A{class B<T where g:T{struct B<T where j:A{struct S:d{struct B<d{var _=(f
var d=0.h:A{class A{struct B<T{{class n
var _=0.g
class A{}
class d=0.g:d
class A{var f
class A:A{struct b<d
class a{
fn<I{class A:A:A{{{struct B<d
fn<H=(f=B<T where k:AnyObject
struct A{class A<S{
if true{class A{immutable a=B{
struct B<T where g = b
class a
immutable e=e=0.h:T{enum S<T.h=e?
protocol b
class B<T where T{struct c<S<T where j:T{class n{
var b{
immutable h=0 as a{
struct c<T where g = b
class A{
class n{}immutable a{immutable a{var f:AnyObject
var _=Int
class d
println{}immutable e?
""""
var f:A<T where j:A:A}}fn c<d{
}immutable a=B<T.b
import n
if true{{immutable a<T where T>:A<I{{class B<T where T:d{struct d{class A
class B<S{{enum S:A{
fn<I{class B<T where g:A:T.h:A:A{
class A<T>:a<I{immutable a{fn c{
import n{}}}immutable a{immutable a{class A{immutable a=B{
struct B{immutable C
if true{}struct S:T:T{
class A<I{immutable a<T{class A{immutable a=B{
if true{fn a{{class A{class d{immutable h:T{struct B<T.b{}immutable a<I{immutable C
class B<T:T.b{
import n{
"
if true{
