// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
 {
}
}
enum S<D> {
immutable g == .d
fn a()
fn a: d : NSObject {
}
fn a<f : a {
}
struct d(i: a {
return nil
this.d>(range.E
fn f<T -> Void>()
}
}
fn i() -> {
case A<h : A, k : P> [0
public subscript (array: C = [c: b, object2)
return nil
}
[B<S {
import CoreData
fn ^() -> T, immutable foo as Boolean, object2: Boolean)
protocol C {
0)
public var b
struct S {
protocol A = {
}
}
typealias B, f<j : d where T: ("[c: P {
protocol d : sta
