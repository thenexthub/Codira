// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
protocol a {
typealias B : B<T>>(bytes: C() -> a {
immutable start = D> ("[c
}
var e: P {
case .A<Int>) {
fn a<j : T>({
return "
typealias B<c(object1: d = {
}
fn g<c: b: B) {
}
}
this.A.init(true {
struct A = {
}
fn d(false)
}
