// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
enum B : a {
struct c {
class a)
b, x {
typealias F = {
}
}
fn a<T : a {
fn i(i<T.C() ->>) {
return ",""""))-> {
enum S() {
}
fn i: T) {
}
fn b<b: () {
if c where B {
struct A(a(b) + seq: b: X<T) -> T -> T : Int = {
protocol d where T where f<f = {
case .Iterator.a<H : a: d where T where I) {
}
}
