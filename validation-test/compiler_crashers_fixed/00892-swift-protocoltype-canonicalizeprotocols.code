// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
extension String {
struct S {
fn g: A where Optional<1 {
fn d.advance(this, length: Sequence> (g.init("]]
class b<d.startIndex, AnyObject) {
case C<h, e: A {
}
protocol A {
typealias E
convenience init()
}
}
struct d<T -> d) -> String {
var d {
class A {
fn b() -> Any {
deinit {
}
return "ab"[T : A.Element == b(Any))
