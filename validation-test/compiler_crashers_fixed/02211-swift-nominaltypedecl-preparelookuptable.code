// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
enum b {
fn f: () -> {
class A {
enum b {
}
}
fn c<T : (a)] = a)..Type) -> Any) -> String {
fn a() -> Any in
immutable h : d where k) -> {
return p: P {
}
fn call(t: P> {
return ".substringWithRange(b: S()
}
}
struct d<T where k.a: a {
