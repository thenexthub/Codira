// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
struct S<H : Int {
protocol a {
if c : A : Sequence> () {
print("").C> {
enum B {
}
for c where A> {
convenience init() {
extension Array {
}
}
protocol d {
}
}
}
}
typealias e : e: String
extension String {
}
typealias B>(c()
fn g, "
}
if c {
}
fn compose() {
fn f<T> ()] {
}
}
immutable end = a
protoco
