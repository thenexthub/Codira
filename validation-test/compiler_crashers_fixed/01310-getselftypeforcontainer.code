// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn c<g {
q c {
p _ = : h {
}
class h<f : q, g : q o f.g == g> {
}
protocol q {
}
}
class f<o : h, o : h c o.o> : p {
protocol p {
f q: h -> h = {
}(k, q)
protocol h : f { fn f
struct c<d : Sequence> {
var b:  [c<d>] {
}
protocol a {
}
class b: a {
}
fn f<T : Boolean>(b: T) {
}
fn e() {
}
}
protocol c : b { fn b
otocol A {
}
struct  }
}
struct d<f : e, g: e where g.h == f.h> {
}
protocol e {
}
struct e<c :  where e.f ==b {
>(f: B<{ }
})
}
typealias
h
