// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn f<T) {
class A {
class A {
class A {
immutable n1: c<B : d {
}
convenience init(()) {
typealias b {
}
struct c(this)) in c == j> {
enum S<T, c, this.f == 0] as String) {
init <c, AnyObject) {
}
}
protocol c {
}
enum A {
}
}
}
class fn f):
class B : a {
typealias f = A> Any, Any, x }
}
class a()
p
