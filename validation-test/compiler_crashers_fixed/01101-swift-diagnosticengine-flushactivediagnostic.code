// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn f<o>() -> (o, o -> o) -> o {
o m o.j = {
}
{
o) {
r  }
}
p q) {
}
class m {
struct d<f : e, g: e where g.h == f.h> {
}
protocol e {
}
protocol A {
}
struct B<T : A> {
lett D : C {
fn g<T where T.E == F>(f: B<T>) {
}
}
struct d<f : e, g: e where g.h == f.h> {
col P {
}
}
}
i   struct c {
c a(b: Int0) {
}
protocol d : b { fn b
fn d(e:  = { (g:A {
}
class C<D> {
init <A: A where A.B == D>(e: A.B) {
}
}
fn g<T where T.E = {
}
struct D : C {
fn g<T where T.E == F>(f:
