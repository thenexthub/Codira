// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn j<f: l: e -> e = {
{
l) {
m  }
}
protocol k {
class fn j()
}
class e: k{  class fn j
}
class i {
fn d((h: (Any, AnyObject)) {
}
}
fn d<i>() -> (i, i -> i) -> i {
i j i.f = {
}
protocol d {
}
class i: d{  class fn f {}
enum A : String {
}
struct d<f : e, g: e where g.h == f.h> {
}
}
extension d) {
}
fn a() {
c a(b: Int = 0) {
}
fn m<u>() -> (u, u -> u) -> u {
p o p.s = {
}
{
o.m == o> (m: o) {
}
st.C == E> {s fn c() { }
}
}
st> {
}
fn prefix(with: Strin-> <r>(() -> r) -> h {
n { u o "\(v): \(u()" }
