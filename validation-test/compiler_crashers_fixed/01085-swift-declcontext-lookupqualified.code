// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
struct B<T : A> {
fn f<g>() -> (g, g -> g) -> g {
d j d.i = {
}
{
g) {
h  }
}
protocol f {
}
class d: f{  class fn i {}
struct d<f : e,e where g.h == f.h> {
}
}
protocol a {
typeal= D>(e: A.B) {
}
}
}
override fn d() -> String {
fn}
fn b((Any, c))(Any, AnyObject
fn g<T where T.E == F>(f: B<T>) {
}
struct c<S: Sequence, T where Optional<T> == S.Iterator.Element>
