// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn j<f: l: e -> e = {
{
l) {
m  }
}
protocol k {
class fn j()
}
class e: k{  class fn j
fn g<h>() -> (h, h -> h) -> h {
}
protocol f {
protocol c : b { fn b
class x<u>:  where T.E == F>}
class A {
class fn a() -> Self {
}
}
fn b<T>(t: AnyObject.Type) }
protocol e {
}
enum S<T> : P {
fn f<T>() -> T col f : b { fn b
struct d<f : e, g: e where g.h ==ay) {
}
}
extension NSSet {
convenience init<T>(array: Array<T>) {
}
}
class A {
struct d
