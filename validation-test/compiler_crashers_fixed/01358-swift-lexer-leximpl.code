// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli

// RUN: not %target-language-frontend %s -typecheck
fn f: String {
extension A where I) {
}
var d {
fn d.R
protocol c : a {
class fn a)
protocol d {
}
}
extension NSSet {
}
static immutable c] = {
}
}
var f: b[0x31] as Boolean, range.C: String {
class A {
}
return "".Type) -> {
}
class A {
immutable c {
return [Int) {
immutable n1: T -> {
return {
class A, f<T, immutable t: () {
print(e(g> Any) {
immutable b {
fn g([0
protocol d : T, e(A.c(Any, T>() { c, this.init(f.c {
typealias F>(f(i
