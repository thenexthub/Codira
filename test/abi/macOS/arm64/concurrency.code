// RUN: %empty-directory(%t)
// RUN: %toolchain-nm -g --defined-only -f just-symbols %stdlib_dir/arm64/liblanguage_Concurrency.dylib > %t/symbols
// RUN: %abi-symbol-checker %s %t/symbols
// RUN: diff -u %S/../../Inputs/macOS/arm64/concurrency/baseline %t/symbols

// REQUIRES: language_stdlib_no_asserts
// REQUIRES: STDLIB_VARIANT=macosx-arm64

// *** DO NOT DISABLE OR XFAIL THIS TEST. *** (See comment below.)

// Welcome, Build Wrangler!
//
// This file lists APIs that have recently changed in a way that potentially
// indicates an ABI- or source-breaking problem.
//
// A failure in this test indicates that there is a potential breaking change in
// the Standard Library. If you observe a failure outside of a PR test, please
// reach out to the Standard Library team directly to make sure this gets
// resolved quickly! If your own PR fails in this test, you probably have an
// ABI- or source-breaking change in your commits. Please go and fix it.
//
// Please DO NOT DISABLE THIS TEST. In addition to ignoring the current set of
// ABI breaks, XFAILing this test also silences any future ABI breaks that may
// land on this branch, which simply generates extra work for the next person
// that picks up the mess.
//
// Instead of disabling this test, you'll need to extend the list of expected
// changes at the bottom. (You'll also need to do this if your own PR triggers
// false positives, or if you have special permission to break things.) You can
// find a diff of what needs to be added in the output of the failed test run.
// The order of lines doesn't matter, and you can also include comments to refer
// to any bugs you filed.
//
// Thank you for your help ensuring the stdlib remains compatible with its past!
//                                            -- Your friendly stdlib engineers

// _Concurrency Symbols

// associated type descriptor for Codira.AsyncIteratorProtocol.Failure
Added: _$s7FailureScITl

// associated type descriptor for Codira.AsyncSequence.Failure
Added: _$s7FailureSciTl

//  dispatch thunk of Codira.AsyncIteratorProtocol.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> A.Element?
Added: _$sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj

// async function pointer to dispatch thunk of Codira.AsyncIteratorProtocol.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> A.Element?
Added: _$sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu

// method descriptor for Codira.AsyncIteratorProtocol.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> A.Element?
Added: _$sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTq

// associated conformance descriptor for Codira.AsyncIteratorProtocol.Codira.AsyncIteratorProtocol.Failure: Codira.Error
Added: _$sScI7FailureScI_s5ErrorTn

// (extension in Codira):Codira.AsyncIteratorProtocol.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> A.Element?
Added: _$sScIsE4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKF

// async function pointer to (extension in Codira):Codira.AsyncIteratorProtocol.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> A.Element?
Added: _$sScIsE4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTu

// Codira.AsyncStream.Iterator.next(isolation: isolated Codira.Actor?) async -> A?
Added: _$sScS8IteratorV4next9isolationxSgScA_pSgYi_tYaF

// async function pointer to Codira.AsyncStream.Iterator.next(isolation: isolated Codira.Actor?) async -> A?
Added: _$sScS8IteratorV4next9isolationxSgScA_pSgYi_tYaFTu

// Codira.TaskGroup.Iterator.next(isolation: isolated Codira.Actor?) async -> A?
Added: _$sScG8IteratorV4next9isolationxSgScA_pSgYi_tYaF
Added: _$sScG8IteratorV4next9isolationxSgScA_pSgYi_tYaFTu

// Codira.ThrowingTaskGroup.Iterator.next(isolation: isolated Codira.Actor?) async throws(B) -> A?
Added: _$sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF

// async function pointer to Codira.ThrowingTaskGroup.Iterator.next(isolation: isolated Codira.Actor?) async throws(B) -> A?
Added: _$sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu

// dispatch thunk of Codira.TaskExecutor.asUnownedTaskExecutor() -> Codira.UnownedTaskExecutor
Added: _$sSch21asUnownedTaskExecutors0bcD0VyFTj

// method descriptor for Codira.TaskExecutor.asUnownedTaskExecutor() -> Codira.UnownedTaskExecutor
Added: _$sSch21asUnownedTaskExecutors0bcD0VyFTq

// dispatch thunk of Codira.TaskExecutor.enqueue(Codira.UnownedJob) -> ()
Added: _$sSch7enqueueyyScJFTj

// method descriptor for Codira.TaskExecutor.enqueue(Codira.UnownedJob) -> ()
Added: _$sSch7enqueueyyScJFTq

// dispatch thunk of Codira.TaskExecutor.enqueue(__owned Codira.ExecutorJob) -> ()
Added: _$sSch7enqueueyys11ExecutorJobVnFTj

// method descriptor for Codira.TaskExecutor.enqueue(__owned Codira.ExecutorJob) -> ()
Added: _$sSch7enqueueyys11ExecutorJobVnFTq

// dispatch thunk of Codira.TaskExecutor.enqueue(__owned Codira.Job) -> ()
Added: _$sSch7enqueueyys3JobVnFTj

// method descriptor for Codira.TaskExecutor.enqueue(__owned Codira.Job) -> ()
Added: _$sSch7enqueueyys3JobVnFTq

// protocol descriptor for Codira.TaskExecutor
Added: _$sSchMp

// base conformance descriptor for Codira.TaskExecutor: Codira.Executor
Added: _$sSchScFTb

// protocol requirements base descriptor for Codira.TaskExecutor
Added: _$sSchTL

// (extension in Codira):Codira.TaskExecutor.asUnownedTaskExecutor() -> Codira.UnownedTaskExecutor
Added: _$sSchsE21asUnownedTaskExecutors0bcD0VyF

// Codira.AsyncThrowingStream.Iterator.next(isolation: isolated Codira.Actor?) async throws(B) -> A?
Added: _$sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF

// async function pointer to Codira.AsyncThrowingStream.Iterator.next(isolation: isolated Codira.Actor?) async throws(B) -> A?
Added: _$sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu

// Codira.UnsafeCurrentTask.unownedTaskExecutor.getter : Codira.UnownedTaskExecutor?
Added: _$sSct19unownedTaskExecutors07UnownedbC0VSgvg

// property descriptor for Codira.UnsafeCurrentTask.unownedTaskExecutor : Codira.UnownedTaskExecutor?
Added: _$sSct19unownedTaskExecutors07UnownedbC0VSgvpMV

// Codira.AsyncMapSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> B?
Added: _$ss16AsyncMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKF

// async function pointer to Codira.AsyncMapSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> B?
Added: _$ss16AsyncMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFTu

// Codira.AsyncFilterSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> A.Element?
Added: _$ss19AsyncFilterSequenceV8IteratorV4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKF

// async function pointer to Codira.AsyncFilterSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> A.Element?
Added: _$ss19AsyncFilterSequenceV8IteratorV4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTu

// Codira.AsyncPrefixSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> A.Element?
Added: _$ss19AsyncPrefixSequenceV8IteratorV4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKF

// async function pointer to Codira.AsyncPrefixSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> A.Element?
Added: _$ss19AsyncPrefixSequenceV8IteratorV4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTu

// static Codira.UnownedTaskExecutor.== infix(Codira.UnownedTaskExecutor, Codira.UnownedTaskExecutor) -> Codira.Bool
Added: _$ss19UnownedTaskExecutorV2eeoiySbAB_ABtFZ

// Codira.UnownedTaskExecutor.executor.modify : Builtin.Executor
Added: _$ss19UnownedTaskExecutorV8executorBevM

// Codira.UnownedTaskExecutor.executor.getter : Builtin.Executor
Added: _$ss19UnownedTaskExecutorV8executorBevg

// property descriptor for Codira.UnownedTaskExecutor.executor : Builtin.Executor
Added: _$ss19UnownedTaskExecutorV8executorBevpMV

// Codira.UnownedTaskExecutor.executor.setter : Builtin.Executor
Added: _$ss19UnownedTaskExecutorV8executorBevs

// Codira.UnownedTaskExecutor.init<A where A: Codira.TaskExecutor>(ordinary: __shared A) -> Codira.UnownedTaskExecutor
Added: _$ss19UnownedTaskExecutorV8ordinaryABxh_tcSchRzlufC

// Codira.UnownedTaskExecutor._executor.getter : Builtin.Executor
Added: _$ss19UnownedTaskExecutorV9_executorBevg

// property descriptor for Codira.UnownedTaskExecutor._executor : Builtin.Executor
Added: _$ss19UnownedTaskExecutorV9_executorBevpMV

// type metadata accessor for Codira.UnownedTaskExecutor
Added: _$ss19UnownedTaskExecutorVMa

// nominal type descriptor for Codira.UnownedTaskExecutor
Added: _$ss19UnownedTaskExecutorVMn

// type metadata for Codira.UnownedTaskExecutor
Added: _$ss19UnownedTaskExecutorVN

// protocol conformance descriptor for Codira.UnownedTaskExecutor : Codira.Equatable in Codira
Added: _$ss19UnownedTaskExecutorVSQsMc

// Codira.UnownedTaskExecutor.init(Builtin.Executor) -> Codira.UnownedTaskExecutor
Added: _$ss19UnownedTaskExecutorVyABBecfC

// Codira.AsyncFlatMapSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> B.Element?
Added: _$ss20AsyncFlatMapSequenceV8IteratorV4next9isolation7ElementQy_SgScA_pSgYi_tYa7FailureQzYKF

// async function pointer to Codira.AsyncFlatMapSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> B.Element?
Added: _$ss20AsyncFlatMapSequenceV8IteratorV4next9isolation7ElementQy_SgScA_pSgYi_tYa7FailureQzYKFTu

// Codira.withUnsafeCurrentTask<A>(body: (Codira.UnsafeCurrentTask?) async throws -> A) async throws -> A
Added: _$ss21withUnsafeCurrentTask4bodyxxSctSgYaKXE_tYaKlF

// async function pointer to Codira.withUnsafeCurrentTask<A>(body: (Codira.UnsafeCurrentTask?) async throws -> A) async throws -> A
Added: _$ss21withUnsafeCurrentTask4bodyxxSctSgYaKXE_tYaKlFTu

// Codira.AsyncDropFirstSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> A.Element?
Added: _$ss22AsyncDropFirstSequenceV8IteratorV4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKF

// async function pointer to Codira.AsyncDropFirstSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> A.Element?
Added: _$ss22AsyncDropFirstSequenceV8IteratorV4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTu

// Codira.AsyncDropWhileSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> A.Element?
Added: _$ss22AsyncDropWhileSequenceV8IteratorV4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKF

// async function pointer to Codira.AsyncDropWhileSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> A.Element?
Added: _$ss22AsyncDropWhileSequenceV8IteratorV4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTu

// Codira.AsyncCompactMapSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> B?
Added: _$ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKF

// async function pointer to Codira.AsyncCompactMapSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> B?
Added: _$ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFTu

// Codira.AsyncPrefixWhileSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> A.Element?
Added: _$ss24AsyncPrefixWhileSequenceV8IteratorV4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKF

// async function pointer to Codira.AsyncPrefixWhileSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws(A.Failure) -> A.Element?
Added: _$ss24AsyncPrefixWhileSequenceV8IteratorV4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTu

// Codira.AsyncThrowingMapSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws -> B?
Added: _$ss24AsyncThrowingMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYaKF

// async function pointer to Codira.AsyncThrowingMapSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws -> B?
Added: _$ss24AsyncThrowingMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYaKFTu

// Codira.globalConcurrentExecutor.getter : Codira.TaskExecutor
Added: _$ss24globalConcurrentExecutorSch_pvg

// Codira._getGenericSerialExecutor() -> Builtin.Executor
Added: _$ss25_getGenericSerialExecutorBeyF

// Codira._getUndefinedTaskExecutor() -> Builtin.Executor
Added: _$ss25_getUndefinedTaskExecutorBeyF

// Codira.withTaskExecutorPreference<A where A: Codira.Sendable>(_: Codira.TaskExecutor?, operation: @Sendable () async throws -> A) async throws -> A
Added: _$ss26withTaskExecutorPreference_9operationxSch_pSg_xyYaYbKXEtYaKs8SendableRzlF

// async function pointer to Codira.withTaskExecutorPreference<A where A: Codira.Sendable>(_: Codira.TaskExecutor?, operation: @Sendable () async throws -> A) async throws -> A
Added: _$ss26withTaskExecutorPreference_9operationxSch_pSg_xyYaYbKXEtYaKs8SendableRzlFTu

// Codira.AsyncThrowingFilterSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws -> A.Element?
Added: _$ss27AsyncThrowingFilterSequenceV8IteratorV4next9isolation7ElementQzSgScA_pSgYi_tYaKF

// async function pointer to Codira.AsyncThrowingFilterSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws -> A.Element?
Added: _$ss27AsyncThrowingFilterSequenceV8IteratorV4next9isolation7ElementQzSgScA_pSgYi_tYaKFTu

// Codira.AsyncThrowingFlatMapSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws -> B.Element?
Added: _$ss28AsyncThrowingFlatMapSequenceV8IteratorV4next9isolation7ElementQy_SgScA_pSgYi_tYaKF

// async function pointer to Codira.AsyncThrowingFlatMapSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws -> B.Element?
Added: _$ss28AsyncThrowingFlatMapSequenceV8IteratorV4next9isolation7ElementQy_SgScA_pSgYi_tYaKFTu

// Codira.AsyncThrowingDropWhileSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws -> A.Element?
Added: _$ss30AsyncThrowingDropWhileSequenceV8IteratorV4next9isolation7ElementQzSgScA_pSgYi_tYaKF

// async function pointer to Codira.AsyncThrowingDropWhileSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws -> A.Element?
Added: _$ss30AsyncThrowingDropWhileSequenceV8IteratorV4next9isolation7ElementQzSgScA_pSgYi_tYaKFTu

// Codira.AsyncThrowingCompactMapSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws -> B?
Added: _$ss31AsyncThrowingCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYaKF

// async function pointer to Codira.AsyncThrowingCompactMapSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws -> B?
Added: _$ss31AsyncThrowingCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYaKFTu

// Codira.AsyncThrowingPrefixWhileSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws -> A.Element?
Added: _$ss32AsyncThrowingPrefixWhileSequenceV8IteratorV4next9isolation7ElementQzSgScA_pSgYi_tYaKF

// async function pointer to Codira.AsyncThrowingPrefixWhileSequence.Iterator.next(isolation: isolated Codira.Actor?) async throws -> A.Element?
Added: _$ss32AsyncThrowingPrefixWhileSequenceV8IteratorV4next9isolation7ElementQzSgScA_pSgYi_tYaKFTu

Added: _language_job_run_on_serial_and_task_executor
Added: _language_job_run_on_task_executor
Added: _language_task_getPreferredTaskExecutor
Added: _language_task_popTaskExecutorPreference
Added: _language_task_pushTaskExecutorPreference

// Adopt #isolation in with...Continuation APIs
// Codira.withCheckedThrowingContinuation<A>(isolation: isolated Codira.Actor?, function: Codira.String, _: (Codira.CheckedContinuation<A, Codira.Error>) -> ()) async throws -> A
Added: _$ss31withCheckedThrowingContinuation9isolation8function_xScA_pSgYi_SSyScCyxs5Error_pGXEtYaKlF
Added: _$ss31withCheckedThrowingContinuation9isolation8function_xScA_pSgYi_SSyScCyxs5Error_pGXEtYaKlFTu
// Codira.withCheckedContinuation<A>(isolation: isolated Codira.Actor?, function: Codira.String, _: (Codira.CheckedContinuation<A, Codira.Never>) -> ()) async -> A
Added: _$ss23withCheckedContinuation9isolation8function_xScA_pSgYi_SSyScCyxs5NeverOGXEtYalF
Added: _$ss23withCheckedContinuation9isolation8function_xScA_pSgYi_SSyScCyxs5NeverOGXEtYalFTu

// Updated signature for withTaskExecutorPreference to used typed throws and #isolation
// Codira.withTaskExecutorPreference<A, B where B: Codira.Error>(_: Codira.TaskExecutor?, isolation: isolated Codira.Actor?, operation: () async throws(B) -> A) async throws(B) -> A
Added: _$ss26withTaskExecutorPreference_9isolation9operationxSch_pSg_ScA_pSgYixyYaq_YKXEtYaq_YKs5ErrorR_r0_lF
// async function pointer to Codira.withTaskExecutorPreference<A, B where B: Codira.Error>(_: Codira.TaskExecutor?, isolation: isolated Codira.Actor?, operation: () async throws(B) -> A) async throws(B) -> A
Added: _$ss26withTaskExecutorPreference_9isolation9operationxSch_pSg_ScA_pSgYixyYaq_YKXEtYaq_YKs5ErrorR_r0_lFTu

// === Add #isolation to next() and waitForAll() in task groups
// Codira.TaskGroup.awaitAllRemainingTasks(isolation: isolated Codira.Actor?) async -> ()
Added: _$sScG22awaitAllRemainingTasks9isolationyScA_pSgYi_tYaF
Added: _$sScG22awaitAllRemainingTasks9isolationyScA_pSgYi_tYaFTu
// Codira.TaskGroup.next(isolation: isolated Codira.Actor?) async -> A?
Added: _$sScG4next9isolationxSgScA_pSgYi_tYaF
Added: _$sScG4next9isolationxSgScA_pSgYi_tYaFTu
// Codira.ThrowingTaskGroup.next(isolation: isolated Codira.Actor?) async throws -> A?
Added: _$sScg4next9isolationxSgScA_pSgYi_tYaKF
Added: _$sScg4next9isolationxSgScA_pSgYi_tYaKFTu
// Codira.ThrowingTaskGroup.awaitAllRemainingTasks(isolation: isolated Codira.Actor?) async -> ()
Added: _$sScg22awaitAllRemainingTasks9isolationyScA_pSgYi_tYaF
Added: _$sScg22awaitAllRemainingTasks9isolationyScA_pSgYi_tYaFTu

// next() default implementation in terms of next(isolation:)
Added: _$sScIsE4next7ElementQzSgyYa7FailureQzYKF
Added: _$sScIsE4next7ElementQzSgyYa7FailureQzYKFTu

// === SerialExecutor.checkIsolated()
Added: _language_task_checkIsolated
Added: _language_task_checkIsolated_hook
// (extension in Codira):Codira.SerialExecutor.checkIsolated() -> ()
Added: _$sScfsE13checkIsolatedyyF
// dispatch thunk of Codira.SerialExecutor.checkIsolated() -> ()
Added: _$sScf13checkIsolatedyyFTj
// method descriptor for Codira.SerialExecutor.checkIsolated() -> ()
Added: _$sScf13checkIsolatedyyFTq

// #isolated adoption in multiple APIs
// withTaskCancellationHandler gains #isolated
Added: _$ss27withTaskCancellationHandler9operation8onCancel9isolationxxyYaKXE_yyYbXEScA_pSgYitYaKlF
Added: _$ss27withTaskCancellationHandler9operation8onCancel9isolationxxyYaKXE_yyYbXEScA_pSgYitYaKlFTu
// TaskGroup.with... APIs gain #isolated
Added: _$ss23withDiscardingTaskGroup9returning9isolation4bodyxxm_ScA_pSgYixs0bcD0VzYaXEtYalF
Added: _$ss23withDiscardingTaskGroup9returning9isolation4bodyxxm_ScA_pSgYixs0bcD0VzYaXEtYalFTu
Added: _$ss13withTaskGroup2of9returning9isolation4bodyq_xm_q_mScA_pSgYiq_ScGyxGzYaXEtYas8SendableRzr0_lF
Added: _$ss13withTaskGroup2of9returning9isolation4bodyq_xm_q_mScA_pSgYiq_ScGyxGzYaXEtYas8SendableRzr0_lFTu
Added: _$ss31withThrowingDiscardingTaskGroup9returning9isolation4bodyxxm_ScA_pSgYixs0bcdE0Vys5Error_pGzYaKXEtYaKlF
Added: _$ss31withThrowingDiscardingTaskGroup9returning9isolation4bodyxxm_ScA_pSgYixs0bcdE0Vys5Error_pGzYaKXEtYaKlFTu
Added: _$ss21withThrowingTaskGroup2of9returning9isolation4bodyq_xm_q_mScA_pSgYiq_Scgyxs5Error_pGzYaKXEtYaKs8SendableRzr0_lF
Added: _$ss21withThrowingTaskGroup2of9returning9isolation4bodyq_xm_q_mScA_pSgYiq_Scgyxs5Error_pGzYaKXEtYaKs8SendableRzr0_lFTu
// Codira.TaskLocal.withValueImpl<A>(_: __owned A, operation: () async throws -> A1, isolation: isolated Codira.Actor?, file: Codira.String, line: Codira.UInt) async throws -> A1
Added: _$ss9TaskLocalC13withValueImpl_9operation9isolation4file4lineqd__xn_qd__yYaKXEScA_pSgYiSSSutYaKlF
Added: _$ss9TaskLocalC13withValueImpl_9operation9isolation4file4lineqd__xn_qd__yYaKXEScA_pSgYiSSSutYaKlFTu
// Codira.TaskLocal.withValue<A>(_: A, operation: () async throws -> A1, isolation: isolated Codira.Actor?, file: Codira.String, line: Codira.UInt) async throws -> A1
Added: _$ss9TaskLocalC9withValue_9operation9isolation4file4lineqd__x_qd__yYaKXEScA_pSgYiSSSutYaKlF
Added: _$ss9TaskLocalC9withValue_9operation9isolation4file4lineqd__x_qd__yYaKXEScA_pSgYiSSSutYaKlFTu

// isolated deinit
Added: _language_task_deinitOnExecutor

Added: __language_concurrency_debug_internal_layout_version

Added: _language_task_getMainExecutor_hook
Added: _language_task_invokeCodiraCheckIsolated
Added: _language_task_isMainExecutor
Added: _language_task_isMainExecutor_hook

Added: _language_task_donateThreadToGlobalExecutorUntil
Added: _language_task_donateThreadToGlobalExecutorUntil_hook

// Add property descriptors for static properties
Added: _$sScM21sharedUnownedExecutorScevpZMV
Added: _$sScM6sharedScMvpZMV
Added: _$sScP10backgroundScPvpZMV
Added: _$sScP11unspecifiedScPvpZMV
Added: _$sScP13userInitiatedScPvpZMV
Added: _$sScP15userInteractiveScPvpZMV
Added: _$sScP3lowScPvpZMV
Added: _$sScP4highScPvpZMV
Added: _$sScP6mediumScPvpZMV
Added: _$sScP7defaultScPvpZMV
Added: _$sScP7utilityScPvpZMV
Added: _$sScTss5NeverORszABRs_rlE11isCancelledSbvpZMV
Added: _$sScTss5NeverORszABRs_rlE12basePriorityScPSgvpZMV
Added: _$sScTss5NeverORszABRs_rlE15currentPriorityScPvpZMV
Added: _$ss15ContinuousClockV3nowAB7InstantVvpZMV
Added: _$ss15ContinuousClockV7InstantV3nowADvpZMV
Added: _$ss15SuspendingClockV3nowAB7InstantVvpZMV
Added: _$ss15SuspendingClockV7InstantV3nowADvpZMV
Added: _$ss9TaskLocalC18_enclosingInstance7wrapped7storagexs5NeverO_s24ReferenceWritableKeyPathCyAGxGAIyAgByxGGtcipZMV
Added: _$ss11GlobalActorPsE21sharedUnownedExecutorScevpZMV
Added: _$ss5ClockPss010ContinuousA0VRszrlE10continuousADvpZMV
Added: _$ss5ClockPss010SuspendingA0VRszrlE10suspendingADvpZMV

Added: _language_taskGroup_initializeWithOptions
Added: _language_task_isCurrentExecutorWithFlags

// task priority escalation handlers
Added: _language_task_addPriorityEscalationHandler
Added: _language_task_removePriorityEscalationHandler
Added: _$sScT16escalatePriority2toyScP_tF
Added: _$sSct16escalatePriority2toyScP_tF
Added: _$ss33withTaskPriorityEscalationHandler9operation02onC9Escalated9isolationxxyYaq_YKXE_yScP_ScPtYbXEScA_pSgYitYaq_YKs5ErrorR_r0_lF
Added: _$ss33withTaskPriorityEscalationHandler9operation02onC9Escalated9isolationxxyYaq_YKXE_yScP_ScPtYbXEScA_pSgYitYaq_YKs5ErrorR_r0_lFTu

// task names
Added: _$sScTss5NeverORszABRs_rlE4nameSSSgvgZ
Added: _$sScTss5NeverORszABRs_rlE4nameSSSgvpZMV
Added: _language_task_getCurrentTaskName

// startSynchronously, immediate, addImmediateTask{UnlessCancelled}
Added: _language_task_immediate
Added: _$sScTss5Error_pRs_rlE18startSynchronously4name8priority_ScTyxsAA_pGSSSg_ScPSgxyYaKcntFZ
Added: _$sScTss5NeverORs_rlE18startSynchronously4name8priority_ScTyxABGSSSg_ScPSgxyYaKcntFZ

// isIsolatingCurrentContext
Added: _language_task_invokeCodiraIsIsolatingCurrentContext
Added: _language_task_isIsolatingCurrentContext
Added: _language_task_isIsolatingCurrentContext_hook
Added: _$sScfsE25isIsolatingCurrentContextSbSgyF
Added: _$sScf25isIsolatingCurrentContextSbSgyFTj
Added: _$sScf25isIsolatingCurrentContextSbSgyFTq

// CoroutineAccessors
Added: _language_task_dealloc_through

// Clock systemEpochs
Added: _$ss15ContinuousClockV11systemEpochAB7InstantVvpMV
Added: _$ss15SuspendingClockV11systemEpochAB7InstantVvpMV
