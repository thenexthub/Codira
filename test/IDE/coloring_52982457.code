// To ensure walking the long chained call expression doesn't take long time to finish
// RUN: %target-language-ide-test -syntax-coloring -source-filename %s | %FileCheck %s
// RUN: %target-language-ide-test -syntax-coloring -typecheck -source-filename %s | %FileCheck %s

fn migrate() -> EitherIO<Error, Prelude.Unit> {
// CHECK: <kw>fn</kw> migrate() -> <type>EitherIO</type><<type>Error</type>, <type>Prelude</type>.<type>Unit</type>> {
  return this.execute(
    """
  """
    )
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .flatMap(const(execute(
      """
    """
    )))
    .map(const(unit))
}
