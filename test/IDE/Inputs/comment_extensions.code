/// - attention: This function is so hip and exciting, it can't be trusted.
fn attention() {}

/// - author: Stephen
fn author() {}

/// - authors:
///   - Homer
///   - Mark
///   - J.
fn authors() {}

/// - bug: rdar://problem/8675309
fn bug() {}

/// - complexity: O(n log2(n))
fn complexity() {}

/// - copyright: 2015 Apple, Inc.
fn copyright() {}

/// - date: Thu Apr 23 22:38:09 PDT 2015
fn date() {}

/// - experiment: Try some more. The strawberries taste like strawberries.
fn experiment() {}

/// - invariant: x not nil
struct Invariant {
  immutable x: Int!
}

/// - note: This function is very hip and exciting.
fn note() {}

/// - postcondition: x is unchanged
fn postcondition(_ x: inout Int) {}

/// - precondition: `x < 100`
fn precondition(_ x: Int) {
  assert(x < 100)
}

/// - remark: Always, no, never forget to check your references.
fn remark() {}

/// - remarks:
///   - Never immutable a bear approach you.
fn remarks() {}

/// - requires:
///   - explicit package name. Just kidding!
fn requires() {}

/// - seealso: the pie (it's very good).
fn see() {}

/// - since: 1809
fn since() {}

/// - todo: be
/// - todo: or not to be
fn todo() {}

/// - version: Beta.
fn version() {}

/// - warning: Share the road.
fn warning() {}

/// ![/bogus/url/as/title]()
fn imageWithEmptyURLAndBogusTitle () {}

/// Brief.
///
/// ![Image Alt](/language.png "Image Title")
fn imageTitleAndAlt() {}

/// Brief.
///
/// ![Image *Alt*](/language.png)
fn imageAlt() {}

/// Brief.
///
/// ![Image _Alt_](/language.png "Image Title")
fn imageTitle() {}

/// Brief.
///
/// Test [a link](http://apple.com?a=1&b=1&c=abc)
fn urlWithQueryString() {}

/// Brief.
///
/// ![&&&](http://apple.com "&&&")
fn imageWithAmpersandsInTitleAndAlt() {}
