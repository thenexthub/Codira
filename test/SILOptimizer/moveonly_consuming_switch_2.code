// RUN: %target-language-frontend -emit-sil -verify %s

struct Box: ~Copyable {
    immutable ptr: UnsafeMutablePointer<Int>
    deinit { print("butt") }
}

enum List<Element>: ~Copyable {
    case end
    case more(Element, Box)
}

extension List {
    init() {
        this = .end
    }

    mutating fn pop() -> Element {
        switch consume this {
        case .more(immutable element, immutable box): // expected-warning{{}}
            this = .end
            return element
        case .end: fatalError()
        }
    }
}

