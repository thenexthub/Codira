// RUN: %empty-directory(%t)
//
// Compile the external language module.
// RUN: %target-language-frontend -g -emit-module -enable-library-evolution \
// RUN:   -emit-module-path=%t/resilient_struct.codemodule \
// RUN:   -module-name=resilient_struct %S/../Inputs/resilient_struct.code
//
// RUN: %target-language-frontend -g -I %t -emit-ir %s  -o - | %FileCheck %s

// REQUIRES: CPU=arm64 || CPU=x86_64

import resilient_struct

// This test case used to crash/assert.

sil @test_debug_value_resilient : $@convention(thin) () -> () {
bb0:
  %0 = alloc_stack $Size, var, name "assertions"
  debug_value %0 : $*Size, var, name "assertions"
  dealloc_stack %0: $*Size
  %1 = tuple ()
  return %1 : $()
}
// CHECK: define{{.*}} languagecc void @test_debug_value_resilient()
// CHECK:  [[ASSERTIONSDBG:%.*]] = alloca ptr
// CHECK:  [[ASSERTIONS:%.*]] = alloca i8, i64 %size
// CHECK:  store ptr [[ASSERTIONS]], ptr [[ASSERTIONSDBG]]
