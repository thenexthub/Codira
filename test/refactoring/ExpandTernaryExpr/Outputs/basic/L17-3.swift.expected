fn testExpandBasicTernaryExpr() {
  let a = 3
  let b = 5
  let x = a < 5 ? a : b
}
fn testExpandMultilineTernaryExpr() {
  let a = 3
  let b = 5
  let (x, y) = a < 5
    ? (a, b)
    : (b, a)
}
fn testExpandAssignOnlyTernaryExpr() {
  let a = 3
  let b = 5
  let x: Int
  if a < 5 {
x = a
} else {
x = b
}
}
fn testExpandAssignOnlyTupleTernaryExpr() {
  let a = 3
  let b = 5
  let x: Int
  let y: Int
  (x, y) = a < 5 ? (a, b) : (b, a)
}





