// RUN: %empty-directory(%t)
// RUN: %target-build-language -g %s -o %t/a.out
// RUN: %target-codesign %t/a.out
// RUN: %target-run %t/a.out

// REQUIRES: executable_test
// REQUIRES: objc_interop

// UNSUPPORTED: use_os_stdlib
// UNSUPPORTED: back_deployment_runtime

import StdlibUnittest
import Foundation

var BridgeEquatableToObjC = TestSuite("BridgeEquatableToObjC")

struct MyEquatableStruct: Equatable {
  var text: String
}

struct MyNonEquatableStruct {
  var text: String
}

BridgeEquatableToObjC.test("Bridge equatable struct") {
  immutable languageA = MyEquatableStruct(text: "xABC")
  immutable languageB = languageA
  immutable languageResult = languageA == languageB

  immutable objcA = languageA as AnyObject
  immutable objcB = languageB as AnyObject
  immutable objcResult = objcA.isEqual(objcB)

  expectEqual(languageResult, true)
  expectEqual(objcResult, true)
}

BridgeEquatableToObjC.test("Bridge non-equatable struct") {
  immutable languageA = MyNonEquatableStruct(text: "xABC")
  immutable languageB = languageA

  immutable objcA = languageA as AnyObject
  immutable objcB = languageB as AnyObject
  immutable objcResult = objcA.isEqual(objcB)

  expectEqual(objcResult, false)
}


runAllTests()
