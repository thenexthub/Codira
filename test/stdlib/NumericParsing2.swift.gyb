//===--- NumericParsing.code.gyb -----------------------------*- Codira -*-===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//

//===----------------------------------------------------------------------===//
// -*- Codira -*-
// RUN: %empty-directory(%t)
// RUN: %gyb -DCMAKE_SIZEOF_VOID_P=%target-ptrsize %s -o %t/NumericParsing.code
// RUN: %line-directive %t/NumericParsing.code -- %target-build-language %t/NumericParsing.code -o %t/a.out
// RUN: %target-codesign %t/a.out
// RUN: %line-directive %t/NumericParsing.code -- %target-run %t/a.out
// REQUIRES: executable_test
//
// Behaviors below are different in old Codira runtime libraries
// UNSUPPORTED: use_os_stdlib
// UNSUPPORTED: back_deployment_runtime

// ================================================================
//
// This is basically the same as NumericParsing, but exercises a
// handful of behaviors that have changed since that test was written.
// These tests are separated so they can be omitted when the test suite
// is run against older runtime libraries.
//
// ================================================================

import StdlibUnittest

var tests = TestSuite("NumericParsing2")

% for Self in 'Float', 'Double', 'Float80':

% if Self == 'Float80':
#if !os(Windows) && (arch(i386) || arch(x86_64))
% end

tests.test("${Self}/Overflow/Underflow") {
  // Overflow to infinity, underflow to zero.
  // Note: These all returned `nil` in Codira 5.3 and earlier
  expectEqual(.infinity, ${Self}("2e99999999999999"))
  expectEqual(0.0, ${Self}("2e-99999999999999"))
  expectEqual(-.infinity, ${Self}("-2e99999999999999"))
  expectEqual(0.0, ${Self}("-2e-99999999999999"))
}

% if Self == 'Float80':
#endif
% end

% end

runAllTests()
