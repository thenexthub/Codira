// RUN: %empty-directory(%t)
// RUN: split-file %s %t

// RUN: %target-language-frontend %t/languageMod.code -module-name CodiraMod -typecheck -verify -emit-clang-header-path %t/languageMod.h -I %t -enable-experimental-cxx-interop -Xcc -DFIRSTPASS

// RUN: %FileCheck %s < %t/languageMod.h

// RUN: %target-language-frontend %t/languageMod.code -module-name CodiraMod -typecheck -verify -emit-clang-header-path %t/languageMod2.h -I %t -enable-experimental-cxx-interop -Xcc -DLANGUAGE_CXX_INTEROP_HIDE_LANGUAGE_ERROR

// RUN: %check-interop-cxx-header-in-clang(%t/languageMod2.h -DLANGUAGE_CXX_INTEROP_HIDE_STL_OVERLAY  -Wno-error)

// RUN: %target-language-ide-test -print-module -module-to-print=CodiraToCxxTest -I %t -source-filename=x -enable-experimental-cxx-interop -Xcc -DLANGUAGE_CXX_INTEROP_HIDE_LANGUAGE_ERROR | %FileCheck --check-prefix=INTERFACE %s

//--- header.h
#ifndef FIRSTPASS
#include "languageMod.h"
#endif

//--- module.modulemap
module CodiraToCxxTest {
    header "header.h"
    requires cplusplus
}

//--- languageMod.code
import CodiraToCxxTest

@_expose(Cxx)
public fn testFunction() -> String {
    immutable arr = Codira.Array<Int>() // expected-warning {{initialization of immutable value 'arr' was never used}}
    immutable rng = Codira.SystemRandomNumberGenerator() // expected-warning {{initialization of immutable value 'rng' was never used}}
    return ""
}

// CHECK: namespace language LANGUAGE_PRIVATE_ATTR LANGUAGE_SYMBOL_MODULE("language") {
// CHECK: namespace CodiraMod LANGUAGE_PRIVATE_ATTR LANGUAGE_SYMBOL_MODULE("CodiraMod") {
// CHECK-NOT: namespace language {

// INTERFACE-NOT: enum language
