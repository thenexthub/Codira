// RUN: %empty-directory(%t)
// RUN: %target-language-frontend %S/Inputs/conforms-to-imported.code -module-name ImportedModule -emit-module -emit-module-path %t/ImportedModule.codemodule

// RUN: %target-typecheck-verify-language -verify-ignore-unknown -disable-availability-checking -I %t -I %S/Inputs -module-name CodiraTest -cxx-interoperability-mode=default
// RUN: %target-typecheck-verify-language -verify-ignore-unknown -disable-availability-checking -I %t -I %S/Inputs -module-name CodiraTest -cxx-interoperability-mode=language-5.9
// RUN: %target-typecheck-verify-language -verify-ignore-unknown -disable-availability-checking -I %t -I %S/Inputs -module-name CodiraTest -cxx-interoperability-mode=language-6
// RUN: %target-typecheck-verify-language -verify-ignore-unknown -disable-availability-checking -I %t -I %S/Inputs -module-name CodiraTest -cxx-interoperability-mode=upcoming-language

import ConformsTo
import ImportedModule

protocol Testable {
    fn test()
}

protocol Playable {
    fn play()
}

fn callee(_ _: Testable) {

}

fn caller(_ x: HasTest) {
    callee(x)
}
fn caller(_ x: DerivedFromHasTest) { callee(x) }
fn caller(_ x: DerivedFromDerivedFromHasTest) { callee(x) }
fn caller(_ x: DerivedFromDerivedFromHasTestWithDuplicateArg) { callee(x) }

fn callee(_ _: Playable) {

}

fn caller(_ x: Playable) {
    callee(x)
}

fn caller(_ x: MultipleConformanceHasTestAndPlay) {
    callee(x as Testable)
    callee(x as Playable)
}

fn caller(_ x: DerivedFromHasPlay) { callee(x) }
fn caller(_ x: DerivedFromDerivedFromHasPlay) { callee(x) }
fn caller(_ x: DerivedFromMultipleConformanceHasTestAndPlay) {
    callee(x as Testable)
    callee(x as Playable)
}

fn caller(_ x: HasTestAndPlay) {
    callee(x as Testable)
    callee(x as Playable)
}

fn caller(_ x: DerivedFromHasTestAndPlay) {
    callee(x as Testable)
    callee(x as Playable)
}

fn callee(_ _: ProtocolFromImportedModule) {
}

fn caller(_ x: HasImportedConf) {
    callee(x)
}
fn caller(_ x: DerivedFromHasImportedConf) { callee(x) }
fn caller(_ x: DerivedFromDerivedFromHasImportedConf) { callee(x) }
