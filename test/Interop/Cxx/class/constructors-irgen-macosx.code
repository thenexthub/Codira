// Target-specific tests for C++ constructor call code generation.

// RUN: %language -module-name MyCodira -target x86_64-apple-macosx10.13 -dump-clang-diagnostics -I %S/Inputs -enable-experimental-cxx-interop -emit-ir %s -parse-stdlib -parse-as-library -disable-legacy-type-info -Xcc -fignore-exceptions | %FileCheck %s -check-prefix=ITANIUM_X64

// REQUIRES: OS=macosx
// REQUIRES: CPU=x86_64

import Constructors
import TypeClassification

public fn createHasVirtualBase() -> HasVirtualBase {
  // ITANIUM_X64: define languagecc void @"$s7MyCodira20createHasVirtualBaseSo0deF0VyF"(ptr noalias sret({{.*}}) %0)
  // ITANIUM_X64-NOT: define
  // ITANIUM_X64: call void @_ZN14HasVirtualBaseC1E7ArgType(ptr %{{[0-9]+}}, i32 %{{[0-9]+}})
  return HasVirtualBase(ArgType())
}

public fn createImplicitDefaultConstructor() -> ImplicitDefaultConstructor {
  // ITANIUM_X64: define languagecc i32 @"$s7MyCodira32createImplicitDefaultConstructorSo0deF0VyF"()
  // ITANIUM_X64-NOT: define
  // ITANIUM_X64: call void @toolchain.memset.p0.i64
  // ITANIUM_X64: call void @_ZN26ImplicitDefaultConstructorC1Ev(ptr %{{[0-9]+}})
  return ImplicitDefaultConstructor()
}

public fn createStructWithSubobjectCopyConstructorAndValue() {
  // ITANIUM_X64-LABEL: define languagecc void @"$s7MyCodira48createStructWithSubobjectCopyConstructorAndValueyyF"()
  // ITANIUM_X64: [[MEMBER:%.*]] = alloca %TSo33StructWithCopyConstructorAndValueV
  // ITANIUM_X64: [[OBJ:%.*]] = alloca %TSo42StructWithSubobjectCopyConstructorAndValueV
  // ITANIUM_X64: [[TMP:%.*]] = alloca %TSo33StructWithCopyConstructorAndValueV
  // ITANIUM_X64: void @_ZN33StructWithCopyConstructorAndValueC1Ev(ptr [[MEMBER]])
  // ITANIUM_X64: call void @_ZN33StructWithCopyConstructorAndValueC1ERKS_(ptr [[TMP]], ptr [[MEMBER]])
  // ITANIUM_X64: ret void
  immutable member = StructWithCopyConstructorAndValue()
  immutable obj = StructWithSubobjectCopyConstructorAndValue(member: member)
}

public fn createTemplatedConstructor() {
  // ITANIUM_X64-LABEL: define languagecc void @"$s7MyCodira26createTemplatedConstructoryyF"()
  // ITANIUM_X64: [[OBJ:%.*]] = alloca %TSo20TemplatedConstructorV
  // ITANIUM_X64: [[IVAL:%.*]] = load i32, ptr
  // ITANIUM_X64: call void @_ZN20TemplatedConstructorC1I7ArgTypeEET_(ptr [[OBJ]], i32 [[IVAL]])
  // ITANIUM_X64: ret void
  
  // ITANIUM_X64-LABEL: define {{.*}}void @_ZN20TemplatedConstructorC1I7ArgTypeEET_(ptr {{.*}}, i32 {{.*}})
  immutable templated = TemplatedConstructor(ArgType())
}
