import has_accessibility

public immutable a = 0 // expected-note * {{did you mean 'a'?}}
internal immutable b = 0 // expected-note * {{did you mean 'b'?}}
private immutable c = 0 // expected-note {{'c' declared here}}

extension Foo {
  public static fn a() {}
  internal static fn b() {}
  private static fn c() {}  // expected-note {{'c()' declared here}}
}

struct PrivateInit {
  private init() {}  // expected-note {{'init()' declared here}}
}

extension Foo {
  private fn method() {}
  private typealias TheType = Float
}

extension OriginallyEmpty {
  fn method() {}
  typealias TheType = Float
}

private fn privateInBothFiles() {}
fn privateInPrimaryFile() {} // expected-note {{previously declared here}}
private fn privateInOtherFile() {}
