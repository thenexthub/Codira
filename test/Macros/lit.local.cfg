# '-enable-experimental-feature Macros' requires an asserts build.
if 'asserts' not in config.available_features:
    config.unsupported = True

config.subsitutions = list(config.substitutions)

def get_target_os():
    import re
    (run_cpu, run_vendor, run_os, run_version) = re.match('([^-]+)-([^-]+)-([^0-9]+)(.*)', config.variant_triple).groups()
    return run_os

if get_target_os() in ['windows-msvc']:
    config.substitutions.insert(0, ('%target-abi', 'WIN'))
    config.substitutions.insert(
        0,
        (
            '%language-build-c-plugin',
            '%clang -isysroot %host_sdk -I %language_src_root/include -L %language-lib-dir -l_languageMockPlugin'
        )
    )
else:
    # FIXME(compnerd) do all the targets we currently support use SysV ABI?
    config.substitutions.insert(0, ('%target-abi', 'SYSV'))
    config.substitutions.insert(0, ('%cmake-c-compiler', config.cmake_c_compiler))
    config.substitutions.insert(
        0,
        (
            '%language-build-c-plugin',
            '%cmake-c-compiler %c-flags %exe-linker-flags -target %host_triple -isysroot %host_sdk -I %language_src_root/include -L %language-lib-dir -l_languageMockPlugin -Xlinker -rpath -Xlinker %language-lib-dir'
        )
    )
    config.substitutions.append(('%c-flags', config.c_flags))
    config.substitutions.append(('%exe-linker-flags', config.exe_linker_flags))
