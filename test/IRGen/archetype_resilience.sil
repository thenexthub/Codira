// REQUIRES: OS=macosx

// RUN: %empty-directory(%t)
// RUN: %target-language-frontend -emit-module -enable-library-evolution -emit-module-path=%t/resilient_struct.codemodule -module-name=resilient_struct %S/../Inputs/resilient_struct.code
// RUN: %target-language-frontend -emit-module -enable-library-evolution -emit-module-path=%t/resilient_enum.codemodule -module-name=resilient_enum -I %t %S/../Inputs/resilient_enum.code
// RUN: %target-language-frontend -disable-type-layout -I %t -Xtoolchain -sil-disable-pass=mandatory-temp-rvalue-elimination -emit-ir -enable-library-evolution %s | %FileCheck %s

sil_stage canonical

import Codira
import resilient_struct

public enum EnumWithClassArchetypeAndDynamicSize<T : AnyObject> {
  case A(T)
  case B(Size)
}

// CHECK-LABEL: define languagecc void @copyDynamicMultiEnum(ptr %"EnumWithClassArchetypeAndDynamicSize<T>", ptr %U, ptr noalias languageself %0)
// CHECK: call ptr @"$s20archetype_resilience36EnumWithClassArchetypeAndDynamicSizeOyxGRlzCr0_lWOc"(ptr %0, ptr {{.*}}, ptr %"EnumWithClassArchetypeAndDynamicSize<T>")
// CHECK: ret void
sil [ossa] @copyDynamicMultiEnum : $@convention(method) <T, U where T: AnyObject> (@in_guaranteed EnumWithClassArchetypeAndDynamicSize<T>) -> () {
bb0(%0 : $*EnumWithClassArchetypeAndDynamicSize<T>):
  %1 = alloc_stack $EnumWithClassArchetypeAndDynamicSize<T> 
  copy_addr %0 to [init] %1 : $*EnumWithClassArchetypeAndDynamicSize<T>
  destroy_addr %1 : $*EnumWithClassArchetypeAndDynamicSize<T>
  dealloc_stack %1 : $*EnumWithClassArchetypeAndDynamicSize<T>
  %ret = tuple ()
  return %ret : $()
}
