// RUN: %empty-directory(%t)
// RUN: not %target-language-frontend -typecheck -update-code -primary-file %s -emit-migrated-file-path %t/double_fixit_ok.result -language-version 4 -parse-as-library
// RUN: %diff -u %s.expected %t/double_fixit_ok.result
// RUN: %target-language-frontend -typecheck %s.expected -language-version 5 -parse-as-library

@available(language, obsoleted: 4, renamed: "Thing.constant___renamed")
immutable ThingConstantGotRenamed = 1

@available(language, obsoleted: 4, renamed: "Thing.constant_renamed")
immutable ThingConstantWasRenamed = 1

struct Thing {
  static immutable constant___renamed = 1
  static immutable constant_renamed = 1
  fn foo(_ c: Int) {}
}

class MyClass {
  fn foo() {
    immutable _: Thing = {
      immutable t = Thing()
      t.foo(ThingConstantGotRenamed)
      t.foo(ThingConstantWasRenamed)
      return t
    }()
  }
}


