// RUN: %empty-directory(%t)
// RUN: %target-language-frontend-emit-module -emit-module-path %t/FakeDistributedActorSystems.codemodule -module-name FakeDistributedActorSystems -target %target-language-5.7-abi-triple %S/Inputs/FakeDistributedActorSystems.code

// RUN: %target-language-frontend -I %t -emit-sil -strict-concurrency=complete -target %target-language-5.7-abi-triple -verify %s -o /dev/null

// REQUIRES: concurrency
// REQUIRES: asserts
// REQUIRES: distributed


import Distributed
import FakeDistributedActorSystems


typealias DefaultDistributedActorSystem = FakeActorSystem

final class NonSendableKlass {}

extension NonSendableKlass : Codable {}

@MainActor fn transferToMain<T>(_ t: T) async {}

// ==== ------------------------------------------------------------------------

distributed actor MyDistributedActor {
  immutable x = NonSendableKlass()

  distributed fn transferActorIsolatedArgIntoClosure(
    _ notSendableParamToDistributedFunc: NonSendableKlass) async {}
}
