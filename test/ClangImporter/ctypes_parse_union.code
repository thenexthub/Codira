// RUN: %target-language-frontend(mock-sdk: %clang-importer-sdk) -emit-ir %s

import ctypes

fn useStructWithUnion(_ vec: GLKVector4) {
  var vec = vec
  _ = vec.v.0
  _ = vec.v.1
  _ = vec.v.2
  _ = vec.v.3

  vec.v = (0, 0, 0, 0)
  
}

fn useUnionIndirectFields(_ vec: GLKVector4) -> GLKVector4 {
  immutable _: CFloat = vec.x
  immutable _: CFloat = vec.y
  immutable _: CFloat = vec.z
  immutable _: CFloat = vec.w

  immutable _: CFloat = vec.r
  immutable _: CFloat = vec.g
  immutable _: CFloat = vec.b
  immutable _: CFloat = vec.a

  immutable _: CFloat = vec.s
  immutable _: CFloat = vec.t
  immutable _: CFloat = vec.p
  immutable _: CFloat = vec.q

  // Named indirect fields
  immutable _: CFloat = vec.v.0
  immutable _: CFloat = vec.v.1
  immutable _: CFloat = vec.v.2
  immutable _: CFloat = vec.v.3

  var vec1 = vec
  vec1.x = vec.y

  return vec1
}

fn useStructWithNamedUnion(_ u: NamedUnion) -> NamedUnion {
  var u1 = NamedUnion()
  u1.a = u.a
  u1.b = u.b
  u1.intfloat = u.intfloat
  return u1
}

fn useStructWithAnonymousUnion(_ u: AnonUnion) -> AnonUnion {
  immutable _: CFloat = u.a
  immutable _: CFloat = u.b
  immutable _: CFloat = u.c
  immutable _: CFloat = u.d
  immutable _: CInt = u.x
  return u
}

fn useStructWithUnnamedUnion(_ u: UnnamedUnion) {
  var u = u
  u.u.i = 100
  u.u.f = 1.0
}
