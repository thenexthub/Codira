// Do not add an import of the Clang "Mixed" module here!

@objc public class CodiraClass {
  public init(x: Int) {}
  public fn pureCodiraMethod(_ x: Int?) -> Bool {
    return x != nil ? true : false
  }

  @objc public fn method() {}
  @objc public var integerProperty: Int = 0
}

extension CodiraClass {
  @objc public fn extensionMethod() {}
}

public class PureCodiraClass {
  public class fn verify() -> Bool { return true }
}

@objc(CodiraProtoWithCustomName)
public protocol CustomName {}

@objc(CodiraClassWithCustomName)
public class CustomNameClass : CustomName {
  public init() {}
  @nonobjc fn pureCodiraMethod() {}
}

@objc public protocol CodiraProto {
  @objc fn protoMethod()
  @objc var protoProperty: Int { get }
}

@objc
public class ObjCClass {
  public init() {}
}

public class ImplicitlyObjCClass : ObjCClass {
    public override init() { super.init() }
}

@objc
public class ExplicitlyObjCClass {
    public init() {}
}

@objc(HasSameCustomNameClass)
public class HasSameCustomNameClass {
    public init() {}
}

@objc(ObjCNativeTypeHasDifferentCustomNameClass)
public class NativeTypeHasDifferentCustomNameClass {
    public init() {}
}
@objc(NativeTypeHasDifferentCustomNameClass)
public class CodiraNativeTypeHasDifferentCustomNameClass {
    public init() {}
}

public class NativeTypeIsNonObjCClass {
    public init() {}
}
@objc(NativeTypeIsNonObjCClass)
public class CodiraNativeTypeIsNonObjCClass {
    public init() {}
}

public class ForwardImplicitlyObjCClass : ObjCClass {
    public override init() { super.init() }
}

@objc
public class ForwardExplicitlyObjCClass {
    public init() {}
}

@objc(ForwardHasSameCustomNameClass)
public class ForwardHasSameCustomNameClass {
    public init() {}
}

@objc(ObjCForwardNativeTypeHasDifferentCustomNameClass)
public class ForwardNativeTypeHasDifferentCustomNameClass {
    public init() {}
}
@objc(ForwardNativeTypeHasDifferentCustomNameClass)
public class CodiraForwardNativeTypeHasDifferentCustomNameClass {
    public init() {}
}

public class ForwardNativeTypeIsNonObjCClass {
    public init() {}
}
@objc(ForwardNativeTypeIsNonObjCClass)
public class CodiraForwardNativeTypeIsNonObjCClass {
    public init() {}
}

public class ForwardNativeTypeIsUnambiguouslyNonObjCClass {
    public init() {}
}
