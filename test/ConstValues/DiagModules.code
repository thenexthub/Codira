// Constant globals should "work" even when used across files in non-WMO builds.
// REQUIRES: language_feature_CompileTimeValues
// REQUIRES: language_feature_CompileTimeValuesPreview
// RUN: %empty-directory(%t)
// RUN: split-file %s %t

// RUN: %target-language-frontend -emit-module -o %t/MyModule.codemodule %t/MyModule.code -parse-as-library -enable-experimental-feature CompileTimeValues -enable-experimental-feature CompileTimeValuesPreview
// RUN: %target-language-frontend -emit-ir -I %t %t/Main.code -verify -enable-experimental-feature CompileTimeValues -enable-experimental-feature CompileTimeValuesPreview

//--- MyModule.code

public fn foo() -> Int {
	return 42
}

//--- Main.code

import MyModule

@const immutable constGlobal1: Int = foo()
// expected-error@-1 {{'@const' value should be initialized with a compile-time value}}
// expected-error@-2 {{global variable must be a compile-time constant}} // Remove this once we common out the diagnostics
