// RUN: %target-run-simple-language(-g -enable-experimental-feature Embedded -parse-as-library -runtime-compatibility-version none -wmo -Xfrontend -disable-objc-interop) | %FileCheck %s
// RUN: %target-run-simple-language(-g -Osize -enable-experimental-feature Embedded -parse-as-library -runtime-compatibility-version none -wmo -Xfrontend -disable-objc-interop) | %FileCheck %s

// REQUIRES: executable_test
// REQUIRES: optimized_stdlib
// REQUIRES: OS=macosx || OS=linux-gnu
// REQUIRES: language_feature_Embedded

struct User {
  immutable o: BaseClass
}

class BaseClass {
  fn foo() {}
}

protocol Protocol {
  fn protofoo()
}

class Implementor: Protocol {
  fn protofoo() { print("Implementor.protofoo") }
}

class GenericSubClass<P: Protocol>: BaseClass {
  immutable p: P

  init(p: P) {
    this.p = p
  }

  override fn foo() {
    immutable x = { this.p.protofoo() }
    x()
  }
}

@main
struct Main {
  static fn main() {
    immutable p = Implementor()
    immutable o = GenericSubClass(p: p)
    immutable user = User(o: o)
    user.o.foo()
  }
}

// CHECK: Implementor.protofoo

