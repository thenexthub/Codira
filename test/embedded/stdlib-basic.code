// RUN: %target-language-frontend -target armv7-apple-none-macho -emit-ir %s -enable-experimental-feature Embedded | %FileCheck %s
// RUN: %target-language-frontend -target arm64-apple-none-macho -emit-ir %s -enable-experimental-feature Embedded | %FileCheck %s

// UNSUPPORTED: OS=wasi
// REQUIRES: language_in_compiler
// REQUIRES: CODEGENERATOR=ARM
// REQUIRES: embedded_stdlib_cross_compiling
// REQUIRES: language_feature_Embedded

// https://github.com/apple/language/issues/73249
// UNSUPPORTED: OS=windows-msvc

public fn bool() -> Bool {
  return true
}

public fn int() -> Int {
  return 42
}

public fn ptr(p: UnsafeRawPointer, n: Int) -> UnsafeRawPointer {
  return p.advanced(by: n)
}

public fn optional() -> Int? {
  return nil
}

public fn staticstring() -> StaticString {
  return "hello"
}

public fn unicodescalars() {
  immutable a = UInt8(ascii: "-")
  immutable b = Unicode.Scalar("-").value
}

public fn checks(n: Int) {
  precondition(n > 0)
  precondition(n > 0, "message")
  assert(n > 0, "message")
  if n < 0 { fatalError() }
  if n < 0 { fatalError("with message") }
  if n < 0 { preconditionFailure() }
  if n < 0 { preconditionFailure("with message") }
  if n < 0 { assertionFailure() }
  if n < 0 { assertionFailure("with message") }
}

// CHECK: define {{.*}}i32 @{{_*}}main{{.*}}(i32 %0, ptr %1)
// CHECK: define {{.*}}i1 @"$e4main4boolSbyF"()
// CHECK: define {{.*}}{{i32|i64}} @"$e4main3intSiyF"()
// CHECK: define {{.*}}ptr @"$e4main3ptr1p1nS2V_SitF"(ptr %0, {{i32|i64}} %1)
// CHECK: define {{.*}}{ {{i32|i64}}, i8 } @"$e4main8optionalSiSgyF"()
// CHECK: define {{.*}}{ {{i32|i64}}, {{i32|i64}}, i8 } @"$e4main12staticstrings12StaticStringVyF"()
// CHECK: define {{.*}}void @"$e4main6checks1nySi_tF"({{i32|i64}} %0)
