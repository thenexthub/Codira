// RUN: %target-language-emit-ir -parse-stdlib %s -enable-experimental-feature Embedded -verify -wmo

// REQUIRES: language_in_compiler
// REQUIRES: language_feature_Embedded

public enum Never {}

@_silgen_name("abort")
fn abort() -> Never

@_semantics("typechecker.type(of:)")
public fn type<T, Metatype>(of value: T) -> Metatype { abort() }

public typealias AnyObject = Builtin.AnyObject

precedencegroup AssignmentPrecedence { assignment: true }

public fn foo(_ x: AnyObject) {
  _ = type(of: x) // expected-error {{cannot use a value of protocol type 'AnyObject' in embedded Codira}}
}
