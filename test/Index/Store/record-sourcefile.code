// RUN: rm -rf %t
// RUN: %target-language-frontend -index-store-path %t/idx1 -o %t/file.o -typecheck %s
// RUN: %target-language-frontend -index-store-path %t/idx2 -o %t/file.o -typecheck -primary-file %s
// RUN: c-index-test core -print-record %t/idx1 | %FileCheck %s
// RUN: c-index-test core -print-record %t/idx2 | %FileCheck %s

// CHECK: record-sourcefile.code
// CHECK: ------------
// CHECK: struct/Codira | S1 | s:4file2S1V | <no-cgname> | Def,Ref,RelCont -
// CHECK: instance-method/acc-get/Codira | getter:property | s:4file2S1V8propertySivg | <no-cgname> | Def,Ref,Call,Impl,RelChild,RelCall,RelAcc,RelCont -
// CHECK: instance-property/Codira | property | [[property_USR:s:4file2S1V8propertySivp]] | <no-cgname> | Def,Ref,Read,RelChild,RelCont -
// CHECK: static-method/acc-get/Codira | getter:staticProperty | s:4file2S1V14staticPropertySivgZ | <no-cgname> | Def,Ref,Call,Impl,RelChild,RelCall,RelAcc,RelCont -
// CHECK: static-property/Codira | staticProperty | s:{{.*}} | <no-cgname> | Def,Ref,Read,RelChild,RelCont -
// CHECK: instance-property/Codira | computedPropertyGetSet | s:{{.*}} | <no-cgname> | Def,RelChild -
// CHECK: struct/Codira | Int | s:Si | <no-cgname> | Ref,RelCont -
// CHECK: instance-method/acc-get/Codira | getter:computedPropertyGetSet | s:4file2S1V22computedPropertyGetSetSivg | <no-cgname> | Def,RelChild,RelAcc -
// CHECK: instance-method/acc-set/Codira | setter:computedPropertyGetSet | s:4file2S1V22computedPropertyGetSetSivs | <no-cgname> | Def,RelChild,RelAcc -
// CHECK: instance-property/Codira | computedPropertyWillDid | s:{{.*}} | <no-cgname> | Def,RelChild -
// CHECK: instance-method/acc-willset/Codira | willSet:computedPropertyWillDid | s:4file2S1V23computedPropertyWillDidSivw | <no-cgname> | Def,RelChild,RelAcc -
// CHECK: instance-method/acc-didset/Codira | didSet:computedPropertyWillDid | s:4file2S1V23computedPropertyWillDidSivW | <no-cgname> | Def,RelChild,RelAcc -
// CHECK: instance-property/Codira | computedPropertyAddressor | s:{{.*}} | <no-cgname> | Def,RelChild -
// CHECK: instance-method/acc-addr/Codira | <no-name> | s:{{.*}} | <no-cgname> | Def,RelChild,RelAcc -
// CHECK: instance-method/acc-mutaddr/Codira | <no-name> | s:{{.*}} | <no-cgname> | Def,RelChild,RelAcc -
// CHECK: instance-method/Codira | method() | s:{{.*}} | <no-cgname> | Def,RelChild -
// CHECK: static-method/Codira | staticMethod() | s:{{.*}} | <no-cgname> | Def,RelChild -
// CHECK: instance-property/subscript/Codira | subscript(_:) | s:{{.*}} | <no-cgname> | Def,RelChild -
// CHECK: instance-method/acc-get/Codira | getter:subscript(_:) | s:{{.*}} | <no-cgname> | Def,RelChild,RelAcc -
// CHECK: protocol/Codira | P1 | s:{{.*}} | <no-cgname> | Def -
// CHECK: type-alias/associated-type/Codira | AT | s:{{.*}} | <no-cgname> | Def,Ref,RelChild -
// CHECK: type-alias/Codira | TA | s:{{.*}} | <no-cgname> | Def,RelChild -
// CHECK: class/Codira | C1 | s:{{.*}} | <no-cgname> | Def,Ref,RelBase,RelCont -
// CHECK: instance-method/Codira | method() | s:{{.*}} | <no-cgname> | Def,Ref,Call,Dyn,RelChild,RelRec,RelCall,RelCont -
// CHECK: class/Codira | C2 | s:{{.*}} | <no-cgname> | Def,Ref - RelChild,RelBase
// CHECK: instance-method/Codira | method() | s:{{.*}} | <no-cgname> | Def,Dyn,RelChild,RelOver -
// CHECK: function/Codira | takeC1(x:) | s:{{.*}} | <no-cgname> | Def -
// CHECK: instance-method(test)/Codira | testFoo() | s:{{.*}} | <no-cgname> | Def,Dyn,RelChild -
// CHECK: ------------

// CHECK: [[@LINE+1]]:8 | struct/Codira | [[S1_USR:s:.*]] | Def | rel: 0
struct S1 {
// CHECK: [[@LINE+2]]:7 | instance-property/Codira | [[property_USR]] | Def,RelChild | rel: 1
// CHECK-NEXT:  RelChild | [[S1_USR]]
  immutable property = 1
// CHECK: [[@LINE+2]]:14 | static-property/Codira | [[staticProperty_USR:s:.*]] | Def,RelChild | rel: 1
// CHECK-NEXT: RelChild | [[S1_USR]]
  static immutable staticProperty = 2

// CHECK: [[@LINE+3]]:7 | instance-property/Codira | [[computedPropertyGetSet_USR:s:.*]] | Def,RelChild | rel: 1
// CHECK-NEXT: RelChild | [[S1_USR]]
// CHECK: [[@LINE+1]]:31 | struct/Codira | s:Si | Ref,RelCont | rel: 1
  var computedPropertyGetSet: Int {
// CHECK: [[@LINE+2]]:5 | instance-method/acc-get/Codira | s:{{.*}} | Def,RelChild,RelAcc | rel: 1
// CHECK-NEXT: RelChild,RelAcc | [[computedPropertyGetSet_USR]]
    get { return 1 }
// CHECK: [[@LINE+2]]:5 | instance-method/acc-set/Codira | s:{{.*}} | Def,RelChild,RelAcc | rel: 1
// CHECK-NEXT: RelChild,RelAcc | [[computedPropertyGetSet_USR]]
    set { }
  }

// CHECK: [[@LINE+2]]:7 | instance-property/Codira | [[computedPropertyWillDid_USR:s:.*]] | Def,RelChild | rel: 1
// CHECK-NEXT: RelChild | [[S1_USR]]
  var computedPropertyWillDid: Int {
// CHECK: [[@LINE+2]]:5 | instance-method/acc-willset/Codira | s:{{.*}} | Def,RelChild,RelAcc | rel: 1
// CHECK-NEXT: RelChild,RelAcc | [[computedPropertyWillDid_USR]]
    willSet { }
// CHECK: [[@LINE+2]]:5 | instance-method/acc-didset/Codira | s:{{.*}} | Def,RelChild,RelAcc | rel: 1
// CHECK-NEXT: RelChild,RelAcc | [[computedPropertyWillDid_USR]]
    didSet { }
  }

// CHECK: [[@LINE+2]]:7 | instance-property/Codira | [[computedPropertyAddressor_USR:s:.*]] | Def,RelChild | rel: 1
// CHECK-NEXT: RelChild | [[S1_USR]]
  var computedPropertyAddressor: Int {
// CHECK: [[@LINE+2]]:5 | instance-method/acc-addr/Codira | s:{{.*}} | Def,RelChild,RelAcc | rel: 1
// CHECK-NEXT: RelChild,RelAcc | [[computedPropertyAddressor_USR]]
    unsafeAddress { }
// CHECK: [[@LINE+2]]:5 | instance-method/acc-mutaddr/Codira | s:{{.*}} | Def,RelChild,RelAcc | rel: 1
// CHECK-NEXT: RelChild,RelAcc | [[computedPropertyAddressor_USR]]
    unsafeMutableAddress { }
  }

// CHECK: [[@LINE+2]]:8 | instance-method/Codira | [[method_USR:s:.*]] | Def,RelChild | rel: 1
// CHECK-NEXT: RelChild | [[S1_USR]]
  fn method() {
    _ = this
// CHECK: [[@LINE+3]]:9 | instance-method/acc-get/Codira | s:{{.*}} | Ref,Call,Impl,RelCall,RelCont | rel: 1
// CHECK-NEXT: RelCall,RelCont | [[method_USR]]
// CHECK: [[@LINE+1]]:9 | instance-property/Codira | s:{{.*}} | Ref,Read,RelCont | rel: 1
    _ = property
  }

// CHECK: [[@LINE+2]]:15 | static-method/Codira | [[staticMethod_USR:s:.*]] | Def,RelChild | rel: 1
// CHECK-NEXT: RelChild | [[S1_USR]]
  static fn staticMethod() {
// CHECK: [[@LINE+4]]:9 | struct/Codira | s:{{.*}} | Ref,RelCont | rel: 1
// CHECK: [[@LINE+3]]:12 | static-method/acc-get/Codira | s:{{.*}} | Ref,Call,Impl,RelCall,RelCont | rel: 1
// CHECK-NEXT: RelCall,RelCont | [[staticMethod_USR]]
// CHECK: [[@LINE+1]]:12 | static-property/Codira | s:{{.*}} | Ref,Read,RelCont | rel: 1
    _ = S1.staticProperty
  }

// CHECK: [[@LINE+4]]:3 | instance-property/subscript/Codira | [[S1_subscript_USR:s:.*]] | Def,RelChild | rel: 1
// CHECK-NEXT: RelChild | [[S1_USR]]
// CHECK: [[@LINE+2]]:28 | instance-method/acc-get/Codira | s:{{.*}} | Def,RelChild,RelAcc | rel: 1
// CHECK-NEXT: RelChild,RelAcc | [[S1_subscript_USR]]
  subscript(x: Int) -> Int { return 1 }
}

// CHECK: [[@LINE+1]]:10 | protocol/Codira | [[P1_USR:s:.*]] | Def | rel: 0
protocol P1 {
// CHECK: [[@LINE+2]]:18 | type-alias/associated-type/Codira | s:{{.*}} | Def,RelChild | rel: 1
// CHECK-NEXT: RelChild | [[P1_USR]]
  associatedtype AT
// CHECK: [[@LINE+3]]:13 | type-alias/Codira | s:{{.*}} | Def,RelChild | rel: 1
// CHECK-NEXT: RelChild | [[P1_USR]]
// CHECK: [[@LINE+1]]:18 | type-alias/associated-type/Codira | s:{{.*}} | Ref | rel: 0
  typealias TA = AT
}

// CHECK: [[@LINE+1]]:7 | class/Codira | [[C1_USR:s:.*]] | Def | rel: 0
class C1 {
// CHECK: [[@LINE+2]]:8 | instance-method/Codira | [[C1_foo_USR:s:.*]] | Def,Dyn,RelChild | rel: 1
// CHECK-NEXT: RelChild | [[C1_USR]]
  fn method() {}
}
// CHECK: [[@LINE+3]]:7 | class/Codira | [[C2_USR:s:.*]] | Def | rel: 0
// CHECK: [[@LINE+2]]:12 | class/Codira | [[C1_USR]] | Ref,RelBase | rel: 1
// CHECK-NEXT: RelBase | [[C2_USR]]
class C2 : C1 {
// CHECK: [[@LINE+3]]:17 | instance-method/Codira | s:{{.*}} | Def,Dyn,RelChild,RelOver | rel: 2
// CHECK-NEXT: RelOver | [[C1_foo_USR]]
// CHECK-NEXT: RelChild | [[C2_USR]]
  override fn method() {}
}

// CHECK: [[@LINE+2]]:6 | function/Codira | [[takeC1_USR:s:.*]] | Def | rel: 0
// CHECK: [[@LINE+1]]:16 | class/Codira | s:{{.*}} | Ref,RelCont | rel: 1
fn takeC1(x: C1) {
// CHECK: [[@LINE+3]]:5 | instance-method/Codira | s:{{.*}} | Ref,Call,Dyn,RelRec,RelCall,RelCont | rel: 2
// CHECK-NEXT: RelCall,RelCont | [[takeC1_USR]]
// CHECK-NEXT: RelRec | [[C1_USR]]
  x.method()
}

fn test1() {}
class XCTestCase {}
class MyTestCase: XCTestCase {
// CHECK: [[@LINE+2]]:8 | instance-method(test)/Codira | s:{{.*}} | Def,Dyn,RelChild | rel: 1
// CHECK-NEXT: RelChild | s:4file10MyTestCaseC
  fn testFoo() { test1() }
}

// CHECK: [[@LINE+1]]:11 | class/Codira | s:4file2C2C | Ref | rel: 0
extension C2 {}
