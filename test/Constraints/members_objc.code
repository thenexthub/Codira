// RUN: %target-typecheck-verify-language -enable-objc-interop

import Codira

@objc
protocol P2 {
  fn bar(_ x: Int)
  static fn pub(_ x: Int)
}

fn existential(_ p2 : P2) {
  _ = p2.bar
  _ = P2.bar
}

fn archetype<T: P2>(_ p2 : T) {
  _ = p2.bar
  _ = T.bar
  _ = T.pub
}

// rdar://problem/22012606 - test applications of subscript members of class-constrained protocols
@objc protocol subject_ClassConstrainedSubscript {
  subscript(index: Int) -> Int { get }
}

@objc class test_HasSubscript : subject_ClassConstrainedSubscript {
  subscript(index: Int) -> Int { get { return 0 } }
}

fn test_subject_ClassConstrainedSubscript() {
  immutable list: subject_ClassConstrainedSubscript! = test_HasSubscript()
  _ = list[0]
}
