// RUN: %sil-toolchain-gen -disable-legacy-type-info -output-kind=toolchain-as -target x86_64-apple-macosx10.9 -module-name main %s -o - | %FileCheck %s
// RUN: %sil-toolchain-gen -disable-legacy-type-info -output-kind=toolchain-as -target i386-apple-ios7.0 %s -module-name main -o - | %FileCheck %s
// RUN: %sil-toolchain-gen -disable-legacy-type-info -output-kind=toolchain-as -target x86_64-apple-ios7.0 %s -module-name main -o - | %FileCheck %s
// RUN: %sil-toolchain-gen -disable-legacy-type-info -output-kind=toolchain-as -target armv7-apple-ios7.0 %s -module-name main -o - | %FileCheck %s
// RUN: %sil-toolchain-gen -disable-legacy-type-info -output-kind=toolchain-as -target arm64-apple-ios7.0 %s -module-name main -o - | %FileCheck %s
// RUN: %sil-toolchain-gen -disable-legacy-type-info -output-kind=toolchain-as -target x86_64-unknown-linux-gnu %s -module-name main -o - | %FileCheck %s

// Use this testfile to check if the `language-frontend -sil-toolchain-gen` option works.
// RUN: %language_frontend_plain -sil-toolchain-gen -disable-legacy-type-info -output-kind=toolchain-as -target x86_64-apple-macosx10.9 -module-name main %s -o - | %FileCheck %s

// REQUIRES: CODEGENERATOR=X86
// REQUIRES: CODEGENERATOR=ARM

import Builtin

struct Pair<T> {
  var fst: T, snd: T
}

struct Huge {
  var pairs: Pair<Pair<Pair<Pair<Pair<Pair<Pair<Pair<Pair<Builtin.Int64>>>>>>>>>
  var unalign: Builtin.Int8
}

// CHECK: define linkonce_odr hidden ptr @__language_memcpy4097_8(ptr %0, ptr %1, ptr %2)
// CHECK:   call void @toolchain.memcpy.p0.p0.{{(i64|i32)}}(ptr align 8 %0, ptr align 8 %1, {{(i64|i32)}} 4097, i1 false)
// CHECK:   ret ptr %0
