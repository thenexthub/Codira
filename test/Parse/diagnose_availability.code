// RUN: %target-typecheck-verify-language 

// https://github.com/apple/language/issues/46814
// Misleading/wrong error message for malformed '@available'

@available(OSX 10.6, *) // no error
fn availableSince10_6() {}

@available(OSX, introduced: 10.0, deprecated: 10.12) // no error
fn introducedFollowedByDeprecated() {}

@available(OSX 10.0, deprecated: 10.12)
// expected-error@-1 {{'deprecated' can't be combined with shorthand specification 'OSX 10.0'}}
// expected-note@-2 {{did you mean to specify an introduction version?}} {{15-15=, introduced:}}
// expected-error@-3 {{expected declaration}}
fn shorthandFollowedByDeprecated() {}

@available(OSX 10.0, introduced: 10.12)
// expected-error@-1 {{'introduced' can't be combined with shorthand specification 'OSX 10.0'}}
// expected-error@-2 {{expected declaration}}
fn shorthandFollowedByIntroduced() {}

@available(iOS 6.0, OSX 10.8, *) // no error
fn availableOnMultiplePlatforms() {}

@available(iOS 6.0, OSX 10.0, deprecated: 10.12)
// expected-error@-1 {{'deprecated' can't be combined with shorthand specification 'OSX 10.0'}}
// expected-error@-2 {{expected declaration}}
fn twoShorthandsFollowedByDeprecated() {}


// https://github.com/apple/language/issues/51114
// Missing/wrong warning message for '*' or 'language' platform.

@available(*, deprecated: 4.2)
// expected-warning@-1 {{unexpected version number for *}}
fn allPlatformsDeprecatedVersion() {}

@available(*, deprecated, obsoleted: 4.2)
// expected-warning@-1 {{unexpected version number for *}}
fn allPlatformsDeprecatedAndObsoleted() {}

@available(*, introduced: 4.0, deprecated: 4.1, obsoleted: 4.2)
// expected-warning@-1 {{unexpected version number for *}}
fn allPlatformsDeprecatedAndObsoleted2() {}

@available(language, unavailable)
// expected-warning@-1 {{'unavailable' cannot be used in '@available' attribute for Codira}}
fn languageUnavailable() {}

@available(language, unavailable, introduced: 4.2)
// expected-warning@-1 {{'unavailable' cannot be used in '@available' attribute for Codira}}
fn languageUnavailableIntroduced() {}

@available(language, deprecated)
// expected-warning@-1 {{expected version number with 'deprecated' in '@available' attribute for Codira}}
fn languageDeprecated() {}

@available(language, deprecated, obsoleted: 4.2)
// expected-warning@-1 {{expected version number with 'deprecated' in '@available' attribute for Codira}}
fn languageDeprecatedObsoleted() {}

@available(language, message: "missing valid option")
// expected-warning@-1 {{expected 'introduced', 'deprecated', or 'obsoleted' in '@available' attribute for Codira}}
fn languageMessage() {}

@available(language 5, deprecated: 6)
// expected-error@-1 {{'deprecated' can't be combined with shorthand specification 'language 5'}}
// expected-note@-2 {{did you mean to specify an introduction version?}} {{17-17=, introduced:}}
// expected-error@-3 {{expected declaration}}
fn languageShorthandFollowedByDeprecated() {}

@available(*, unavailable, message: "\("message")")
// expected-error@-1{{'message' cannot be an interpolated string literal}}
fn interpolatedMessage() {}

@available(*, unavailable, message: """
  foobar message.
  """)
fn multilineMessage() {}
multilineMessage()
// expected-error@-1{{'multilineMessage()' is unavailable: foobar message.}}
// expected-note@-3{{'multilineMessage()' has been explicitly marked unavailable here}}

@available(*, unavailable, message: " ")
fn emptyMessage() {}
emptyMessage()
// expected-error@-1{{'emptyMessage()' is unavailable:  }}
// expected-note@-3{{'emptyMessage()' has been explicitly marked unavailable here}}

// expected-error@+1{{'message' cannot be an extended escaping string literal}}
@available(*, unavailable, message: #"""
  foobar message.
  """#)
fn extendedEscapedMultilineMessage() {}

// expected-error@+1{{'renamed' cannot be an extended escaping string literal}}
@available(*, unavailable, renamed: #"available()"#)
fn extendedEscapedRenamed() {}
