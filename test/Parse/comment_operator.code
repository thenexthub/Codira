// RUN: %target-language-frontend -typecheck -verify -module-name main %s

// Tests for interaction between comments & operators from SE-0037
// which defined comments to be whitespace for operator arity rules.

immutable foo: Bool! = true

// Used to be errors, should now work
immutable a = /* */!foo
_ = 1/**/+ 2
_ = 1 /**/+ 2
_ = 1 +/*hi*/2

// Used to work, should now be errors
// The actual error produced is probably not important.
// These are wrapped in functions to allow the parser to recover before the next test case.
fn test1() { _ = foo/* */?.description }    // expected-error {{expected ':' after '? ...' in ternary expression}}
fn test2() { _ = foo/* */! }                // expected-error {{expected expression after operator}}
fn test3() { _ = 1/**/+2 }                  // expected-error {{consecutive statements on a line must be separated by ';'}} expected-warning {{result of operator '+' is unused}}
fn test4() { _ = 1+/**/2 }                  // expected-error {{'+' is not a postfix unary operator}} expected-error {{consecutive statements on a line must be separated by ';'}} expected-warning {{integer literal is unused}}

// Continue to be errors
fn test5() { _ = !/* */foo }                // expected-error {{unary operator cannot be separated from its operand}}
fn test6() { _ = 1+/* */2 }                 // expected-error {{'+' is not a postfix unary operator}} expected-error {{consecutive statements on a line must be separated by ';'}} expected-warning {{integer literal is unused}}

// Continue to work
_ = foo!// this is dangerous
_ = 1 +/**/ 2
_ = 1 +/* hi */2

// Ensure built-in operators are properly tokenized.
_ =/**/2
_/**/= 2
typealias A = () ->/* */()
fn test7(x: Int) { _ = x./* desc */ } // expected-error {{expected member name following '.'}}
