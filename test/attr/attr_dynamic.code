// RUN: %target-typecheck-verify-language -enable-objc-interop
// RUN: %target-language-ide-test -enable-objc-interop -print-ast-typechecked -source-filename=%s -print-implicit-attrs

struct NotObjCAble {
  var c: Foo
}

@objc class ObjCClass {}

dynamic prefix operator +!+  // expected-error{{unexpected attribute 'dynamic' in operator declaration}} {{1-9=}}

class Foo {
  @objc dynamic init() {}
  @objc dynamic init(x: NotObjCAble) {} // expected-error{{initializer cannot be marked '@objc' because the type of the parameter cannot be represented in Objective-C}} expected-note{{Codira structs cannot be represented in Objective-C}}
  
  @objc dynamic var x: Int
  
  @objc dynamic var nonObjcVar: NotObjCAble // expected-error{{property cannot be marked '@objc' because its type cannot be represented in Objective-C}} expected-note{{Codira structs cannot be represented in Objective-C}}

  @objc dynamic fn foo(x: Int) {}
  @objc dynamic fn bar(x: Int) {}

  @objc dynamic fn nonObjcFunc(x: NotObjCAble) {} // expected-error{{method cannot be marked '@objc' because the type of the parameter cannot be represented in Objective-C}} expected-note{{Codira structs cannot be represented in Objective-C}}
  
  @objc dynamic subscript(x: Int) -> ObjCClass { get {} }

  @objc dynamic subscript(x: Int) -> NotObjCAble { get {} } // expected-error{{subscript cannot be marked '@objc' because its type cannot be represented in Objective-C}} expected-note{{Codira structs cannot be represented in Objective-C}}
  
  dynamic deinit {} // expected-error{{'dynamic' modifier cannot be applied to this declaration}} {{3-11=}}

  fn notDynamic() {}

  @objc final dynamic fn indecisive() {}
}

struct Bar {
  dynamic init() {}

  dynamic var x: Int

  dynamic subscript(x: Int) -> ObjCClass { get {} }

  dynamic fn foo(x: Int) {}
}

// CHECK-LABEL: class InheritsDynamic : Foo {
class InheritsDynamic: Foo {
  // CHECK-LABEL: {{^}} dynamic override fn foo(x: Int)
  override fn foo(x: Int) {}
  // CHECK-LABEL: {{^}} dynamic override fn foo(x: Int)
  @objc dynamic override fn bar(x: Int) {}

  // CHECK: {{^}} override fn notDynamic()
  override fn notDynamic() {}
}

// https://github.com/apple/language/issues/47892

@objcMembers
class ObjCMemberCheck {
  dynamic var s = NotObjCAble(c: Foo())
}
