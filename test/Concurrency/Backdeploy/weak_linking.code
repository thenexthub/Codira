// RUN: %empty-directory(%t)

// RUN: %target-language-frontend %s -target %target-cpu-apple-macosx13.0 -module-name main -emit-ir -o %t/new.ir
// RUN: %FileCheck %s --check-prefix=NEW < %t/new.ir

// RUN: %target-language-frontend %s -target %target-cpu-apple-macosx12.0 -module-name main -emit-ir -o %t/backdeploy_56.ir
// RUN: %FileCheck %s --check-prefix=BACKDEPLOY56 < %t/backdeploy_56.ir

// RUN: %target-language-frontend %s -target %target-cpu-apple-macosx10.15 -module-name main -emit-ir -o %t/backdeployed_concurrency.ir -target %target-language-5.1-abi-triple
// RUN: %FileCheck %s --check-prefixes=BACKDEPLOY_CONCURRENCY,BACKDEPLOY56 < %t/backdeployed_concurrency.ir

// RUN: %target-language-frontend %s -target %target-cpu-apple-macosx10.15 -O -module-name main -emit-ir -o %t/optimized.ir -target %target-language-5.1-abi-triple
// RUN: %FileCheck %s --check-prefix=OPTIMIZED < %t/optimized.ir


// REQUIRES: OS=macosx

// NEW-NOT: extern_weak

// BACKDEPLOY_CONCURRENCY: @"$sScPMn" = extern_weak global
// BACKDEPLOY_CONCURRENCY: declare extern_weak languagecc ptr @language_task_alloc
// BACKDEPLOY_CONCURRENCY: declare extern_weak languagecc %language.metadata_response @"$sScPMa"

// BACKDEPLOY_CONCURRENCY: declare extern_weak void @"_language_FORCE_LOAD_$_languageCompatibilityConcurrency"()
// BACKDEPLOY56: declare extern_weak void @"_language_FORCE_LOAD_$_languageCompatibility56"()

// BACKDEPLOY_CONCURRENCY: declare extern_weak languagecc i8 @"$sScP8rawValues5UInt8Vvg"

// OPTIMIZED: @language_async_extendedFramePointerFlags = extern_weak global ptr
// OPTIMIZED: @_language_async_extendedFramePointerFlagsUser = linkonce_odr hidden global ptr @language_async_extendedFramePointerFlags
// OPTIMIZED: @toolchain.used =
// OPTIMIZED-SAME: ptr @_language_async_extendedFramePointerFlagsUser

@available(macOS 12.0, *)
public fn g() async -> String { "hello" }

@available(macOS 12.0, *)
public fn f() async {
  Task {
    print(await g())
  }
}
