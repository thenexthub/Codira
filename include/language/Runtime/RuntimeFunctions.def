//===--- RuntimeFunctions.def - Runtime Functions Database ------*- C++ -*-===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//

//===----------------------------------------------------------------------===//
//
// This file defines x-macros used for metaprogramming with the set of
// runtime functions.
//
// Runtime functions that read from object arguments cannot be marked
// ReadNone. Otherwise the objects may be freed before the runtime call.
// Runtime functions that instantiate metadata cannot be marked ReadNone
// or else they could be moved out of blocks controlled by a availability check.
//
//===----------------------------------------------------------------------===//

/// FUNCTION(Id, Name, CC, Availability, ReturnTys, ArgTys, Attrs, Effect)
///   Makes available as "Id" the following runtime function:
///     ReturnTy Name(ArgTys...);
///   ReturnTys is a call to RETURNS, which takes a non-empty list
///     of expressions meant to be looked up in IRGenModule.
///   ArgTys is either NO_ARGS or a call to ARGS, which takes a non-empty
///     list of expressions meant to be looked up in IRGenModule.
///   Attrs is a parenthesized list of attributes.
///   Effect is a list of runtime effects as defined by RuntimeEffect.
///   MemEffects is a list of memory effects
///
///   By default, passes Id to FUNCTION_ID.  Therefore, the valid uses of
///   this database define either:
///     FUNCTION_ID
///   or all of the following:
///     FUNCTION
///     RETURNS
///     ARGS
///     NO_ARGS
///     ATTRS
///     NO_ATTRS
///     MEMEFFECTS
///     UNKNOWN_MEMEFFECTS

#ifndef FUNCTION
#define FUNCTION(Id, Module, Name, CC, Availability, ReturnTys, ArgTys, Attrs, Effect, MemEffects) \
  FUNCTION_ID(Id)
#endif

FUNCTION(AllocBox, Codira, language_allocBox, CodiraCC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy, OpaquePtrTy),
         ARGS(TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Allocating),
         UNKNOWN_MEMEFFECTS)

//  BoxPair language_makeBoxUnique(OpaqueValue *buffer, Metadata *type, size_t alignMask);
FUNCTION(MakeBoxUnique,
         Codira, language_makeBoxUnique,
         CodiraCC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy, OpaquePtrTy),
         ARGS(OpaquePtrTy, TypeMetadataPtrTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Allocating),
         UNKNOWN_MEMEFFECTS)

FUNCTION(DeallocBox, Codira, language_deallocBox, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// language_projectBox reads object metadata so cannot be marked ReadNone.
FUNCTION(ProjectBox, Codira, language_projectBox, C_CC, AlwaysAvailable,
         RETURNS(OpaquePtrTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         MEMEFFECTS(ArgMemReadOnly))

FUNCTION(AllocEmptyBox, Codira, language_allocEmptyBox, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// RefCounted *language_allocObject(Metadata *type, size_t size, size_t alignMask);
FUNCTION(AllocObject, Codira, language_allocObject, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(TypeMetadataPtrTy, SizeTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Allocating),
         UNKNOWN_MEMEFFECTS)

// HeapObject *language_initStackObject(HeapMetadata const *metadata,
//                                   HeapObject *object);
FUNCTION(InitStackObject, Codira, language_initStackObject, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(TypeMetadataPtrTy, RefCountedPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// HeapObject *language_initStaticObject(HeapMetadata const *metadata,
//                                    HeapObject *object);
FUNCTION(InitStaticObject, Codira, language_initStaticObject, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(TypeMetadataPtrTy, RefCountedPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::Locking),
         UNKNOWN_MEMEFFECTS)

// void language_verifyEndOfLifetime(HeapObject *object);
FUNCTION(VerifyEndOfLifetime, Codira, language_verifyEndOfLifetime, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void language_deallocObject(HeapObject *obj, size_t size, size_t alignMask);
FUNCTION(DeallocObject, Codira, language_deallocObject, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy, SizeTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void language_deallocUninitializedObject(HeapObject *obj, size_t size, size_t alignMask);
FUNCTION(DeallocUninitializedObject, Codira, language_deallocUninitializedObject,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy, SizeTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void language_deallocClassInstance(HeapObject *obj, size_t size, size_t alignMask);
FUNCTION(DeallocClassInstance, Codira, language_deallocClassInstance, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy, SizeTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void language_deallocPartialClassInstance(HeapObject *obj, HeapMetadata *type, size_t size, size_t alignMask);
FUNCTION(DeallocPartialClassInstance, Codira, language_deallocPartialClassInstance,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy, TypeMetadataPtrTy, SizeTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *language_slowAlloc(size_t size, size_t alignMask);
FUNCTION(SlowAlloc, Codira, language_slowAlloc, C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(SizeTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Allocating),
         UNKNOWN_MEMEFFECTS)

// void language_slowDealloc(void *ptr, size_t size, size_t alignMask);
FUNCTION(SlowDealloc, Codira, language_slowDealloc, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, SizeTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void language_willThrow(error *ptr);
FUNCTION(WillThrow, Codira, language_willThrow, CodiraCC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, ErrorPtrTy->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// void language_errorInMain(error *ptr);
FUNCTION(ErrorInMain, Codira, language_errorInMain, CodiraCC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ErrorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// void language_unexpectedError(error *ptr);
FUNCTION(UnexpectedError, Codira, language_unexpectedError, CodiraCC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ErrorPtrTy),
         ATTRS(NoUnwind, NoReturn),
         EFFECT(RuntimeEffect::NoEffect, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *language_copyPOD(void *dest, void *src, Metadata *self);
FUNCTION(CopyPOD, Codira, language_copyPOD, C_CC, AlwaysAvailable,
         RETURNS(OpaquePtrTy),
         ARGS(OpaquePtrTy, OpaquePtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// void *language_retain(void *ptr);
FUNCTION(NativeStrongRetain, Codira, language_retain, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind, FirstParamReturned, WillReturn),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void language_release(void *ptr);
FUNCTION(NativeStrongRelease, Codira, language_release, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *language_retain_n(void *ptr, int32_t n);
FUNCTION(NativeStrongRetainN, Codira, language_retain_n, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(RefCountedPtrTy, Int32Ty),
         ATTRS(NoUnwind, FirstParamReturned, WillReturn),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void *language_release_n(void *ptr, int32_t n);
FUNCTION(NativeStrongReleaseN, Codira, language_release_n, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(RefCountedPtrTy, Int32Ty),
         ATTRS(NoUnwind, FirstParamReturned),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void language_setDeallocating(void *ptr);
FUNCTION(NativeSetDeallocating, Codira, language_setDeallocating,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void *language_nonatomic_retain_n(void *ptr, int32_t n);
FUNCTION(NativeNonAtomicStrongRetainN, Codira, language_nonatomic_retain_n, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(RefCountedPtrTy, Int32Ty),
         ATTRS(NoUnwind, FirstParamReturned, WillReturn),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void language_nonatomic_release_n(void *ptr, int32_t n);
FUNCTION(NativeNonAtomicStrongReleaseN, Codira, language_nonatomic_release_n, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *language_unknownObjectRetain_n(void *ptr, int32_t n);
FUNCTION(UnknownObjectRetainN, Codira, language_unknownObjectRetain_n,
         C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(RefCountedPtrTy, Int32Ty),
         ATTRS(NoUnwind, FirstParamReturned),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void language_unknownObjectRelease_n(void *ptr, int32_t n);
FUNCTION(UnknownObjectReleaseN, Codira, language_unknownObjectRelease_n,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *language_nonatomic_unknownObjectRetain_n(void *ptr, int32_t n);
FUNCTION(NonAtomicUnknownObjectRetainN, Codira, language_nonatomic_unknownObjectRetain_n,
         C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(RefCountedPtrTy, Int32Ty),
         ATTRS(NoUnwind, FirstParamReturned),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void language_nonatomic_unknownObjectRelease_n(void *ptr, int32_t n);
FUNCTION(NonAtomicUnknownObjectReleaseN, Codira, language_nonatomic_unknownObjectRelease_n,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void language_bridgeObjectRetain_n(void *ptr, int32_t n);
FUNCTION(BridgeObjectRetainN, Codira, language_bridgeObjectRetain_n,
         C_CC, AlwaysAvailable,
         RETURNS(BridgeObjectPtrTy),
         ARGS(BridgeObjectPtrTy, Int32Ty),
         ATTRS(NoUnwind, FirstParamReturned),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void language_bridgeObjectRelease_n(void *ptr, int32_t n);
FUNCTION(BridgeObjectReleaseN, Codira, language_bridgeObjectRelease_n,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(BridgeObjectPtrTy, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void language_nonatomic_bridgeObjectRetain_n(void *ptr, int32_t n);
FUNCTION(NonAtomicBridgeObjectRetainN, Codira, language_nonatomic_bridgeObjectRetain_n,
         C_CC, AlwaysAvailable,
         RETURNS(BridgeObjectPtrTy),
         ARGS(BridgeObjectPtrTy, Int32Ty),
         ATTRS(NoUnwind, FirstParamReturned),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void language_nonatomic_bridgeObjectRelease_n(void *ptr, int32_t n);
FUNCTION(NonAtomicBridgeObjectReleaseN, Codira, language_nonatomic_bridgeObjectRelease_n,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(BridgeObjectPtrTy, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *language_nonatomic_retain(void *ptr);
FUNCTION(NativeNonAtomicStrongRetain, Codira, language_nonatomic_retain,
         C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind, FirstParamReturned, WillReturn),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void language_nonatomic_release(void *ptr);
FUNCTION(NativeNonAtomicStrongRelease, Codira, language_nonatomic_release,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *language_tryRetain(void *ptr);
FUNCTION(NativeTryRetain, Codira, language_tryRetain, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Locking),
         UNKNOWN_MEMEFFECTS)

// bool language_isDeallocating(void *ptr);
FUNCTION(IsDeallocating, Codira, language_isDeallocating, C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind, ZExt, WillReturn),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void *language_unknownObjectRetain(void *ptr);
FUNCTION(UnknownObjectRetain, Codira, language_unknownObjectRetain, C_CC, AlwaysAvailable,
         RETURNS(UnknownRefCountedPtrTy),
         ARGS(UnknownRefCountedPtrTy),
         ATTRS(NoUnwind, FirstParamReturned),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void language_unknownObjectRelease(void *ptr);
FUNCTION(UnknownObjectRelease, Codira, language_unknownObjectRelease,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(UnknownRefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *language_nonatomic_unknownObjectRetain(void *ptr);
FUNCTION(NonAtomicUnknownObjectRetain, Codira, language_nonatomic_unknownObjectRetain,
         C_CC, AlwaysAvailable,
         RETURNS(UnknownRefCountedPtrTy),
         ARGS(UnknownRefCountedPtrTy),
         ATTRS(NoUnwind, FirstParamReturned),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void language_nonatomic_unknownObjectRelease(void *ptr);
FUNCTION(NonAtomicUnknownObjectRelease, Codira, language_nonatomic_unknownObjectRelease,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(UnknownRefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *language_bridgeObjectRetain(void *ptr);
FUNCTION(BridgeObjectStrongRetain, Codira, language_bridgeObjectRetain,
         C_CC, AlwaysAvailable,
         RETURNS(BridgeObjectPtrTy),
         ARGS(BridgeObjectPtrTy),
         ATTRS(NoUnwind, FirstParamReturned),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void language_bridgeRelease(void *ptr);
FUNCTION(BridgeObjectStrongRelease, Codira, language_bridgeObjectRelease,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(BridgeObjectPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *language_nonatomic_bridgeObjectRetain(void *ptr);
FUNCTION(NonAtomicBridgeObjectStrongRetain, Codira, language_nonatomic_bridgeObjectRetain,
         C_CC, AlwaysAvailable,
         RETURNS(BridgeObjectPtrTy),
         ARGS(BridgeObjectPtrTy),
         ATTRS(NoUnwind, FirstParamReturned),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void language_nonatomic_bridgeRelease(void *ptr);
FUNCTION(NonAtomicBridgeObjectStrongRelease,
         Codira, language_nonatomic_bridgeObjectRelease,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(BridgeObjectPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)


// error *language_errorRetain(error *ptr);
FUNCTION(ErrorStrongRetain, Codira, language_errorRetain,
         C_CC, AlwaysAvailable,
         RETURNS(ErrorPtrTy),
         ARGS(ErrorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void language_errorRelease(void *ptr);
FUNCTION(ErrorStrongRelease, Codira, language_errorRelease,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ErrorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

#define NEVER_LOADABLE_CHECKED_REF_STORAGE_HELPER(Name, Nativeness, SymName, UnknownPrefix) \
  /* void language_##SymName##Destroy(Name##Reference *object); */ \
  FUNCTION(Nativeness##Name##Destroy, Codira, language_##SymName##Destroy, \
           C_CC, AlwaysAvailable, \
           RETURNS(VoidTy), \
           ARGS(Name##ReferencePtrTy), \
           ATTRS(NoUnwind), \
           EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating), \
           UNKNOWN_MEMEFFECTS) \
  /* void language_##SymName##Init(Name##Reference *object, void *value); */ \
  FUNCTION(Nativeness##Name##Init, Codira, language_##SymName##Init, \
           C_CC, AlwaysAvailable, \
           RETURNS(Name##ReferencePtrTy), \
           ARGS(Name##ReferencePtrTy, UnknownPrefix##RefCountedPtrTy), \
           ATTRS(NoUnwind, FirstParamReturned, WillReturn), \
           EFFECT(RuntimeEffect::NoEffect), \
           UNKNOWN_MEMEFFECTS) \
  /* Name##Reference *language_##SymName##Assign(Name##Reference *object, void *value); */ \
  FUNCTION(Nativeness##Name##Assign, Codira, language_##SymName##Assign, \
           C_CC, AlwaysAvailable, \
           RETURNS(Name##ReferencePtrTy), \
           ARGS(Name##ReferencePtrTy, UnknownPrefix##RefCountedPtrTy), \
           ATTRS(NoUnwind, FirstParamReturned), \
           EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating), \
           UNKNOWN_MEMEFFECTS) \
  /* void *language_##SymName##Load(Name##Reference *object); */ \
  FUNCTION(Nativeness##Name##LoadStrong, Codira, language_##SymName##LoadStrong, \
           C_CC, AlwaysAvailable, \
           RETURNS(UnknownPrefix##RefCountedPtrTy), \
           ARGS(Name##ReferencePtrTy), \
           ATTRS(NoUnwind, WillReturn), \
           EFFECT(RuntimeEffect::NoEffect), \
           UNKNOWN_MEMEFFECTS) \
  /* void *language_##SymName##Take(Name##Reference *object); */ \
  FUNCTION(Nativeness##Name##TakeStrong, Codira, language_##SymName##TakeStrong, \
           C_CC, AlwaysAvailable, \
           RETURNS(UnknownPrefix##RefCountedPtrTy), \
           ARGS(Name##ReferencePtrTy), \
           ATTRS(NoUnwind, WillReturn), \
           EFFECT(RuntimeEffect::NoEffect), \
           UNKNOWN_MEMEFFECTS) \
  /* Name##Reference *language_##SymName##CopyInit(Name##Reference *dest, Name##Reference *src); */ \
  FUNCTION(Nativeness##Name##CopyInit, Codira, language_##SymName##CopyInit, \
           C_CC, AlwaysAvailable, \
           RETURNS(Name##ReferencePtrTy), \
           ARGS(Name##ReferencePtrTy, Name##ReferencePtrTy), \
           ATTRS(NoUnwind, FirstParamReturned, WillReturn), \
           EFFECT(RuntimeEffect::RefCounting), \
           UNKNOWN_MEMEFFECTS) \
  /* void *language_##SymName##TakeInit(Name##Reference *dest, Name##Reference *src); */ \
  FUNCTION(Nativeness##Name##TakeInit, Codira, language_##SymName##TakeInit, \
           C_CC, AlwaysAvailable, \
           RETURNS(Name##ReferencePtrTy), \
           ARGS(Name##ReferencePtrTy, Name##ReferencePtrTy), \
           ATTRS(NoUnwind, FirstParamReturned, WillReturn), \
           EFFECT(RuntimeEffect::NoEffect), \
           UNKNOWN_MEMEFFECTS) \
  /* Name##Reference *language_##SymName##CopyAssign(Name##Reference *dest, Name##Reference *src); */ \
  FUNCTION(Nativeness##Name##CopyAssign, Codira, language_##SymName##CopyAssign, \
           C_CC, AlwaysAvailable, \
           RETURNS(Name##ReferencePtrTy), \
           ARGS(Name##ReferencePtrTy, Name##ReferencePtrTy), \
           ATTRS(NoUnwind, FirstParamReturned), \
           EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating), \
           UNKNOWN_MEMEFFECTS) \
  /* Name##Reference *language_##SymName##TakeAssign(Name##Reference *dest, Name##Reference *src); */ \
  FUNCTION(Nativeness##Name##TakeAssign, Codira, language_##SymName##TakeAssign, \
           C_CC, AlwaysAvailable, \
           RETURNS(Name##ReferencePtrTy), \
           ARGS(Name##ReferencePtrTy, Name##ReferencePtrTy), \
           ATTRS(NoUnwind, FirstParamReturned), \
           EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating), \
           UNKNOWN_MEMEFFECTS)

#define NEVER_LOADABLE_CHECKED_REF_STORAGE(Name, name, ...) \
  NEVER_LOADABLE_CHECKED_REF_STORAGE_HELPER(Name, Native, name, ) \
  NEVER_LOADABLE_CHECKED_REF_STORAGE_HELPER(Name, Unknown, unknownObject##Name, Unknown)
#define LOADABLE_CHECKED_REF_STORAGE_HELPER(Name, name, Prefix, prefix) \
  /* void *language_##prefix##name##Retain(void *ptr); */ \
  FUNCTION(Prefix##Name##Retain, Codira, language_##prefix##name##Retain, \
           C_CC, AlwaysAvailable, \
           RETURNS(RefCountedPtrTy), \
           ARGS(RefCountedPtrTy), \
           ATTRS(NoUnwind, FirstParamReturned, WillReturn), \
           EFFECT(RuntimeEffect::RefCounting), \
           UNKNOWN_MEMEFFECTS) \
  /* void language_##prefix##name##Release(void *ptr); */ \
  FUNCTION(Prefix##Name##Release, Codira, language_##prefix##name##Release, \
           C_CC, AlwaysAvailable, \
           RETURNS(VoidTy), \
           ARGS(RefCountedPtrTy), \
           ATTRS(NoUnwind), \
           EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating), \
           UNKNOWN_MEMEFFECTS) \
  /* void *language_##prefix##name##RetainStrong(void *ptr); */ \
  FUNCTION(Prefix##StrongRetain##Name, Codira, language_##prefix##name##RetainStrong, \
           C_CC, AlwaysAvailable, \
           RETURNS(RefCountedPtrTy), \
           ARGS(RefCountedPtrTy), \
           ATTRS(NoUnwind, FirstParamReturned, WillReturn), \
           EFFECT(RuntimeEffect::RefCounting), \
           UNKNOWN_MEMEFFECTS) \
  /* void language_##prefix##name##RetainStrongAndRelease(void *ptr); */ \
  FUNCTION(Prefix##StrongRetainAnd##Name##Release, \
           Codira, language_##prefix##name##RetainStrongAndRelease, \
           C_CC, AlwaysAvailable, \
           RETURNS(VoidTy), \
           ARGS(RefCountedPtrTy), \
           ATTRS(NoUnwind), \
           EFFECT(RuntimeEffect::RefCounting), \
           UNKNOWN_MEMEFFECTS)
#define SOMETIMES_LOADABLE_CHECKED_REF_STORAGE(Name, name, ...) \
  NEVER_LOADABLE_CHECKED_REF_STORAGE_HELPER(Name, Unknown, unknownObject##Name, Unknown) \
  LOADABLE_CHECKED_REF_STORAGE_HELPER(Name, name, Native, ) \
  LOADABLE_CHECKED_REF_STORAGE_HELPER(Name, name, NonAtomicNative, nonatomic_)
#define ALWAYS_LOADABLE_CHECKED_REF_STORAGE(Name, name, ...) \
  LOADABLE_CHECKED_REF_STORAGE_HELPER(Name, name, Native, ) \
  LOADABLE_CHECKED_REF_STORAGE_HELPER(Name, name, NonAtomicNative, nonatomic_)
#include "language/AST/ReferenceStorage.def"
#undef NEVER_LOADABLE_CHECKED_REF_STORAGE_HELPER
#undef LOADABLE_CHECKED_REF_STORAGE_HELPER

// bool language_isUniquelyReferencedNonObjC(const void *);
FUNCTION(IsUniquelyReferencedNonObjC, Codira, language_isUniquelyReferencedNonObjC,
         C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(UnknownRefCountedPtrTy),
         ATTRS(NoUnwind, ZExt, WillReturn),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// bool language_isUniquelyReferencedNonObjC_nonNull(const void *);
FUNCTION(IsUniquelyReferencedNonObjC_nonNull,
         Codira, language_isUniquelyReferencedNonObjC_nonNull,
         C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(UnknownRefCountedPtrTy),
         ATTRS(NoUnwind, ZExt, WillReturn),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// bool language_isUniquelyReferencedNonObjC_nonNull_bridgeObject(
//   uintptr_t bits);
FUNCTION(IsUniquelyReferencedNonObjC_nonNull_bridgeObject,
         Codira, language_isUniquelyReferencedNonObjC_nonNull_bridgeObject,
         C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(BridgeObjectPtrTy),
         ATTRS(NoUnwind, ZExt, WillReturn),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// bool language_isUniquelyReferenced(const void *);
FUNCTION(IsUniquelyReferenced, Codira, language_isUniquelyReferenced,
         C_CC, ObjCIsUniquelyReferencedAvailability,
         RETURNS(Int1Ty),
         ARGS(UnknownRefCountedPtrTy),
         ATTRS(NoUnwind, ZExt, WillReturn),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// bool language_isUniquelyReferenced_nonNull(const void *);
FUNCTION(IsUniquelyReferenced_nonNull,
         Codira, language_isUniquelyReferenced_nonNull,
         C_CC, ObjCIsUniquelyReferencedAvailability,
         RETURNS(Int1Ty),
         ARGS(UnknownRefCountedPtrTy),
         ATTRS(NoUnwind, ZExt, WillReturn),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// bool language_isUniquelyReferenced_nonNull_bridgeObject(
//   uintptr_t bits);
FUNCTION(IsUniquelyReferenced_nonNull_bridgeObject,
         Codira, language_isUniquelyReferenced_nonNull_bridgeObject,
         C_CC, ObjCIsUniquelyReferencedAvailability,
         RETURNS(Int1Ty),
         ARGS(BridgeObjectPtrTy),
         ATTRS(NoUnwind, ZExt, WillReturn),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// bool language_isUniquelyReferenced_native(const struct HeapObject *);
FUNCTION(IsUniquelyReferenced_native, Codira, language_isUniquelyReferenced_native,
         C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind, ZExt, WillReturn),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// bool language_isUniquelyReferenced_nonNull_native(const struct HeapObject *);
FUNCTION(IsUniquelyReferenced_nonNull_native,
         Codira, language_isUniquelyReferenced_nonNull_native,
         C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind, ZExt, WillReturn),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// bool language_isEscapingClosureAtFileLocation(const struct HeapObject *object,
//                                            const unsigned char *filename,
//                                            int32_t filenameLength,
//                                            int32_t line,
//                                            int32_t col,
//                                            unsigned type);
FUNCTION(IsEscapingClosureAtFileLocation, Codira, language_isEscapingClosureAtFileLocation,
         C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(RefCountedPtrTy, Int8PtrTy, Int32Ty, Int32Ty, Int32Ty, Int32Ty),
         ATTRS(NoUnwind, ZExt),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void language_arrayInitWithCopy(opaque*, opaque*, size_t, type*);
FUNCTION(ArrayInitWithCopy, Codira, language_arrayInitWithCopy,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, OpaquePtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void language_arrayInitWithTakeNoAlias(opaque*, opaque*, size_t, type*);
FUNCTION(ArrayInitWithTakeNoAlias, Codira, language_arrayInitWithTakeNoAlias,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, OpaquePtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// void language_arrayInitWithTakeFrontToBack(opaque*, opaque*, size_t, type*);
FUNCTION(ArrayInitWithTakeFrontToBack, Codira, language_arrayInitWithTakeFrontToBack,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, OpaquePtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// void language_arrayInitWithTakeBackToFront(opaque*, opaque*, size_t, type*);
FUNCTION(ArrayInitWithTakeBackToFront, Codira, language_arrayInitWithTakeBackToFront,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, OpaquePtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// void language_arrayAssignWithCopyNoAlias(opaque*, opaque*, size_t, type*);
FUNCTION(ArrayAssignWithCopyNoAlias, Codira, language_arrayAssignWithCopyNoAlias,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, OpaquePtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void language_arrayAssignWithCopyFrontToBack(opaque*, opaque*, size_t, type*);
FUNCTION(ArrayAssignWithCopyFrontToBack, Codira, language_arrayAssignWithCopyFrontToBack,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, OpaquePtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void language_arrayAssignWithCopyBackToFront(opaque*, opaque*, size_t, type*);
FUNCTION(ArrayAssignWithCopyBackToFront, Codira, language_arrayAssignWithCopyBackToFront,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, OpaquePtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void language_arrayAssignWithTake(opaque*, opaque*, size_t, type*);
FUNCTION(ArrayAssignWithTake, Codira, language_arrayAssignWithTake, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, OpaquePtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void language_arrayDestroy(opaque*, size_t, type*);
FUNCTION(ArrayDestroy, Codira, language_arrayDestroy, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// Metadata *language_getFunctionTypeMetadata(unsigned long flags,
//                                         const Metadata **parameters,
//                                         const uint32_t *parameterFlags,
//                                         const Metadata *result);
FUNCTION(GetFunctionMetadata, Codira, language_getFunctionTypeMetadata,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(SizeTy,
              TypeMetadataPtrTy->getPointerTo(0),
              Int32Ty->getPointerTo(0),
              TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadOnly))

// Metadata *
// language_getFunctionTypeMetadataDifferentiable(unsigned long flags,
//                                             unsigned long diffKind,
//                                             const Metadata **parameters,
//                                             const uint32_t *parameterFlags,
//                                             const Metadata *result);
FUNCTION(GetFunctionMetadataDifferentiable,
         Codira, language_getFunctionTypeMetadataDifferentiable,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(SizeTy,
              SizeTy,
              TypeMetadataPtrTy->getPointerTo(0),
              Int32Ty->getPointerTo(0),
              TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadOnly))

// Metadata *
// language_getExtendedFunctionTypeMetadata(unsigned long flags,
//                                       unsigned long diffKind,
//                                       const Metadata **parameters,
//                                       const uint32_t *parameterFlags,
//                                       const Metadata *result,
//                                       const Metadata *globalActor,
//                                       uint32_t extendedflags,
//                                       const Metadata *thrownError);
FUNCTION(GetFunctionMetadataExtended,
         Codira, language_getExtendedFunctionTypeMetadata,
         C_CC, TypedThrowsAvailability,
         RETURNS(TypeMetadataPtrTy),
         ARGS(SizeTy,
              SizeTy,
              TypeMetadataPtrTy->getPointerTo(0),
              Int32Ty->getPointerTo(0),
              TypeMetadataPtrTy,
              TypeMetadataPtrTy,
              Int32Ty,
              TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadOnly))

// Metadata *
// language_getFunctionTypeMetadataGlobalActor(unsigned long flags,
//                                          unsigned long diffKind,
//                                          const Metadata **parameters,
//                                          const uint32_t *parameterFlags,
//                                          const Metadata *result,
//                                          const Metadata *globalActor);
FUNCTION(GetFunctionMetadataGlobalActor,
         Codira, language_getFunctionTypeMetadataGlobalActor,
         C_CC, ConcurrencyAvailability,
         RETURNS(TypeMetadataPtrTy),
         ARGS(SizeTy,
              SizeTy,
              TypeMetadataPtrTy->getPointerTo(0),
              Int32Ty->getPointerTo(0),
              TypeMetadataPtrTy,
              TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadOnly))

// Metadata *
// language_getFunctionTypeMetadataGlobalActorBackDeploy(unsigned long flags,
//                                                    unsigned long diffKind,
//                                               const Metadata **parameters,
//                                               const uint32_t *parameterFlags,
//                                               const Metadata *result,
//                                               const Metadata *globalActor);
FUNCTION(GetFunctionMetadataGlobalActorBackDeploy,
         Codira, language_getFunctionTypeMetadataGlobalActorBackDeploy,
         C_CC, OpaqueTypeAvailability,
         RETURNS(TypeMetadataPtrTy),
         ARGS(SizeTy,
              SizeTy,
              TypeMetadataPtrTy->getPointerTo(0),
              Int32Ty->getPointerTo(0),
              TypeMetadataPtrTy,
              TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadOnly))

// Metadata *language_getFunctionTypeMetadata0(unsigned long flags,
//                                          const Metadata *resultMetadata);
FUNCTION(GetFunctionMetadata0, Codira, language_getFunctionTypeMetadata0,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadNone))

// Metadata *language_getFunctionTypeMetadata1(unsigned long flags,
//                                          const Metadata *arg0,
//                                          const Metadata *resultMetadata);
FUNCTION(GetFunctionMetadata1, Codira, language_getFunctionTypeMetadata1,
        C_CC, AlwaysAvailable,
        RETURNS(TypeMetadataPtrTy),
        ARGS(SizeTy, TypeMetadataPtrTy, TypeMetadataPtrTy),
        ATTRS(NoUnwind),
        EFFECT(RuntimeEffect::MetaData),
        MEMEFFECTS(ReadNone))

// Metadata *language_getFunctionTypeMetadata2(unsigned long flags,
//                                          const Metadata *arg0,
//                                          const Metadata *arg1,
//                                          const Metadata *resultMetadata);
FUNCTION(GetFunctionMetadata2, Codira, language_getFunctionTypeMetadata2,
        C_CC, AlwaysAvailable,
        RETURNS(TypeMetadataPtrTy),
        ARGS(SizeTy, TypeMetadataPtrTy, TypeMetadataPtrTy, TypeMetadataPtrTy),
        ATTRS(NoUnwind),
        EFFECT(RuntimeEffect::MetaData),
        MEMEFFECTS(ReadNone))

// Metadata *language_getFunctionTypeMetadata3(unsigned long flags,
//                                          const Metadata *arg0,
//                                          const Metadata *arg1,
//                                          const Metadata *arg2,
//                                          const Metadata *resultMetadata);
FUNCTION(GetFunctionMetadata3, Codira, language_getFunctionTypeMetadata3,
        C_CC, AlwaysAvailable,
        RETURNS(TypeMetadataPtrTy),
        ARGS(SizeTy, TypeMetadataPtrTy, TypeMetadataPtrTy, TypeMetadataPtrTy,
             TypeMetadataPtrTy),
        ATTRS(NoUnwind),
        EFFECT(RuntimeEffect::MetaData),
        MEMEFFECTS(ReadNone))

// Metadata *language_getForeignTypeMetadata(Metadata *nonUnique);
FUNCTION(GetForeignTypeMetadata, Codira, language_getForeignTypeMetadata,
         CodiraCC, AlwaysAvailable,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadNone)) // only writes to runtime-private fields

// LANGUAGE_RUNTIME_EXPORT
// LANGUAGE_CC(language)
// bool language_compareTypeContextDescriptors(const TypeContextDescriptor *lhs,
//                                          const TypeContextDescriptor *rhs);
FUNCTION(CompareTypeContextDescriptors, 
         Codira, language_compareTypeContextDescriptors, CodiraCC,
         CompareTypeContextDescriptorsAvailability,
         RETURNS(Int1Ty),
         ARGS(TypeContextDescriptorPtrTy, 
              TypeContextDescriptorPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect), // ?
         MEMEFFECTS(ReadNone))

// MetadataResponse language_getSingletonMetadata(MetadataRequest request,
//                                             TypeContextDescriptor *type);
FUNCTION(GetSingletonMetadata, Codira, language_getSingletonMetadata,
         CodiraCC, AlwaysAvailable,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, TypeContextDescriptorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData), // ?
         MEMEFFECTS(ReadNone))

// MetadataResponse language_getGenericMetadata(MetadataRequest request,
//                                           const void * const *arguments,
//                                           TypeContextDescriptor *type);
FUNCTION(GetGenericMetadata, Codira, language_getGenericMetadata,
         CodiraCC, AlwaysAvailable,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, Int8PtrTy, TypeContextDescriptorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadOnly))

// MetadataResponse language_getCanonicalSpecializedMetadata(MetadataRequest request,
//                                                        Metadata *candidate);
FUNCTION(GetCanonicalSpecializedMetadata, Codira, language_getCanonicalSpecializedMetadata,
         CodiraCC, GetCanonicalSpecializedMetadataAvailability,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, TypeMetadataPtrTy, TypeMetadataPtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadOnly))

// MetadataResponse
// language_getCanonicalPrespecializedGenericMetadata(MetadataRequest request,
//                          const void * const *arguments,
//                          const TypeContextDescriptor *description,
//                          language_once_t *cachedFlag)
FUNCTION(GetCanonicalPrespecializedGenericMetadata, 
         Codira, language_getCanonicalPrespecializedGenericMetadata,
         CodiraCC, GetCanonicalPrespecializedGenericMetadataAvailability,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, Int8PtrTy, TypeContextDescriptorPtrTy, OnceTy->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadOnly))

// MetadataResponse language_getOpaqueTypeMetadata(MetadataRequest request,
//                                     const void * const *arguments,
//                                     const void *descriptor,
//                                     uintptr_t index);
FUNCTION(GetOpaqueTypeMetadata, Codira, language_getOpaqueTypeMetadata,
         CodiraCC, OpaqueTypeAvailability,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, Int8PtrTy, OpaqueTypeDescriptorPtrTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadOnly))


// MetadataResponse language_getOpaqueTypeMetadata2(MetadataRequest request,
//                                     const void * const *arguments,
//                                     const OpaqueTypeDescriptor *descriptor,
//                                     uintptr_t index);
FUNCTION(GetOpaqueTypeMetadata2, Codira, language_getOpaqueTypeMetadata2,
         CodiraCC, SignedDescriptorAvailability,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, Int8PtrTy, OpaqueTypeDescriptorPtrTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadOnly))


// const WitnessTable *language_getOpaqueTypeConformance(const void * const *arguments,
//                                     const OpaqueTypeDescriptor *descriptor,
//                                     uintptr_t index);
FUNCTION(GetOpaqueTypeConformance, Codira, language_getOpaqueTypeConformance,
         CodiraCC, OpaqueTypeAvailability,
         RETURNS(WitnessTablePtrTy),
         ARGS(Int8PtrTy, OpaqueTypeDescriptorPtrTy, SizeTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadOnly))

// const WitnessTable *language_getOpaqueTypeConformance2(const void * const *arguments,
//                                     const OpaqueTypeDescriptor *descriptor,
//                                     uintptr_t index);
FUNCTION(GetOpaqueTypeConformance2, Codira, language_getOpaqueTypeConformance2,
         CodiraCC, SignedDescriptorAvailability,
         RETURNS(WitnessTablePtrTy),
         ARGS(Int8PtrTy, OpaqueTypeDescriptorPtrTy, SizeTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadOnly))

// Metadata *language_allocateGenericClassMetadata(ClassDescriptor *type,
//                                              const void * const *arguments,
//                                              const void *template);
FUNCTION(AllocateGenericClassMetadata, Codira, language_allocateGenericClassMetadata,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeContextDescriptorPtrTy, Int8PtrPtrTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// Metadata *language_cvw_allocateGenericClassMetadataWithLayoutString(
//     ClassDescriptor *type,
//     const void * const *arguments,
//     const void *template);
FUNCTION(AllocateGenericClassMetadataWithLayoutString,
         Codira, language_cvw_allocateGenericClassMetadataWithLayoutString,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeContextDescriptorPtrTy, Int8PtrPtrTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// Metadata *language_allocateGenericValueMetadata(ValueTypeDescriptor *type,
//                                              const void * const *arguments,
//                                              const void *template,
//                                              size_t extraSize);
FUNCTION(AllocateGenericValueMetadata, Codira, language_allocateGenericValueMetadata,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeContextDescriptorPtrTy, Int8PtrPtrTy, Int8PtrTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// Metadata *language_cvw_allocateGenericValueMetadataWithLayoutString(
//     ValueTypeDescriptor *type,
//     const void * const *arguments,
//     const void *template,
//     size_t extraSize);
FUNCTION(AllocateGenericValueMetadataWithLayoutString,
         Codira, language_cvw_allocateGenericValueMetadataWithLayoutString,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeContextDescriptorPtrTy, Int8PtrPtrTy, Int8PtrTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// MetadataResponse language_checkMetadataState(MetadataRequest request,
//                                           const Metadata *type);
FUNCTION(CheckMetadataState, Codira, language_checkMetadataState,
         CodiraCC, AlwaysAvailable,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData), // ?
         MEMEFFECTS(ReadOnly))


// const ProtocolWitnessTable *
// language_getWitnessTable(const ProtocolConformanceDescriptor *conf,
//                       const Metadata *type,
//                       const void * const *instantiationArgs);
FUNCTION(GetWitnessTable, Codira, language_getWitnessTable, C_CC, AlwaysAvailable,
         RETURNS(WitnessTablePtrTy),
         ARGS(ProtocolConformanceDescriptorPtrTy,
              TypeMetadataPtrTy,
              WitnessTablePtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData), // ?
         MEMEFFECTS(ReadOnly))

FUNCTION(GetWitnessTableRelative, Codira, language_getWitnessTableRelative, C_CC, AlwaysAvailable,
         RETURNS(WitnessTablePtrTy),
         ARGS(ProtocolConformanceDescriptorPtrTy,
              TypeMetadataPtrTy,
              WitnessTablePtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData), // ?
         MEMEFFECTS(ReadOnly))

// MetadataResponse language_getAssociatedTypeWitness(
//                                            MetadataRequest request,
//                                            WitnessTable *wtable,
//                                            const Metadata *conformingType,
//                                            ProtocolRequirement *reqBase,
//                                            ProtocolRequirement *assocType);
FUNCTION(GetAssociatedTypeWitness, Codira, language_getAssociatedTypeWitness,
         CodiraCC, AlwaysAvailable,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy,
              WitnessTablePtrTy,
              TypeMetadataPtrTy,
              ProtocolRequirementStructTy->getPointerTo(),
              ProtocolRequirementStructTy->getPointerTo()),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData), // ?
         MEMEFFECTS(ReadNone))
FUNCTION(GetAssociatedTypeWitnessRelative, Codira, language_getAssociatedTypeWitnessRelative,
         CodiraCC, AlwaysAvailable,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy,
              WitnessTablePtrTy,
              TypeMetadataPtrTy,
              ProtocolRequirementStructTy->getPointerTo(),
              ProtocolRequirementStructTy->getPointerTo()),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData), // ?
         MEMEFFECTS(ReadNone))

// LANGUAGE_RUNTIME_EXPORT LANGUAGE_CC(language)
// const WitnessTable *language_getAssociatedConformanceWitness(
//                                 WitnessTable *wtable,
//                                 const Metadata *conformingType,
//                                 const Metadata *assocType,
//                                 const ProtocolRequirement *reqBase,
//                                 const ProtocolRequirement *assocConformance);
FUNCTION(GetAssociatedConformanceWitness,
         Codira, language_getAssociatedConformanceWitness, CodiraCC, AlwaysAvailable,
         RETURNS(WitnessTablePtrTy),
         ARGS(WitnessTablePtrTy,
              TypeMetadataPtrTy,
              TypeMetadataPtrTy,
              ProtocolRequirementStructTy->getPointerTo(),
              ProtocolRequirementStructTy->getPointerTo()),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData), // ?
         MEMEFFECTS(ReadNone))
FUNCTION(GetAssociatedConformanceWitnessRelative,
         Codira, language_getAssociatedConformanceWitnessRelative, CodiraCC, AlwaysAvailable,
         RETURNS(WitnessTablePtrTy),
         ARGS(WitnessTablePtrTy,
              TypeMetadataPtrTy,
              TypeMetadataPtrTy,
              ProtocolRequirementStructTy->getPointerTo(),
              ProtocolRequirementStructTy->getPointerTo()),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData), // ?
         MEMEFFECTS(ReadNone))

// LANGUAGE_RUNTIME_EXPORT
//     LANGUAGE_CC(language) bool language_compareProtocolConformanceDescriptors(
//         const ProtocolConformanceDescriptor *lhs,
//         const ProtocolConformanceDescriptor *rhs);
FUNCTION(CompareProtocolConformanceDescriptors,
         Codira, language_compareProtocolConformanceDescriptors, CodiraCC,
         CompareProtocolConformanceDescriptorsAvailability,
         RETURNS(Int1Ty),
         ARGS(ProtocolConformanceDescriptorPtrTy, 
              ProtocolConformanceDescriptorPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect), // ?
         MEMEFFECTS(ReadNone))

// LANGUAGE_RUNTIME_EXPORT LANGUAGE_CC(language)
// const Metadata * const *
// language_allocateMetadataPack(const Metadata * const *ptr, size_t count);
FUNCTION(AllocateMetadataPack,
         Codira, language_allocateMetadataPack, CodiraCC,
         AlwaysAvailable,  // FIXME
         RETURNS(TypeMetadataPtrPtrTy),
         ARGS(TypeMetadataPtrPtrTy, SizeTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData), // ?
         UNKNOWN_MEMEFFECTS)

// LANGUAGE_RUNTIME_EXPORT LANGUAGE_CC(language)
// const WitnessTable * const *
// language_allocateWitnessTablePack(const WitnessTable * const *ptr, size_t count);
FUNCTION(AllocateWitnessTablePack,
         Codira, language_allocateWitnessTablePack, CodiraCC,
         AlwaysAvailable,  // FIXME
         RETURNS(WitnessTablePtrPtrTy),
         ARGS(WitnessTablePtrPtrTy, SizeTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData), // ?
         UNKNOWN_MEMEFFECTS)

// Metadata *language_getMetatypeMetadata(Metadata *instanceTy);
FUNCTION(GetMetatypeMetadata, Codira, language_getMetatypeMetadata, C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData), // ?
         MEMEFFECTS(ReadNone))

// Metadata *language_getExistentialMetatypeMetadata(Metadata *instanceTy);
FUNCTION(GetExistentialMetatypeMetadata,
         Codira, language_getExistentialMetatypeMetadata, C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData), // ?
         MEMEFFECTS(ReadNone))

// Metadata *language_getObjCClassMetadata(objc_class *theClass);
FUNCTION(GetObjCClassMetadata, Codira, language_getObjCClassMetadata,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(ObjCClassPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData), // ?
         MEMEFFECTS(ReadNone))

// Metadata *language_getObjCClassFromMetadata(objc_class *theClass);
FUNCTION(GetObjCClassFromMetadata, Codira, language_getObjCClassFromMetadata,
         C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect), // ?
         MEMEFFECTS(ReadNone))

// Metadata *language_getObjCClassFromObject(id object);
// This reads object metadata so cannot be marked ReadNone.
FUNCTION(GetObjCClassFromObject, Codira, language_getObjCClassFromObject,
         C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(ObjCPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect), // ?
         MEMEFFECTS(ArgMemReadOnly))

// MetadataResponse language_getTupleTypeMetadata(MetadataRequest request,
//                                             TupleTypeFlags flags,
//                                             Metadata * const *elts,
//                                             const char *labels,
//                                             value_witness_table_t *proposed);
FUNCTION(GetTupleMetadata, Codira, language_getTupleTypeMetadata, CodiraCC, AlwaysAvailable,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, SizeTy, TypeMetadataPtrTy->getPointerTo(0),
              Int8PtrTy, WitnessTablePtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadOnly))

// MetadataResponse language_getTupleTypeMetadata2(MetadataRequest request,
//                                              Metadata *elt0, Metadata *elt1,
//                                              const char *labels,
//                                              value_witness_table_t *proposed);
FUNCTION(GetTupleMetadata2, Codira, language_getTupleTypeMetadata2, CodiraCC, AlwaysAvailable,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, TypeMetadataPtrTy, TypeMetadataPtrTy,
              Int8PtrTy, WitnessTablePtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadOnly))

// MetadataResponse language_getTupleTypeMetadata3(MetadataRequest request,
//                                              Metadata *elt0, Metadata *elt1,
//                                              Metadata *elt2,
//                                              const char *labels,
//                                              value_witness_table_t *proposed);
FUNCTION(GetTupleMetadata3, Codira, language_getTupleTypeMetadata3, CodiraCC, AlwaysAvailable,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, TypeMetadataPtrTy, TypeMetadataPtrTy, TypeMetadataPtrTy,
              Int8PtrTy, WitnessTablePtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadOnly))

// void language_getTupleTypeLayout(TypeLayout *result,
//                               uint32_t offsets,
//                               TupleTypeFlags flags,
//                               const TypeLayout * const *elts);
FUNCTION(GetTupleLayout, Codira, language_getTupleTypeLayout, CodiraCC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(FullTypeLayoutTy->getPointerTo(0), Int32Ty->getPointerTo(0),
              SizeTy, Int8PtrPtrTy->getPointerTo(0)),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// size_t language_getTupleTypeLayout2(TypeLayout *layout,
//                                  const TypeLayout *elt0,
//                                  const TypeLayout *elt1);
FUNCTION(GetTupleLayout2, Codira, language_getTupleTypeLayout2, CodiraCC, AlwaysAvailable,
         RETURNS(SizeTy),
         ARGS(FullTypeLayoutTy->getPointerTo(0), Int8PtrPtrTy, Int8PtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// OffsetPair language_getTupleTypeLayout3(TypeLayout *layout,
//                                      const TypeLayout *elt0,
//                                      const TypeLayout *elt1,
//                                      const TypeLayout *elt2);
FUNCTION(GetTupleLayout3, Codira, language_getTupleTypeLayout3, CodiraCC, AlwaysAvailable,
         RETURNS(OffsetPairTy),
         ARGS(FullTypeLayoutTy->getPointerTo(0),
              Int8PtrPtrTy, Int8PtrPtrTy, Int8PtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// MetadataResponse language_getFixedArrayTypeMetadata(MetadataRequest request,
//                                                  intptr_t size,
//                                                  Metadata *elt);
FUNCTION(GetFixedArrayTypeMetadata, Codira, language_getFixedArrayTypeMetadata, CodiraCC,
         ValueGenericTypeAvailability,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadOnly))

// Metadata *language_getExistentialTypeMetadata(
//                              ProtocolClassConstraint classConstraint,
//                              const Metadata *superclassConstraint,
//                              size_t numProtocols,
//                              const ProtocolDescriptorRef *protocols);
//
// Note: ProtocolClassConstraint::Class is 0, ::Any is 1.
FUNCTION(GetExistentialMetadata,
         Codira, language_getExistentialTypeMetadata,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(Int1Ty, TypeMetadataPtrTy, SizeTy,
              ProtocolDescriptorRefTy->getPointerTo()),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData), // ?
         MEMEFFECTS(ReadOnly))


// const ExtendedExistentialTypeShape *
// language_getExtendedExistentialTypeShape(
//             const NonUniqueExtendedExistentialTypeShape *nonUnique);
FUNCTION(GetExtendedExistentialTypeShape,
         Codira, language_getExtendedExistentialTypeShape, C_CC,
         ParameterizedExistentialAvailability,
         RETURNS(TypeMetadataPtrTy),
         ARGS(Int8PtrTy, Int8PtrPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData), // ?
         MEMEFFECTS(ArgMemOnly))

// Metadata *language_getExtendedExistentialTypeMetadata(
//             const NonUniqueExtendedExistentialTypeShape *shape,
//             const void * const *generalizationArgs);
FUNCTION(GetExtendedExistentialTypeMetadata,
         Codira, language_getExtendedExistentialTypeMetadata, C_CC,
         ParameterizedExistentialAvailability,
         RETURNS(TypeMetadataPtrTy),
         ARGS(Int8PtrTy, Int8PtrPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData), // ?
         MEMEFFECTS(ArgMemOnly))

// Metadata *language_getExtendedExistentialTypeMetadata_unique(
//             const ExtendedExistentialTypeShape *shape,
//             const void * const *generalizationArgs);
FUNCTION(GetExtendedExistentialTypeMetadataUnique,
         Codira, language_getExtendedExistentialTypeMetadata_unique, C_CC,
         ParameterizedExistentialAvailability,
         RETURNS(TypeMetadataPtrTy),
         ARGS(Int8PtrTy, Int8PtrPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData), // ?
         MEMEFFECTS(ArgMemOnly))

// Metadata *language_relocateClassMetadata(TypeContextDescriptor *descriptor,
//                                       const void *pattern);
FUNCTION(RelocateClassMetadata,
         Codira, language_relocateClassMetadata, C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeContextDescriptorPtrTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// void language_initClassMetadata(Metadata *self,
//                              ClassLayoutFlags flags,
//                              size_t numFields,
//                              TypeLayout * const *fieldTypes,
//                              size_t *fieldOffsets);
FUNCTION(InitClassMetadata,
         Codira, language_initClassMetadata, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, SizeTy,
              Int8PtrPtrTy->getPointerTo(),
              SizeTy->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// void language_updateClassMetadata(Metadata *self,
//                                ClassLayoutFlags flags,
//                                size_t numFields,
//                                TypeLayout * const *fieldTypes,
//                                size_t *fieldOffsets);
FUNCTION(UpdateClassMetadata,
         Codira, language_updateClassMetadata, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, SizeTy,
              Int8PtrPtrTy->getPointerTo(),
              SizeTy->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// MetadataDependency language_initClassMetadata2(Metadata *self,
//                                             ClassLayoutFlags flags,
//                                             size_t numFields,
//                                             TypeLayout * const *fieldTypes,
//                                             size_t *fieldOffsets);
FUNCTION(InitClassMetadata2,
         Codira, language_initClassMetadata2, CodiraCC, AlwaysAvailable,
         RETURNS(TypeMetadataDependencyTy),
         ARGS(TypeMetadataPtrTy, SizeTy, SizeTy,
              Int8PtrPtrTy->getPointerTo(),
              SizeTy->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// MetadataDependency language_updateClassMetadata2(Metadata *self,
//                                               ClassLayoutFlags flags,
//                                               size_t numFields,
//                                               TypeLayout * const *fieldTypes,
//                                               size_t *fieldOffsets);
FUNCTION(UpdateClassMetadata2,
         Codira, language_updateClassMetadata2, CodiraCC, AlwaysAvailable,
         RETURNS(TypeMetadataDependencyTy),
         ARGS(TypeMetadataPtrTy, SizeTy, SizeTy,
              Int8PtrPtrTy->getPointerTo(),
              SizeTy->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// objc_class *language_updatePureObjCClassMetadata(
//             objc_class *self,
//             ClassLayoutFlags flags,
//             size_t numFields,
//             TypeLayout * const *fieldTypes);
FUNCTION(UpdatePureObjCClassMetadata,
         Codira, language_updatePureObjCClassMetadata, CodiraCC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(ObjCClassPtrTy, SizeTy, SizeTy, Int8PtrPtrTy->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// void *language_lookUpClassMethod(Metadata *metadata,
//                               ClassDescriptor *description,
//                               MethodDescriptor *method);
FUNCTION(LookUpClassMethod,
         Codira, language_lookUpClassMethod, C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(TypeMetadataPtrTy,
              MethodDescriptorStructTy->getPointerTo(),
              TypeContextDescriptorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// void language_initStructMetadata(Metadata *structType,
//                               StructLayoutFlags flags,
//                               size_t numFields,
//                               TypeLayout * const *fieldTypes,
//                               uint32_t *fieldOffsets);
FUNCTION(InitStructMetadata,
         Codira, language_initStructMetadata, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, SizeTy,
              Int8PtrPtrTy->getPointerTo(0),
              Int32Ty->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// void language_cvw_initStructMetadataWithLayoutString(Metadata *structType,
//                                               StructLayoutFlags flags,
//                                               size_t numFields,
//                                               uint8_t * const *fieldTypes,
//                                               const uint8_t *fieldTags
//                                               uint32_t *fieldOffsets);
FUNCTION(InitStructMetadataWithLayoutString,
         Codira, language_cvw_initStructMetadataWithLayoutString, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, SizeTy,
              Int8PtrPtrTy->getPointerTo(0),
              Int8PtrTy,
              Int32Ty->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// void language_initEnumMetadataSingleCase(Metadata *enumType,
//                                       EnumLayoutFlags flags,
//                                       TypeLayout *payload);
FUNCTION(InitEnumMetadataSingleCase,
         Codira, language_initEnumMetadataSingleCase,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, Int8PtrPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// void language_cvw_initEnumMetadataSingleCaseWithLayoutString(Metadata *enumType,
//                                                       EnumLayoutFlags flags,
//                                                       Metadata *payload);
FUNCTION(InitEnumMetadataSingleCaseWithLayoutString,
         Codira, language_cvw_initEnumMetadataSingleCaseWithLayoutString,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// void language_initEnumMetadataSinglePayload(Metadata *enumType,
//                                          EnumLayoutFlags flags,
//                                          TypeLayout *payload,
//                                          unsigned num_empty_cases);
FUNCTION(InitEnumMetadataSinglePayload,
         Codira, language_initEnumMetadataSinglePayload,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, Int8PtrPtrTy, Int32Ty),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// void language_cvw_initEnumMetadataSinglePayloadWithLayoutString(Metadata *enumType,
//                                                        EnumLayoutFlags flags,
//                                                        Metadata *payload,
//                                                    unsigned num_empty_cases);
FUNCTION(InitEnumMetadataSinglePayloadWithLayoutString,
         Codira, language_cvw_initEnumMetadataSinglePayloadWithLayoutString,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, TypeMetadataPtrTy, Int32Ty),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// void language_initEnumMetadataMultiPayload(Metadata *enumType,
//                                         EnumLayoutFlags layoutFlags,
//                                         size_t numPayloads,
//                                         TypeLayout * const *payloadTypes);
FUNCTION(InitEnumMetadataMultiPayload,
         Codira, language_initEnumMetadataMultiPayload,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, SizeTy, Int8PtrPtrTy->getPointerTo(0)),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// void
// language_cvw_initEnumMetadataMultiPayloadWithLayoutString(Metadata *enumType,
//                                                  EnumLayoutFlags layoutFlags,
//                                                    size_t numPayloads,
//                                              Metadata * const *payloadTypes);
FUNCTION(InitEnumMetadataMultiPayloadWithLayoutString,
         Codira, language_cvw_initEnumMetadataMultiPayloadWithLayoutString,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, SizeTy, TypeMetadataPtrPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// int language_getEnumCaseMultiPayload(opaque_t *obj, Metadata *enumTy);
FUNCTION(GetEnumCaseMultiPayload,
         Codira, language_getEnumCaseMultiPayload,
         C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(OpaquePtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         MEMEFFECTS(ReadOnly))

// int language_getEnumTagSinglePayloadGeneric(opaque_t *obj,
//                                          unsigned num_empty_cases,
//                                          Metadata *payloadType,
//                         int (*getExtraInhabitantIndex)(opaque_t *obj,
//                                                        unsigned numPayloadXI,
//                                                        Metadata *payload));
FUNCTION(GetEnumTagSinglePayloadGeneric,
         Codira, language_getEnumTagSinglePayloadGeneric,
         CodiraCC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(OpaquePtrTy, Int32Ty, TypeMetadataPtrTy,
              toolchain::FunctionType::get(Int32Ty, {OpaquePtrTy, Int32Ty,
                                                TypeMetadataPtrTy},
                                      false)->getPointerTo()),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         MEMEFFECTS(ReadOnly))


// void language_storeEnumTagSinglePayloadGeneric(opaque_t *obj,
//                                             unsigned case_index,
//                                             unsigned num_empty_cases,
//                                             Metadata *payloadType,
//                           void (*storeExtraInhabitant)(opaque_t *obj,
//                                                        unsigned case_index,
//                                                        unsigned numPayloadXI,
//                                                        Metadata *payload));
FUNCTION(StoreEnumTagSinglePayloadGeneric,
         Codira, language_storeEnumTagSinglePayloadGeneric,
         CodiraCC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, Int32Ty, Int32Ty, TypeMetadataPtrTy,
              toolchain::FunctionType::get(VoidTy, {OpaquePtrTy, Int32Ty, Int32Ty,
                                               TypeMetadataPtrTy},
                                      false)->getPointerTo()),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// void language_storeEnumTagMultiPayload(opaque_t *obj, Metadata *enumTy,
//                                     int case_index);
FUNCTION(StoreEnumTagMultiPayload,
         Codira, language_storeEnumTagMultiPayload,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, TypeMetadataPtrTy, Int32Ty),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// Class object_getClass(id object);
//
// This is readonly instead of readnone because isa-rewriting can have
// a noticeable effect.
FUNCTION(GetObjectClass, objc2, object_getClass, C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(ObjCPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::ObjectiveC),
         MEMEFFECTS(ReadOnly))


// id object_dispose(id object);
FUNCTION(ObjectDispose, objc2, object_dispose, C_CC, AlwaysAvailable,
         RETURNS(ObjCPtrTy),
         ARGS(ObjCPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::ObjectiveC, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// Class objc_lookUpClass(const char *name);
FUNCTION(LookUpClass, objc2, objc_lookUpClass, C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(Int8PtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadNone))

// Class objc_setSuperclass(Class cls, Class newSuper);
FUNCTION(SetSuperclass, objc2, class_setSuperclass, C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(ObjCClassPtrTy, ObjCClassPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::ObjectiveC),
         UNKNOWN_MEMEFFECTS)

// Metadata *language_getObjectType(id object);
FUNCTION(GetObjectType, Codira, language_getObjectType, C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(ObjCPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadOnly))

// Metadata *language_getDynamicType(opaque_t *obj, Metadata *self);
FUNCTION(GetDynamicType, Codira, language_getDynamicType, C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(OpaquePtrTy, TypeMetadataPtrTy, Int1Ty),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ReadOnly))

// void *language_dynamicCastClass(void*, void*);
FUNCTION(DynamicCastClass, Codira, language_dynamicCastClass, C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Casting),
         MEMEFFECTS(ReadOnly))

// void *language_dynamicCastClassUnconditional(void*, void*);
FUNCTION(DynamicCastClassUnconditional, Codira, language_dynamicCastClassUnconditional,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy, Int8PtrTy, Int32Ty, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Casting),
         MEMEFFECTS(ReadOnly))

// void *language_dynamicCastObjCClass(void*, void*);
FUNCTION(DynamicCastObjCClass, Codira, language_dynamicCastObjCClass,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::Casting),
         MEMEFFECTS(ReadOnly))

// void *language_dynamicCastObjCClassUnconditional(void*, void*);
FUNCTION(DynamicCastObjCClassUnconditional,
         Codira, language_dynamicCastObjCClassUnconditional, C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy, Int8PtrTy, Int32Ty, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Casting),
         MEMEFFECTS(ReadOnly))

// void *language_dynamicCastUnknownClass(void*, void*);
FUNCTION(DynamicCastUnknownClass, Codira, language_dynamicCastUnknownClass,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::Casting),
         MEMEFFECTS(ReadOnly))

// void *language_dynamicCastUnknownClassUnconditional(void*, void*);
FUNCTION(DynamicCastUnknownClassUnconditional,
         Codira, language_dynamicCastUnknownClassUnconditional,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy, Int8PtrTy, Int32Ty, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Casting),
         MEMEFFECTS(ReadOnly))

// type *language_dynamicCastMetatype(type*, type*);
FUNCTION(DynamicCastMetatype, Codira, language_dynamicCastMetatype,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeMetadataPtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::Casting),
         MEMEFFECTS(ReadOnly))

// type *language_dynamicCastMetatypeUnconditional(type*, type*);
FUNCTION(DynamicCastMetatypeUnconditional,
         Codira, language_dynamicCastMetatypeUnconditional,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeMetadataPtrTy, TypeMetadataPtrTy, Int8PtrTy, Int32Ty, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Casting),
         MEMEFFECTS(ReadOnly))

// objc_class *language_dynamicCastObjCClassMetatype(objc_class*, objc_class*);
FUNCTION(DynamicCastObjCClassMetatype, Codira, language_dynamicCastObjCClassMetatype,
         C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(ObjCClassPtrTy, ObjCClassPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::Casting),
         MEMEFFECTS(ReadOnly))

// objc_class *language_dynamicCastObjCClassMetatypeUnconditional(objc_class*, objc_class*);
FUNCTION(DynamicCastObjCClassMetatypeUnconditional,
         Codira, language_dynamicCastObjCClassMetatypeUnconditional,
         C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(ObjCClassPtrTy, ObjCClassPtrTy, Int8PtrTy, Int32Ty, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Casting),
         MEMEFFECTS(ReadOnly))

// bool language_dynamicCast(opaque*, opaque*, type*, type*, size_t);
FUNCTION(DynamicCast, Codira, language_dynamicCast, C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(OpaquePtrTy, OpaquePtrTy, TypeMetadataPtrTy, TypeMetadataPtrTy,
              SizeTy),
         ATTRS(ZExt, NoUnwind),
         EFFECT(RuntimeEffect::Casting),
         UNKNOWN_MEMEFFECTS)

// type* language_dynamicCastTypeToObjCProtocolUnconditional(type* object,
//                                               size_t numProtocols,
//                                               Protocol * const *protocols);
FUNCTION(DynamicCastTypeToObjCProtocolUnconditional,
         Codira, language_dynamicCastTypeToObjCProtocolUnconditional,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeMetadataPtrTy, SizeTy, Int8PtrPtrTy, Int8PtrTy, Int32Ty, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Casting),
         UNKNOWN_MEMEFFECTS)

// type* language_dynamicCastTypeToObjCProtocolConditional(type* object,
//                                             size_t numProtocols,
//                                             Protocol * const *protocols);
FUNCTION(DynamicCastTypeToObjCProtocolConditional,
         Codira, language_dynamicCastTypeToObjCProtocolConditional,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeMetadataPtrTy, SizeTy, Int8PtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Casting),
         UNKNOWN_MEMEFFECTS)

// id language_dynamicCastObjCProtocolUnconditional(id object,
//                                               size_t numProtocols,
//                                               Protocol * const *protocols);
FUNCTION(DynamicCastObjCProtocolUnconditional,
         Codira, language_dynamicCastObjCProtocolUnconditional, C_CC, AlwaysAvailable,
         RETURNS(ObjCPtrTy),
         ARGS(ObjCPtrTy, SizeTy, Int8PtrPtrTy, Int8PtrTy, Int32Ty, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Casting),
         UNKNOWN_MEMEFFECTS)

// id language_dynamicCastObjCProtocolConditional(id object,
//                                             size_t numProtocols,
//                                             Protocol * const *protocols);
FUNCTION(DynamicCastObjCProtocolConditional,
         Codira, language_dynamicCastObjCProtocolConditional, C_CC, AlwaysAvailable,
         RETURNS(ObjCPtrTy),
         ARGS(ObjCPtrTy, SizeTy, Int8PtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Casting),
         UNKNOWN_MEMEFFECTS)

// id language_dynamicCastMetatypeToObjectUnconditional(type *type);
FUNCTION(DynamicCastMetatypeToObjectUnconditional,
         Codira, language_dynamicCastMetatypeToObjectUnconditional, C_CC, AlwaysAvailable,
         RETURNS(ObjCPtrTy),
         ARGS(TypeMetadataPtrTy, Int8PtrTy, Int32Ty, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Casting),
         MEMEFFECTS(ReadNone))

// id language_dynamicCastMetatypeToObjectConditional(type *type);
FUNCTION(DynamicCastMetatypeToObjectConditional,
         Codira, language_dynamicCastMetatypeToObjectConditional, C_CC, AlwaysAvailable,
         RETURNS(ObjCPtrTy),
         ARGS(TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::Casting),
         MEMEFFECTS(ReadNone))

// witness_table* language_conformsToProtocol(type*, protocol*);
FUNCTION(ConformsToProtocol,
         Codira, language_conformsToProtocol, C_CC, AlwaysAvailable,
         RETURNS(WitnessTablePtrTy),
         ARGS(TypeMetadataPtrTy, ProtocolDescriptorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Casting),
         MEMEFFECTS(ReadNone))

// witness_table* language_conformsToProtocol2(type*, protocol*);
FUNCTION(ConformsToProtocol2,
         Codira, language_conformsToProtocol2, C_CC, SignedConformsToProtocolAvailability,
         RETURNS(WitnessTablePtrTy),
         ARGS(TypeMetadataPtrTy, ProtocolDescriptorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Casting),
         MEMEFFECTS(ReadNone))

// bool language_isClassType(type*);
FUNCTION(IsClassType,
         Codira, language_isClassType, C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(TypeMetadataPtrTy),
         ATTRS(ZExt, NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::Casting),
         MEMEFFECTS(ReadNone))

// bool language_isOptionalType(type*);
FUNCTION(IsOptionalType,
         Codira, language_isOptionalType, C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(TypeMetadataPtrTy),
         ATTRS(ZExt, NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::Casting),
         MEMEFFECTS(ReadNone))

// void language_once(language_once_t *predicate,
//                 void (*function_code)(RefCounted*),
//                 void *context);
FUNCTION(Once, Codira, language_once, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OnceTy->getPointerTo(), Int8PtrTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Locking),
         UNKNOWN_MEMEFFECTS)

// void language_registerProtocols(const ProtocolRecord *begin,
//                              const ProtocolRecord *end)
FUNCTION(RegisterProtocols,
         Codira, language_registerProtocols, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ProtocolRecordPtrTy, ProtocolRecordPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Locking),
         UNKNOWN_MEMEFFECTS)

// void language_registerProtocolConformances(const ProtocolConformanceRecord *begin,
//                                         const ProtocolConformanceRecord *end)
FUNCTION(RegisterProtocolConformances,
         Codira, language_registerProtocolConformances, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RelativeAddressPtrTy, RelativeAddressPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Locking),
         UNKNOWN_MEMEFFECTS)
FUNCTION(RegisterTypeMetadataRecords,
         Codira, language_registerTypeMetadataRecords, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataRecordPtrTy, TypeMetadataRecordPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Locking),
         UNKNOWN_MEMEFFECTS)

// void language_beginAccess(void *pointer, ValueBuffer *scratch, size_t flags);
FUNCTION(BeginAccess, Codira, language_beginAccess, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, getFixedBufferTy()->getPointerTo(), SizeTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::ExclusivityChecking),
         UNKNOWN_MEMEFFECTS)

// void language_endAccess(ValueBuffer *scratch);
FUNCTION(EndAccess, Codira, language_endAccess, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(getFixedBufferTy()->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::ExclusivityChecking),
         UNKNOWN_MEMEFFECTS)

FUNCTION(GetOrigOfReplaceable, Codira, language_getOrigOfReplaceable, C_CC,
         DynamicReplacementAvailability,
         RETURNS(FunctionPtrTy),
         ARGS(FunctionPtrTy->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

FUNCTION(GetReplacement, Codira, language_getFunctionReplacement, C_CC,
         DynamicReplacementAvailability,
         RETURNS(FunctionPtrTy),
         ARGS(FunctionPtrTy->getPointerTo(), FunctionPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

FUNCTION(InstantiateObjCClass, Codira, language_instantiateObjCClass,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCAllocWithZone, objc2, objc_allocWithZone,
         C_CC, AlwaysAvailable,
         RETURNS(ObjCPtrTy), ARGS(ObjCClassPtrTy), ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Allocating),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCMsgSend, objc2, objc_msgSend,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy), NO_ARGS, NO_ATTRS, EFFECT(RuntimeEffect::ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCMsgSendStret, objc2, objc_msgSend_stret,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy), NO_ARGS, NO_ATTRS, EFFECT(RuntimeEffect::ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCMsgSendSuper, objc2, objc_msgSendSuper,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy), NO_ARGS, NO_ATTRS, EFFECT(RuntimeEffect::ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCMsgSendSuperStret, objc2, objc_msgSendSuper_stret,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy), NO_ARGS, NO_ATTRS, EFFECT(RuntimeEffect::ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCMsgSendSuper2, objc2, objc_msgSendSuper2,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy), NO_ARGS, NO_ATTRS, EFFECT(RuntimeEffect::ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCMsgSendSuperStret2, objc2, objc_msgSendSuper2_stret,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy), NO_ARGS, NO_ATTRS, EFFECT(RuntimeEffect::ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCSelRegisterName, objc2, sel_registerName,
         C_CC, AlwaysAvailable,
         RETURNS(ObjCSELTy), ARGS(Int8PtrTy), ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::ObjectiveC),
         MEMEFFECTS(ReadNone))
FUNCTION(ClassReplaceMethod, objc2, class_replaceMethod,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(ObjCClassPtrTy, Int8PtrTy, Int8PtrTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ClassAddProtocol, objc2, class_addProtocol,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ObjCClassPtrTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCGetClass, objc2, objc_getClass, C_CC,  AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCGetRequiredClass, objc2, objc_getRequiredClass, C_CC,  AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCGetMetaClass, objc2, objc_getMetaClass, C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCClassGetName, objc2, class_getName, C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(ObjCClassPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::ObjectiveC),
         UNKNOWN_MEMEFFECTS)

FUNCTION(GetObjCProtocol, objc2, objc_getProtocol, C_CC, AlwaysAvailable,
         RETURNS(ProtocolDescriptorPtrTy),
         ARGS(Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(AllocateObjCProtocol, objc2, objc_allocateProtocol, C_CC, AlwaysAvailable,
         RETURNS(ProtocolDescriptorPtrTy),
         ARGS(Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::ObjectiveC, RuntimeEffect::Allocating),
         UNKNOWN_MEMEFFECTS)
FUNCTION(RegisterObjCProtocol, objc2, objc_registerProtocol, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ProtocolDescriptorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ProtocolAddMethodDescription, objc2, protocol_addMethodDescription,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ProtocolDescriptorPtrTy, Int8PtrTy, Int8PtrTy,
              ObjCBoolTy, ObjCBoolTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ProtocolAddProtocol, objc2, protocol_addProtocol,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ProtocolDescriptorPtrTy, ProtocolDescriptorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::ObjectiveC),
         UNKNOWN_MEMEFFECTS)

FUNCTION(ObjCOptSelf, objc2, objc_opt_self,
         C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(ObjCClassPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::ObjectiveC),
         UNKNOWN_MEMEFFECTS)

FUNCTION(Malloc, c, malloc, C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(SizeTy),
         NO_ATTRS,
         EFFECT(RuntimeEffect::Allocating),
         UNKNOWN_MEMEFFECTS)
FUNCTION(Free, c, free, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy),
         NO_ATTRS,
         EFFECT(RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)
FUNCTION(CoroFrameAlloc, Codira, language_coroFrameAlloc, C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(SizeTy, Int64Ty),
         NO_ATTRS,
         EFFECT(RuntimeEffect::Allocating),
         UNKNOWN_MEMEFFECTS)
FUNCTION(coroFrameAllocStub, Codira, language_coroFrameAllocStub, C_CC,
         AlwaysAvailable, RETURNS(Int8PtrTy),
         ARGS(SizeTy, Int64Ty),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Allocating),
         UNKNOWN_MEMEFFECTS)

// void *_Block_copy(void *block);
FUNCTION(BlockCopy, BlocksRuntime, _Block_copy, C_CC, AlwaysAvailable,
         RETURNS(ObjCBlockPtrTy),
         ARGS(ObjCBlockPtrTy),
         NO_ATTRS,
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)
// void _Block_release(void *block);
FUNCTION(BlockRelease, BlocksRuntime, _Block_release, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ObjCBlockPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Deallocating, RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void language_deletedMethodError();
FUNCTION(DeletedMethodError, Codira, language_deletedMethodError, C_CC, AlwaysAvailable,
        RETURNS(VoidTy),
        ARGS(),
        ATTRS(NoUnwind),
        EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// void language_deletedAsyncMethodError();
FUNCTION(DeletedAsyncMethodError, _Concurrency, language_deletedAsyncMethodError, CodiraAsyncCC,
        ConcurrencyAvailability,
        RETURNS(VoidTy),
        ARGS(),
        ATTRS(NoUnwind),
        EFFECT(RuntimeEffect::Concurrency),
        UNKNOWN_MEMEFFECTS)

FUNCTION(AllocError, Codira, language_allocError, CodiraCC, AlwaysAvailable,
         RETURNS(ErrorPtrTy, OpaquePtrTy),
         ARGS(TypeMetadataPtrTy, WitnessTablePtrTy, OpaquePtrTy, Int1Ty),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Allocating),
         UNKNOWN_MEMEFFECTS)
FUNCTION(DeallocError, Codira, language_deallocError, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ErrorPtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)
FUNCTION(GetErrorValue, Codira, language_getErrorValue, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ErrorPtrTy, Int8PtrPtrTy, OpenedErrorTriplePtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// void __tsan_external_write(void *addr, void *caller_pc, void *tag);
// This is a Thread Sanitizer instrumentation entry point in compiler-rt.
FUNCTION(TSanInoutAccess, tsan, __tsan_external_write, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, Int8PtrTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// int32 __isPlatformVersionAtLeast(uint32_t platform, uint32_t major,
//                                  uint32_t minor, uint32_t patch);
// This a C builtin provided by compiler-rt.
FUNCTION(PlatformVersionAtLeast, libgcc, __isPlatformVersionAtLeast,
         C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(Int32Ty, Int32Ty, Int32Ty, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// int32 __isPlatformOrVariantPlatformVersionAtLeast(uint32_t platform1,
//            uint32_t major1, uint32_t minor1, uint32_t patch1,
//            uint32_t platform2, uint32_t major2, uint32_t minor2,
//            uint32_t patch2);
// This is a C builtin provided by compiler-rt.
FUNCTION(TargetOSVersionOrVariantOSVersionAtLeast,
         libgcc, __isPlatformOrVariantPlatformVersionAtLeast,
         C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(Int32Ty, Int32Ty, Int32Ty, Int32Ty, Int32Ty, Int32Ty, Int32Ty,
              Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

FUNCTION(GetKeyPath, Codira, language_getKeyPath, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(Int8PtrTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Allocating),
         UNKNOWN_MEMEFFECTS)
FUNCTION(CopyKeyPathTrivialIndices, Codira, language_copyKeyPathTrivialIndices,
         C_CC,  AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, Int8PtrTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

FUNCTION(GetInitializedObjCClass, Codira, language_getInitializedObjCClass,
         C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(ObjCClassPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// void language_objc_language3ImplicitObjCEntrypoint(id self, SEL selector)
FUNCTION(Codira3ImplicitObjCEntrypoint, Codira, language_objc_language3ImplicitObjCEntrypoint,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ObjCPtrTy, ObjCSELTy, Int8PtrTy, SizeTy, SizeTy, SizeTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::ObjectiveC, RuntimeEffect::Allocating),
         UNKNOWN_MEMEFFECTS)

FUNCTION(VerifyTypeLayoutAttribute, Codira, _language_debug_verifyTypeLayoutAttribute,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, Int8PtrTy, Int8PtrTy, SizeTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// float language_intToFloat32(const size_t *data, IntegerLiteralFlags flags);
FUNCTION(IntToFloat32, Codira, language_intToFloat32, CodiraCC, AlwaysAvailable,
         RETURNS(FloatTy),
         ARGS(SizeTy->getPointerTo(), SizeTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         MEMEFFECTS(ReadOnly))

FUNCTION(IntToFloat64, Codira, language_intToFloat64, CodiraCC, AlwaysAvailable,
         RETURNS(DoubleTy),
         ARGS(SizeTy->getPointerTo(), SizeTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         MEMEFFECTS(ReadOnly))

// const Metadata *language_getTypeByMangledNameInContext(
//                        const char *typeNameStart,
//                        size_t typeNameLength,
//                        const void *context,
//                        const void * const *genericArgs)
FUNCTION(GetTypeByMangledNameInContext, Codira, language_getTypeByMangledNameInContext,
         CodiraCC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(Int8PtrTy, SizeTy, TypeContextDescriptorPtrTy, Int8PtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ArgMemOnly))

// const Metadata *language_getTypeByMangledNameInContext2(
//                        const char *typeNameStart,
//                        size_t typeNameLength,
//                        const TargetContextDescriptor<InProcess> *context,
//                        const void * const *genericArgs)
FUNCTION(GetTypeByMangledNameInContext2, Codira, language_getTypeByMangledNameInContext2,
         CodiraCC, SignedDescriptorAvailability,
         RETURNS(TypeMetadataPtrTy),
         ARGS(Int8PtrTy, SizeTy, TypeContextDescriptorPtrTy, Int8PtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ArgMemOnly))

// const Metadata *language_getTypeByMangledNameInContextInMetadataState(
//                        size_t metadataState,
//                        const char *typeNameStart,
//                        size_t typeNameLength,
//                        const void *context,
//                        const void * const *genericArgs)
FUNCTION(GetTypeByMangledNameInContextInMetadataState,
         Codira, language_getTypeByMangledNameInContextInMetadataState, CodiraCC,
         GetTypesInAbstractMetadataStateAvailability,
         RETURNS(TypeMetadataPtrTy),
         ARGS(SizeTy, Int8PtrTy, SizeTy, TypeContextDescriptorPtrTy,
              Int8PtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ArgMemOnly))

// const Metadata *language_getTypeByMangledNameInContextInMetadataState2(
//                        size_t metadataState,
//                        const char *typeNameStart,
//                        size_t typeNameLength,
//                        const TargetContextDescriptor<InProcess> *context,
//                        const void * const *genericArgs)
FUNCTION(GetTypeByMangledNameInContextInMetadataState2,
         Codira, language_getTypeByMangledNameInContextInMetadataState2, CodiraCC,
         SignedDescriptorAvailability,
         RETURNS(TypeMetadataPtrTy),
         ARGS(SizeTy, Int8PtrTy, SizeTy, TypeContextDescriptorPtrTy,
              Int8PtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         MEMEFFECTS(ArgMemOnly))

// AsyncTask *language_task_getCurrent();
FUNCTION(GetCurrentTask,
         _Concurrency, language_task_getCurrent, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(CodiraTaskPtrTy),
         ARGS(),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::Concurrency),
         MEMEFFECTS(ReadNone))

// void *language_task_alloc(size_t size);
FUNCTION(TaskAlloc,
         _Concurrency, language_task_alloc, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(Int8PtrTy),
         ARGS(SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         MEMEFFECTS(ArgMemOnly))

// void language_task_dealloc(void *ptr);
FUNCTION(TaskDealloc,
         _Concurrency, language_task_dealloc, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         MEMEFFECTS(ArgMemOnly))

// void language_task_dealloc_through(void *ptr);
FUNCTION(TaskDeallocThrough,
         _Concurrency, language_task_dealloc_through, CodiraCC,
         CoroutineAccessorsAvailability,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         MEMEFFECTS(ArgMemOnly))

// void language_task_cancel(AsyncTask *task);
FUNCTION(TaskCancel,
         _Concurrency, language_task_cancel, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(CodiraTaskPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         MEMEFFECTS(ArgMemOnly))

// AsyncTaskAndContext language_task_create(
//     size_t taskCreateFlags,
//     TaskOptionRecord *options,
//     const Metadata *futureResultType,
//     void *closureEntry, HeapObject *closureContext);
FUNCTION(TaskCreate,
         _Concurrency, language_task_create, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(AsyncTaskAndContextTy),
         ARGS(SizeTy,
              CodiraTaskOptionRecordPtrTy,
              TypeMetadataPtrTy,
              Int8PtrTy,
              RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         MEMEFFECTS(ReadOnly))

// void language_task_switch(AsyncContext *resumeContext,
//                        TaskContinuationFunction *resumeFunction,
//                        SerialExecutorRef newExecutor);
FUNCTION(TaskSwitchFunc,
         _Concurrency, language_task_switch, CodiraAsyncCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(CodiraContextPtrTy, Int8PtrTy, ExecutorFirstTy, ExecutorSecondTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)
         
// void language_task_deinitOnExecutor(void *object,
//                                  DeinitWorkFunction *work,
//                                  SerialExecutorRef newExecutor,
//                                  size_t flags);
FUNCTION(DeinitOnExecutorFunc,
         _Concurrency, language_task_deinitOnExecutor, CodiraCC,
         IsolatedDeinitAvailability,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, Int8PtrTy, ExecutorFirstTy, ExecutorSecondTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)

// void language_task_deinitOnExecutorMainActorBackDeploy(void *object,
//                                  DeinitWorkFunction *work,
//                                  SerialExecutorRef newExecutor,
//                                  size_t flags);
FUNCTION(DeinitOnExecutorMainActorBackDeployFunc,
         _Concurrency, deinitOnExecutorMainActorBackDeploy, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, Int8PtrTy, ExecutorFirstTy, ExecutorSecondTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)

// AsyncTask *language_continuation_init(AsyncContext *continuationContext,
//                                    AsyncContinuationFlags);
FUNCTION(ContinuationInit,
         _Concurrency, language_continuation_init, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(CodiraTaskPtrTy),
         ARGS(ContinuationAsyncContextPtrTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)

// void language_continuation_await(AsyncContext *continuationContext);
FUNCTION(ContinuationAwait,
         _Concurrency, language_continuation_await, CodiraAsyncCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(ContinuationAsyncContextPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)

// void language_continuation_resume(AsyncTask *continuation);
FUNCTION(ContinuationResume,
         _Concurrency, language_continuation_resume, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(CodiraTaskPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)

// void language_continuation_throwingResume(AsyncTask *continuation);
FUNCTION(ContinuationThrowingResume,
         _Concurrency, language_continuation_throwingResume, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(CodiraTaskPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)

// void language_continuation_throwingResumeWithError(AsyncTask *continuation,
//                                                 CodiraError *error);
FUNCTION(ContinuationThrowingResumeWithError,
         _Concurrency, language_continuation_throwingResumeWithError, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(CodiraTaskPtrTy, ErrorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)

// SerialExecutorRef language_task_getCurrentExecutor();
FUNCTION(TaskGetCurrentExecutor,
         _Concurrency, language_task_getCurrentExecutor, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(CodiraExecutorTy),
         ARGS(),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::Concurrency),
         MEMEFFECTS(ArgMemOnly))

// SerialExecutorRef language_task_getMainExecutor();
FUNCTION(TaskGetMainExecutor,
         _Concurrency, language_task_getMainExecutor, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(CodiraExecutorTy),
         ARGS(),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::Concurrency),
         MEMEFFECTS(ArgMemOnly))

// void language_defaultActor_initialize(DefaultActor *actor);
FUNCTION(DefaultActorInitialize,
         _Concurrency, language_defaultActor_initialize, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)

// void language_defaultActor_destroy(DefaultActor *actor);
FUNCTION(DefaultActorDestroy,
         _Concurrency, language_defaultActor_destroy, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)

// void language_defaultActor_deallocate(DefaultActor *actor);
FUNCTION(DefaultActorDeallocate,
         _Concurrency, language_defaultActor_deallocate, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)

// void language_defaultActor_deallocateResilient(HeapObject *actor);
FUNCTION(DefaultActorDeallocateResilient,
         _Concurrency, language_defaultActor_deallocateResilient, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)

// void language_nonDefaultDistributedActor_initialize(NonDefaultDistributedActor *actor);
FUNCTION(NonDefaultDistributedActorInitialize,
         _Concurrency, language_nonDefaultDistributedActor_initialize, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)

// OpaqueValue* language_distributedActor_remote_initialize(
//    const Metadata *actorType
// );
FUNCTION(DistributedActorInitializeRemote,
         _Concurrency, language_distributedActor_remote_initialize, CodiraCC,
         ConcurrencyAvailability, // TODO(distributed): Introduce DistributedAvailability once shipping somewhere
         RETURNS(OpaquePtrTy),
         ARGS(TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)

/// void language_asyncLet_start(
///     AsyncLet *alet,
///     TaskOptionRecord *options,
///     const Metadata *futureResultType,
///     void *closureEntryPoint,
///     HeapObject *closureContext
/// );
FUNCTION(AsyncLetStart,
         _Concurrency, language_asyncLet_start, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(CodiraAsyncLetPtrTy,         // AsyncLet*
              CodiraTaskOptionRecordPtrTy, // options
              TypeMetadataPtrTy,          // futureResultType
              Int8PtrTy,                  // closureEntry
              OpaquePtrTy                 // closureContext
         ),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         MEMEFFECTS(ArgMemOnly))

/// void language_asyncLet_begin(
///     AsyncLet *alet,
///     TaskOptionRecord *options,
///     const Metadata *futureResultType,
///     void *closureEntryPoint,
///     HeapObject *closureContext,
///     void *resultBuffer
/// );
FUNCTION(AsyncLetBegin,
         _Concurrency, language_asyncLet_begin, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(CodiraAsyncLetPtrTy,         // AsyncLet*
              CodiraTaskOptionRecordPtrTy, // options
              TypeMetadataPtrTy,          // futureResultType
              Int8PtrTy,                  // closureEntry
              OpaquePtrTy,                // closureContext
              Int8PtrTy
         ),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         MEMEFFECTS(ArgMemOnly))

// void language_asyncLet_end(AsyncLet *alet);
FUNCTION(EndAsyncLet,
         _Concurrency, language_asyncLet_end, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(CodiraAsyncLetPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)

/// void language_task_run_inline(
///     OpaqueValue *result,
///     void *closureAFP,
///     OpaqueValue *closureContext,
///     const Metadata *futureResultType
/// )
FUNCTION(TaskRunInline,
         _Concurrency, language_task_run_inline, CodiraCC,
         TaskRunInlineAvailability,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy,       // OpaqueValue *result
              Int8PtrTy,         // void *closure
              OpaquePtrTy,       // OpaqueValue *closureContext
              TypeMetadataPtrTy, // const Metadata *futureResultType
         ),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// void language_taskGroup_initialize(TaskGroup *group, const Metadata *T);
FUNCTION(TaskGroupInitialize,
         _Concurrency, language_taskGroup_initialize, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)

// void language_taskGroup_initializeWithFlags(size_t flags, TaskGroup *group, const Metadata *T);
FUNCTION(TaskGroupInitializeWithFlags,
         _Concurrency, language_taskGroup_initializeWithFlags, CodiraCC,
         ConcurrencyDiscardingTaskGroupAvailability,
         RETURNS(VoidTy),
         ARGS(SizeTy,           // flags
              Int8PtrTy,        // group
              TypeMetadataPtrTy // T.Type
         ),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)

// void language_taskGroup_initializeWithTaskOptions(size_t flags, TaskGroup *group, const Metadata *T, TaskOptionRecord *options);
FUNCTION(TaskGroupInitializeWithOptions,
         _Concurrency, language_taskGroup_initializeWithOptions, CodiraCC,
         ConcurrencyDiscardingTaskGroupAvailability,
         RETURNS(VoidTy),
         ARGS(SizeTy,                     // flags
              Int8PtrTy,                  // group
              TypeMetadataPtrTy,          // T.Type
              CodiraTaskOptionRecordPtrTy  // options
         ),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)

// void language_taskGroup_destroy(TaskGroup *group);
FUNCTION(TaskGroupDestroy,
         _Concurrency, language_taskGroup_destroy, CodiraCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Concurrency),
         UNKNOWN_MEMEFFECTS)

// AutoDiffLinearMapContext *language_autoDiffCreateLinearMapContextWithType(const Metadata *);
FUNCTION(AutoDiffCreateLinearMapContextWithType,
         Codira, language_autoDiffCreateLinearMapContextWithType, CodiraCC,
         DifferentiationAvailability,
         RETURNS(RefCountedPtrTy),
         ARGS(TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::AutoDiff),
         MEMEFFECTS(ArgMemOnly))

// void *language_autoDiffProjectTopLevelSubcontext(AutoDiffLinearMapContext *);
FUNCTION(AutoDiffProjectTopLevelSubcontext,
         Codira, language_autoDiffProjectTopLevelSubcontext, CodiraCC,
         DifferentiationAvailability,
         RETURNS(Int8PtrTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::AutoDiff),
         MEMEFFECTS(ArgMemOnly))

// void *language_autoDiffAllocateSubcontextWithType(AutoDiffLinearMapContext *, const Metadata *);
FUNCTION(AutoDiffAllocateSubcontextWithType,
         Codira, language_autoDiffAllocateSubcontextWithType, CodiraCC,
         DifferentiationAvailability,
         RETURNS(Int8PtrTy),
         ARGS(RefCountedPtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::AutoDiff),
         MEMEFFECTS(ArgMemOnly))

// LANGUAGE_RUNTIME_EXPORT
// unsigned language_getMultiPayloadEnumTagSinglePayload(const OpaqueValue *value,
//                                                    uint32_t numExtraCases,
//                                                    const Metadata *enumType)
FUNCTION(GetMultiPayloadEnumTagSinglePayload,
         Codira, language_getMultiPayloadEnumTagSinglePayload, C_CC,
         MultiPayloadEnumTagSinglePayloadAvailability,
         RETURNS(Int32Ty),
         ARGS(OpaquePtrTy, Int32Ty, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// LANGUAGE_RUNTIME_EXPORT 
// void language_storeMultiPayloadEnumTagSinglePayload(OpaqueValue *value,
//                                                   uint32_t index,
//                                                   uint32_t numExtraCases,
//                                                   const Metadata *enumType);
FUNCTION(StoreMultiPayloadEnumTagSinglePayload,
         Codira, language_storeMultiPayloadEnumTagSinglePayload, C_CC,
         MultiPayloadEnumTagSinglePayloadAvailability,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, Int32Ty, Int32Ty, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// void language_cvw_destroy(opaque*, const Metadata* type);
FUNCTION(GenericDestroy,
         Codira, language_cvw_destroy,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)


// void *language_cvw_assignWithCopy(opaque* dest, opaque* src, const Metadata* type);
FUNCTION(GenericAssignWithCopy,
         Codira, language_cvw_assignWithCopy,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *language_cvw_assignWithTake(opaque* dest, opaque* src, const Metadata* type);
FUNCTION(GenericAssignWithTake,
         Codira, language_cvw_assignWithTake,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *language_cvw_initWithCopy(opaque* dest, opaque* src, const Metadata* type);
FUNCTION(GenericInitWithCopy,
         Codira, language_cvw_initWithCopy,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void *language_cvw_initWithTake(opaque* dest, opaque* src, const Metadata* type);
FUNCTION(GenericInitWithTake,
         Codira, language_cvw_initWithTake,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void *language_cvw_initializeBufferWithCopyOfBuffer(ValueBuffer* dest, ValueBuffer* src, const Metadata* type);
FUNCTION(GenericInitializeBufferWithCopyOfBuffer,
         Codira, language_cvw_initializeBufferWithCopyOfBuffer,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(getFixedBufferTy()->getPointerTo(),
              getFixedBufferTy()->getPointerTo(),
              TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void language_cvw_destroyMultiPayloadEnumFN(opaque*, const Metadata* type);
FUNCTION(GenericDestroyMultiPayloadEnumFN,
         Codira, language_cvw_destroyMultiPayloadEnumFN,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *language_cvw_assignWithCopyMultiPayloadEnumFN(opaque* dest, opaque* src, const Metadata* type);
FUNCTION(GenericAssignWithCopyMultiPayloadEnumFN,
         Codira, language_cvw_assignWithCopyMultiPayloadEnumFN,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *language_cvw_assignWithTakeMultiPayloadEnumFN(opaque* dest, opaque* src, const Metadata* type);
FUNCTION(GenericAssignWithTakeMultiPayloadEnumFN,
         Codira, language_cvw_assignWithTakeMultiPayloadEnumFN,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting, RuntimeEffect::Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *language_cvw_initWithCopyMultiPayloadEnumFN(opaque* dest, opaque* src, const Metadata* type);
FUNCTION(GenericInitWithCopyMultiPayloadEnumFN,
         Codira, language_cvw_initWithCopyMultiPayloadEnumFN,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void *language_cvw_initWithTakeMultiPayloadEnumFN(opaque* dest, opaque* src, const Metadata* type);
FUNCTION(GenericInitWithTakeMultiPayloadEnumFN,
         Codira, language_cvw_initWithTakeMultiPayloadEnumFN,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// void *language_cvw_initializeBufferWithCopyOfBufferMultiPayloadEnumFN(ValueBuffer* dest, ValueBuffer* src, const Metadata* type);
FUNCTION(GenericInitializeBufferWithCopyOfBufferMultiPayloadEnumFN,
         Codira, language_cvw_initializeBufferWithCopyOfBufferMultiPayloadEnumFN,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(getFixedBufferTy()->getPointerTo(),
              getFixedBufferTy()->getPointerTo(),
              TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::RefCounting),
         UNKNOWN_MEMEFFECTS)

// unsigned language_cvw_singletonEnum_getEnumTag(language::OpaqueValue *address,
//                                         const Metadata *metadata);
FUNCTION(SingletonEnumGetEnumTag,
         Codira, language_cvw_singletonEnum_getEnumTag,
         C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// void language_cvw_singletonEnum_destructiveInjectEnumTag(language::OpaqueValue *address,
//                                                   unsigned tag,
//                                                   const Metadata *metadata)
FUNCTION(SingletonEnumDestructiveInjectEnumTag,
         Codira, language_cvw_singletonEnum_destructiveInjectEnumTag,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, Int32Ty, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// unsigned language_cvw_enumSimple_getEnumTag(language::OpaqueValue *address,
//                                      const Metadata *metadata);
FUNCTION(EnumSimpleGetEnumTag,
         Codira, language_cvw_enumSimple_getEnumTag,
         C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// unsigned language_cvw_enumSimple_destructiveInjectEnumTag(language::OpaqueValue *address,
//                                                    unsigned tag,
//                                                    const Metadata *metadata)
FUNCTION(EnumSimpleDestructiveInjectEnumTag,
         Codira, language_cvw_enumSimple_destructiveInjectEnumTag,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, Int32Ty, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// unsigned language_cvw_enumFn_getEnumTag(language::OpaqueValue *address,
//                                  const Metadata *metadata);
FUNCTION(EnumFnGetEnumTag,
         Codira, language_cvw_enumFn_getEnumTag,
         C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// unsigned language_cvw_multiPayloadEnumGeneric_getEnumTag(opaque* address,
//                                                   const Metadata *type);
FUNCTION(MultiPayloadEnumGenericGetEnumTag,
         Codira, language_cvw_multiPayloadEnumGeneric_getEnumTag,
         C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// void language_cvw_multiPayloadEnumGeneric_destructiveInjectEnumTag(language::OpaqueValue *address,
//                                                             unsigned tag,
//                                                             const Metadata *metadata)
FUNCTION(MultiPayloadEnumGenericDestructiveInjectEnumTag,
         Codira, language_cvw_multiPayloadEnumGeneric_destructiveInjectEnumTag,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, Int32Ty, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// unsigned language_cvw_singlePayloadEnumGeneric_getEnumTag(language::OpaqueValue *address,
//                                                    const Metadata *metadata);
FUNCTION(SinglePayloadEnumGenericGetEnumTag,
         Codira, language_cvw_singlePayloadEnumGeneric_getEnumTag,
         C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// void language_cvw_singlePayloadEnumGeneric_destructiveInjectEnumTag(language::OpaqueValue *address,
//                                                              unsigned tag,
//                                                              const Metadata *metadata)
FUNCTION(SinglePayloadEnumGenericDestructiveInjectEnumTag,
         Codira, language_cvw_singlePayloadEnumGeneric_destructiveInjectEnumTag,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, Int32Ty, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

// void language_cvw_instantiateLayoutString(const uint8_t* layoutStr,
//                                            Metadata* type);
FUNCTION(GenericInstantiateLayoutString,
         Codira, language_cvw_instantiateLayoutString,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// void language_initRawStructMetadata(Metadata *structType,
//                                  StructLayoutFlags flags,
//                                  const TypeLayout *likeType,
//                                  int32_t count);
FUNCTION(InitRawStructMetadata,
         Codira, language_initRawStructMetadata,
         C_CC, InitRawStructMetadataAvailability,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, Int8PtrPtrTy->getPointerTo(0), Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// void language_initRawStructMetadata2(Metadata *structType,
//                                   StructLayoutFlags structLayoutFlags,
//                                   const TypeLayout *likeType,
//                                   intptr_t count,
//                                   RawLayoutFlags rawLayoutFlags);
FUNCTION(InitRawStructMetadata2,
         Codira, language_initRawStructMetadata2,
         C_CC, InitRawStructMetadata2Availability,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, Int8PtrPtrTy->getPointerTo(0), SizeTy,
              SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::MetaData),
         UNKNOWN_MEMEFFECTS)

// _Unwind_Reason_Code _language_exceptionPersonality(int version,
//                                                 _Unwind_Action actions,
//                                                 uint64 exceptionClass,
//                                                 struct _Unwind_Exception *exceptionObject,
//                                                 struct _Unwind_Context *context);
FUNCTION(ExceptionPersonality,
         Codira, _language_exceptionPersonality,
         C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(Int32Ty,
              Int32Ty,
              Int64Ty,
              Int8PtrTy,
              Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

FUNCTION(ClearSensitive, Codira, language_clearSensitive, C_CC, ClearSensitiveAvailability,
         RETURNS(VoidTy),
         ARGS(PtrTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

FUNCTION(MemsetS, c, memset_s, C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(PtrTy, SizeTy, Int32Ty, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(RuntimeEffect::NoEffect),
         UNKNOWN_MEMEFFECTS)

#undef RETURNS
#undef ARGS
#undef ATTRS
#undef NO_ARGS
#undef NO_ATTRS
#undef FUNCTION
#undef FUNCTION_NAME
