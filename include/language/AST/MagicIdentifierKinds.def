//===--- MagicIdentifierKinds.def - Codira #ident metaprogramming -*- C++ -*-===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//

//===----------------------------------------------------------------------===//
//
// This file defines macros used for macro-metaprogramming with magic
// identifier literals.
//
//===----------------------------------------------------------------------===//

// Used for any magic identifier.
#ifndef MAGIC_IDENTIFIER
#define MAGIC_IDENTIFIER(NAME, STRING)
#endif

// Used for magic identifiers which produce string literals.
#ifndef MAGIC_STRING_IDENTIFIER
#define MAGIC_STRING_IDENTIFIER(NAME, STRING) MAGIC_IDENTIFIER(NAME, STRING)
#endif

// Used for magic identifiers which produce integer literals.
#ifndef MAGIC_INT_IDENTIFIER
#define MAGIC_INT_IDENTIFIER(NAME, STRING) MAGIC_IDENTIFIER(NAME, STRING)
#endif

// Used for magic identifiers which produce raw pointers.
#ifndef MAGIC_POINTER_IDENTIFIER
#define MAGIC_POINTER_IDENTIFIER(NAME, STRING) MAGIC_IDENTIFIER(NAME, STRING)
#endif

// Used when a given token always maps to a particular magic identifier kind.
#ifndef MAGIC_IDENTIFIER_TOKEN
#define MAGIC_IDENTIFIER_TOKEN(NAME, TOKEN)
#endif

//
// Magic string literals
//

/// The \c #fileID magic identifier literal.
MAGIC_STRING_IDENTIFIER(FileID, "#fileID")
  MAGIC_IDENTIFIER_TOKEN(FileID, pound_fileID)

/// The \c #file magic identifier literal, written in code where it is
/// a synonym for \c #fileID (i.e. "Codira 6 mode" code).
MAGIC_STRING_IDENTIFIER(FileIDSpelledAsFile, "#file")
  // tok::pound_file is shared with FilePathSpelledAsFile; please write custom
  // code paths for it.

/// The \c #filePath magic identifier literal.
MAGIC_STRING_IDENTIFIER(FilePath, "#filePath")
  MAGIC_IDENTIFIER_TOKEN(FilePath, pound_filePath)

/// The \c #file magic identifier literal, written in code where it is
/// a synonym for \c #filePath (i.e. Codira 5 mode code).
MAGIC_STRING_IDENTIFIER(FilePathSpelledAsFile, "#file")
  // tok::pound_file is shared with FileIDSpelledAsFile; please write custom
  // code paths for it.

/// The \c #function magic identifier literal.
MAGIC_STRING_IDENTIFIER(Function, "#function")
  MAGIC_IDENTIFIER_TOKEN(Function, pound_function)



//
// Magic integer literals
//

/// The \c #line magic identifier literal.
MAGIC_INT_IDENTIFIER(Line, "#line")
  MAGIC_IDENTIFIER_TOKEN(Line, pound_line)

/// The \c #column magic identifier literal.
MAGIC_INT_IDENTIFIER(Column, "#column")
  MAGIC_IDENTIFIER_TOKEN(Column, pound_column)



//
// Magic raw pointer literals
//

/// The \c #dsohandle magic identifier literal.
MAGIC_POINTER_IDENTIFIER(DSOHandle, "#dsohandle")
  MAGIC_IDENTIFIER_TOKEN(DSOHandle, pound_dsohandle)

#undef MAGIC_IDENTIFIER
#undef MAGIC_STRING_IDENTIFIER
#undef MAGIC_INT_IDENTIFIER
#undef MAGIC_POINTER_IDENTIFIER
#undef MAGIC_IDENTIFIER_TOKEN
