//===--- StmtNodes.def - Codira Statement AST Metaprogramming ----*- C++ -*-===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//

//===----------------------------------------------------------------------===//
//
// This file defines macros used for macro-metaprogramming with statements.
//
//===----------------------------------------------------------------------===//

/// STMT(Id, Parent)
///   If the statement node is not abstract, its enumerator value is
///   StmtKind::Id.  The node's class name is Id##Stmt, and the name of
///   its base class (in the Stmt hierarchy) is Parent.

/// An abstract statement node is an abstract base class in the hierarchy;
/// it is never a most-derived type, and it does not have an enumerator in
/// StmtKind.
///
/// Most metaprograms do not care about abstract statements, so the default
/// is to ignore them.
#ifndef ABSTRACT_STMT
#define ABSTRACT_STMT(Id, Parent)
#endif

/// A subclass of LabeledStmt.  Forwards to STMT by default.
#ifndef LABELED_STMT
#define LABELED_STMT(Id, Parent) STMT(Id, Parent)
#endif

/// A convenience for determining the range of statements.  These will always
/// appear immediately after the last member.
#ifndef STMT_RANGE
#define STMT_RANGE(Id, First, Last)
#endif

#ifndef LAST_STMT
#define LAST_STMT(Id)
#endif

STMT(Brace, Stmt)
STMT(Return, Stmt)
STMT(Then, Stmt)
STMT(Yield, Stmt)
STMT(Defer, Stmt)
ABSTRACT_STMT(Labeled, Stmt)
  ABSTRACT_STMT(LabeledConditional, LabeledStmt)
    LABELED_STMT(If, LabeledConditionalStmt)
    LABELED_STMT(Guard, LabeledConditionalStmt)
    LABELED_STMT(While, LabeledConditionalStmt)
    STMT_RANGE(LabeledConditional, If, While)
  LABELED_STMT(Do, LabeledStmt)
  LABELED_STMT(DoCatch, LabeledStmt)
  LABELED_STMT(RepeatWhile, LabeledStmt)
  LABELED_STMT(ForEach, LabeledStmt)
  LABELED_STMT(Switch, LabeledStmt)
  STMT_RANGE(Labeled, If, Switch)
STMT(Case, Stmt)
STMT(Break, Stmt)
STMT(Continue, Stmt)
STMT(Fallthrough, Stmt)
STMT(Fail, Stmt)
STMT(Throw, Stmt)
STMT(Discard, Stmt)
STMT(PoundAssert, Stmt)
LAST_STMT(PoundAssert)

#undef STMT_RANGE
#undef LABELED_STMT
#undef ABSTRACT_STMT
#undef STMT
#undef LAST_STMT
